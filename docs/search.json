[{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ampl-psych.github.io/EMC2/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ampl-psych.github.io/EMC2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Niek Stevenson. Author, maintainer. Michelle Donzallaz. Author. Andrew Heathcote. Author. Steven Miletić. Contributor. Jochen Voss. Contributor. Andreas Voss. Contributor.","code":""},{"path":"https://ampl-psych.github.io/EMC2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stevenson N, Donzallaz M, Heathcote (2024). EMC2: Bayesian Hierarchical Analysis Cognitive Models Choice. R package version 2.0.2.","code":"@Manual{,   title = {EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice},   author = {Niek Stevenson and Michelle Donzallaz and Andrew Heathcote},   year = {2024},   note = {R package version 2.0.2}, }"},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"emc2-extended-models-of-choice-2","dir":"","previous_headings":"","what":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"R package EMC2 provides tools perform Bayesian hierarchical analyses following cognitive models: Diffusion Decision Model (DDM), Linear Ballistic Accumulator Model (LBA), Racing Diffusion Model (RDM), Lognormal Racing Model (LNR). Specifically, package provides functionality specifying individual model designs, estimating models, examining convergence well model fit posterior prediction methods. also includes various plotting functions relative model comparison methods Bayes factors. addition, users can specify likelihood function perform non-hierarchical estimation. package uses particle metropolis Markov chain Monte Carlo sampling. hierarchical models, uses efficient Gibbs sampling population level supports variety covariance structures, extending work Gunawan colleagues (2020). ## Installation install R package, dependencies can use: remotes::install_github(\"ampl-psych/EMC2\",dependencies=TRUE)","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"workflow-overview","dir":"","previous_headings":"","what":"Workflow Overview","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"Pictured four phases EMC2cognitive model analysis associated functions (courier font).      details, please see: Stevenson, N., Donzallaz, M. C., Innes, R. J., Forstmann, B., Matzke, D., & Heathcote, . (2024, January 30). EMC2: R Package cognitive models choice. https://doi.org/10.31234/osf.io/2e4dq","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"bug-reports-contributing-and-feature-requests","dir":"","previous_headings":"","what":"Bug Reports, Contributing, and Feature Requests","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"come across bugs, ideas extensions EMC2, can add issue . like contribute package’s code, please submit pull request.","code":""},{"path":"https://ampl-psych.github.io/EMC2/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Bayesian Hierarchical Analysis of Cognitive Models of Choice","text":"Stevenson, N., Donzallaz, M. C., Innes, R. J., Forstmann, B., Matzke, D., & Heathcote, . (2024, January 30). EMC2: R Package cognitive models choice. https://doi.org/10.31234/osf.io/2e4dq Gunawan, D., Hawkins, G. E., Tran, M. N., Kohn, R., & Brown, S. D. (2020). New estimation approaches hierarchical Linear Ballistic Accumulator model. Journal Mathematical Psychology, 96, 102368. https://doi.org/10.1016/j.jmp.2020.102368","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":null,"dir":"Reference","previous_headings":"","what":"The Diffusion Decision Model — DDM","title":"The Diffusion Decision Model — DDM","text":"Model file estimate Diffusion Decision Model (DDM) EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Diffusion Decision Model — DDM","text":"","code":"DDM()"},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Diffusion Decision Model — DDM","text":"model list necessary functions EMC2 sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Diffusion Decision Model — DDM","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed DDM()$p_types. , t0, sv, st0, s sampled log scale parameters strictly positive, Z, SZ DP sampled probit scale strictly 0 1. Z estimated ratio bias one boundary 0.5 means bias. DP comprises difference non-decision time response option. Conventionally, sv fixed 1 satisfy scaling constraints. See Ratcliff, R., & McKoon, G. (2008). diffusion decision model: theory data two-choice decision tasks. Neural computation, 20(4), 873-922. doi:10.1162/neco.2008.12-06-420.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Diffusion Decision Model — DDM","text":"","code":"design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMt0natural.html","id":null,"dir":"Reference","previous_headings":"","what":"Diffusion decision model with t0 on the natural scale — DDMt0natural","title":"Diffusion decision model with t0 on the natural scale — DDMt0natural","text":"Diffusion decision model t0 natural scale","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMt0natural.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diffusion decision model with t0 on the natural scale — DDMt0natural","text":"","code":"DDMt0natural()"},{"path":"https://ampl-psych.github.io/EMC2/reference/DDMt0natural.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diffusion decision model with t0 on the natural scale — DDMt0natural","text":"model list necessary functions sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/EMC2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice — EMC2-package","title":"EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice — EMC2-package","text":"Fit Bayesian (hierarchical) cognitive models using linear modeling language interface using particle metropolis Markov chain Monte Carlo sampling Gibbs steps. diffusion decision model (DDM), linear ballistic accumulator model (LBA), racing diffusion model (RDM), lognormal race model (LNR) supported. Additionally, users can specify likelihood function /choose non-hierarchical estimation, well diagonal, blocked full multivariate normal group-level distribution test individual differences. Prior specification facilitated methods visualize (implied) prior. wide range plotting functions assist assessing model convergence posterior inference. Models can easily evaluated using functions plot posterior predictions using relative model comparison metrics information criteria Bayes factors. References: Stevenson et al. (2024) doi:10.31234/osf.io/2e4dq .","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/EMC2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"EMC2: Bayesian Hierarchical Analysis of Cognitive Models of Choice — EMC2-package","text":"Maintainer: Niek Stevenson niek.stevenson@gmail.com (ORCID) Authors: Michelle Donzallaz Andrew Heathcote contributors: Steven Miletić [contributor] Jochen Voss [contributor] Andreas Voss [contributor]","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/IC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate information criteria (DIC, BPIC), effective number of parameters and constituent posterior deviance (D) summaries (meanD = mean of D, Dmean = D for mean of posterior parameters and minD = minimum of D). — IC","title":"Calculate information criteria (DIC, BPIC), effective number of parameters and constituent posterior deviance (D) summaries (meanD = mean of D, Dmean = D for mean of posterior parameters and minD = minimum of D). — IC","text":"Calculate information criteria (DIC, BPIC), effective number parameters constituent posterior deviance (D) summaries (meanD = mean D, Dmean = D mean posterior parameters minD = minimum D).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/IC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate information criteria (DIC, BPIC), effective number of parameters and constituent posterior deviance (D) summaries (meanD = mean of D, Dmean = D for mean of posterior parameters and minD = minimum of D). — IC","text":"","code":"IC(   emc,   stage = \"sample\",   filter = 0,   use_best_fit = TRUE,   print_summary = TRUE,   digits = 0,   subject = NULL,   group_only = FALSE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/IC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate information criteria (DIC, BPIC), effective number of parameters and constituent posterior deviance (D) summaries (meanD = mean of D, Dmean = D for mean of posterior parameters and minD = minimum of D). — IC","text":"emc emc object list stage string. Specifies stage want plot. filter integer vector. integer, iterations value set filter excluded. vector supplied, iterations vector considered. use_best_fit Boolean, default TRUE use best minD Dmean calculation otherwise always use Dmean print_summary Boolean (default TRUE) print table results digits Integer, significant digits printed table subject Integer string selecting single subject, default NULL returns sums subjects group_only Boolean. TRUE calculate IC group-level ","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/IC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate information criteria (DIC, BPIC), effective number of parameters and constituent posterior deviance (D) summaries (meanD = mean of D, Dmean = D for mean of posterior parameters and minD = minimum of D). — IC","text":"Table DIC, BPIC, EffectiveN, meanD, Dmean, minD","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":null,"dir":"Reference","previous_headings":"","what":"The Linear Ballistic Accumulator model — LBA","title":"The Linear Ballistic Accumulator model — LBA","text":"Model file estimate Linear Ballistic Accumulator (LBA) EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Linear Ballistic Accumulator model — LBA","text":"","code":"LBA()"},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Linear Ballistic Accumulator model — LBA","text":"model list necessary functions EMC2 sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Linear Ballistic Accumulator model — LBA","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed LBA()$p_types. parameters estimated log scale, except drift rate estimated real line. Conventionally, sv fixed 1 satisfy scaling constraints. b = B + parameterization ensures response threshold always higher trial variation start point drift rate. LBA race model, one accumulator per response option. EMC2 automatically constructs factor representing accumulators lR (.e., latent response) level names taken R column data. lR factor mainly used allow response bias, analogous Z DDM. example, LBA, response thresholds determined B parameters, B~lR allows different thresholds accumulator corresponding left right stimuli (e.g., bias respond left occurs left threshold less right threshold). race models, design() argument matchfun can provided, function takes lR factor (defined augmented data (d) following function) returns logical defining correct response. example , match simply S factor equals latent response factor: matchfun=function(d)d$S==d$lR. matchfun used automatically create latent match (lM) factor levels FALSE (.e., stimulus match accumulator) TRUE (.e., stimulus match accumulator). added internally can also used model formula, typically parameters related rate accumulation. Brown, S. D., & Heathcote, . (2008). simplest complete model choice response time: Linear ballistic accumulation. Cognitive Psychology, 57(3), 153-178. https://doi.org/10.1016/j.cogpsych.2007.12.002","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LBA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Linear Ballistic Accumulator model — LBA","text":"","code":"# When working with lM it is useful to design  an \"average and difference\" # contrast matrix, which for binary responses has a simple canonical from: ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR # We now construct our design, with v ~ lM and the contrast for lM the ADmat. design_LBABE <- design(data = forstmann,model=LBA,matchfun=matchfun,                        formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~1),                        contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMd\"       \"sv_lMTRUE\"   \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMd #>   TRUE 1   0.5 #>  FALSE 1  -0.5 #>  #> $sv #>     lM sv sv_lMTRUE #>   TRUE  1         1 #>  FALSE  1         0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":null,"dir":"Reference","previous_headings":"","what":"The Log-Normal Race Model — LNR","title":"The Log-Normal Race Model — LNR","text":"Model file estimate Log-Normal Race Model (LNR) EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Log-Normal Race Model — LNR","text":"","code":"LNR()"},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Log-Normal Race Model — LNR","text":"model list necessary functions EMC2 sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Log-Normal Race Model — LNR","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed LNR()$p_types. LNR race model, one accumulator per response option. EMC2 automatically constructs factor representing accumulators lR (.e., latent response) level names taken R column data. design(), matchfun can used automatically create latent match (lM) factor levels FALSE (.e., stimulus match accumulator) TRUE (.e., stimulus match accumulator). added internally can also used model formula, typically parameters related rate accumulation (see example ). Rouder, J. N., Province, J. M., Morey, R. D., Gomez, P., & Heathcote, . (2015). lognormal race: cognitive-process model choice latency desirable psychometric properties. Psychometrika, 80, 491-513. https://doi.org/10.1007/s11336-013-9396-3","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/LNR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Log-Normal Race Model — LNR","text":"","code":"# When working with lM it is useful to design  an \"average and difference\" # contrast matrix, which for binary responses has a simple canonical from: ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR # We now construct our design, with v ~ lM and the contrast for lM the ADmat. design_LNRmE <- design(data = forstmann,model=LNR,matchfun=matchfun,                        formula=list(m~lM + E,s~1,t0~1),                        contrasts=list(m=list(lM=ADmat))) #>  #>  Sampled Parameters:  #> [1] \"m\"           \"m_lMd\"       \"m_Eneutral\"  \"m_Eaccuracy\" \"s\"           #> [6] \"t0\"          #>  #>  Design Matrices:  #> $m #>     lM        E m m_lMd m_Eneutral m_Eaccuracy #>   TRUE    speed 1   0.5          0           0 #>  FALSE    speed 1  -0.5          0           0 #>   TRUE  neutral 1   0.5          1           0 #>  FALSE  neutral 1  -0.5          1           0 #>   TRUE accuracy 1   0.5          0           1 #>  FALSE accuracy 1  -0.5          0           1 #>  #> $s #>  s #>  1 #>  #> $t0 #>  t0 #>   1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":null,"dir":"Reference","previous_headings":"","what":"The Racing Diffusion Model — RDM","title":"The Racing Diffusion Model — RDM","text":"Model file estimate Racing Diffusion Model (RDM), also known Racing Wald Model.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Racing Diffusion Model — RDM","text":"","code":"RDM()"},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Racing Diffusion Model — RDM","text":"list defining cognitive model","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Racing Diffusion Model — RDM","text":"Model files almost exclusively used design(). Default values used parameters explicitly listed formula argument design().can also accessed RDM()$p_types. parameters estimated log scale. parameterization b = B + ensures response threshold always higher trial variation start point. Conventionally, s fixed 1 satisfy scaling constraints. RDM race model, one accumulator per response option. EMC2 automatically constructs factor representing accumulators lR (.e., latent response) level names taken R column data. lR factor mainly used allow response bias, analogous Z DDM. example, RDM, response thresholds determined B parameters, B~lR allows different thresholds accumulator corresponding \"left\" \"right\" stimuli, example, (e.g., bias respond left occurs left threshold less right threshold). race models general, argument matchfun can provided design(). One needs supply function takes lR factor (defined augmented data (d) following function) returns logical defining correct response. example , simply whether S factor equals latent response factor: matchfun=function(d)d$S==d$lR. Using matchfun latent match factor (lM) levels FALSE (.e., stimulus match accumulator) TRUE (.e., stimulus match accumulator). added internally can also used model formula, typically parameters related rate accumulation. Tillman, G., Van Zandt, T., & Logan, G. D. (2020). Sequential sampling models without random -trial variability: racing diffusion model speeded decision making. Psychonomic Bulletin & Review, 27(5), 911-936. https://doi.org/10.3758/s13423-020-01719-6","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/RDM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Racing Diffusion Model — RDM","text":"","code":"# When working with lM it is useful to design  an \"average and difference\" # contrast matrix, which for binary responses has a simple canonical from: ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"d\")) # We also define a match function for lM matchfun=function(d)d$S==d$lR # We now construct our design, with v ~ lM and the contrast for lM the ADmat. design_RDMBE <- design(data = forstmann,model=RDM,matchfun=matchfun,                        formula=list(v~lM,s~lM,B~E+lR,A~1,t0~1),                        contrasts=list(v=list(lM=ADmat)),constants=c(s=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMd\"       \"s_lMTRUE\"    \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMd #>   TRUE 1   0.5 #>  FALSE 1  -0.5 #>  #> $s #>     lM s s_lMTRUE #>   TRUE 1        1 #>  FALSE 1        0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>  # For all parameters that are not defined in the formula, default values are assumed # (see Table above)."},{"path":"https://ampl-psych.github.io/EMC2/reference/add_constants.html","id":null,"dir":"Reference","previous_headings":"","what":"Augments parameter matrix or vector p with constant parameters (also used in data) — add_constants","title":"Augments parameter matrix or vector p with constant parameters (also used in data) — add_constants","text":"Augments parameter matrix vector p constant parameters (also used data)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/add_constants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augments parameter matrix or vector p with constant parameters (also used in data) — add_constants","text":"","code":"add_constants(p, constants)"},{"path":"https://ampl-psych.github.io/EMC2/reference/add_constants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augments parameter matrix or vector p with constant parameters (also used in data) — add_constants","text":"p either matrix vector parameters constants named vector constants","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/add_constants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augments parameter matrix or vector p with constant parameters (also used in data) — add_constants","text":"matrix vector, depending input, varying parameters constants combined.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_burn.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs burn-in for emc. — auto_burn","title":"Runs burn-in for emc. — auto_burn","text":"Special instance run_emc, default arguments specified completing burn_in. run preburn burn.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_burn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs burn-in for emc. — auto_burn","text":"","code":"auto_burn(   emc,   preburn = 150,   p_accept = 0.8,   step_size = 100,   verbose = FALSE,   verboseProgress = FALSE,   fileName = NULL,   stop_criteria = NULL,   particles = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   n_blocks = 1 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_burn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs burn-in for emc. — auto_burn","text":"emc emc object preburn integer. number iterations run preburn stage. p_accept double. target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. Defaults .8 step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. verboseProgress Logical. Whether print progress bar within step . print one progress bar chain cores_for_chains = 1. fileName string. specified autosave emc location every iteration. stop_criteria list. Defines stopping criteria types parameters hold. See ?fit. particles integer. many particles use, default NULL particle_factor used instead. specified override particle_factor. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. n_blocks integer. Number blocks. block parameter chains updated blocks. can helpful extremely tough models large number parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/auto_burn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs burn-in for emc. — auto_burn","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":null,"dir":"Reference","previous_headings":"","what":"chain_n() — chain_n","title":"chain_n() — chain_n","text":"Returns matrix number samples per chain stage present emc object (.e., preburn, burn, adapt, sample). number rows matrix reflects number chains number columns number sampling stages.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"chain_n() — chain_n","text":"","code":"chain_n(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"chain_n() — chain_n","text":"emc list, output fit().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"chain_n() — chain_n","text":"matrix","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/chain_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"chain_n() — chain_n","text":"","code":"chain_n(samples_LNR) #>      preburn burn adapt sample #> [1,]       0    0     0     50 #> [2,]       0    0     0     50 #> [3,]       0    0     0     50"},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":null,"dir":"Reference","previous_headings":"","what":"Convergence checks for an emc object — check.emc","title":"Convergence checks for an emc object — check.emc","text":"Runs series convergence checks, prints statistics console, makes traceplots worst converged parameter per selection.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convergence checks for an emc object — check.emc","text":"","code":"# S3 method for class 'emc' check(   emc,   selection = c(\"mu\", \"sigma2\", \"alpha\"),   digits = 3,   plot_worst = TRUE,   ... )  check(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convergence checks for an emc object — check.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). digits Integer. many digits round ESS Rhat plots plot_worst Boolean. TRUE also plots chain plots worst parameter ... Optional arguments can passed get_pars plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convergence checks for an emc object — check.emc","text":"list statistics worst converged parameter per selection","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convergence checks for an emc object — check.emc","text":"Note Rhat calculated doubling number chains first splitting chains first second half, also test stationarity. Efficiency sampling indicated effective sample size (ESS) (coda R package). Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convergence checks for an emc object — check.emc","text":"","code":"check(samples_LNR) #> Iterations: #>      preburn burn adapt sample #> [1,]       0    0     0     50 #> [2,]       0    0     0     50 #> [3,]       0    0     0     50 #>  #>  mu  #>            m   m_lMd       s      t0 #> Rhat   1.031   1.015   1.045   1.037 #> ESS  425.000 233.000 150.000 150.000 #>  #>  sigma2  #>           m   m_lMd       s      t0 #> Rhat  1.255   1.044   1.036   1.067 #> ESS  46.000 150.000 150.000 130.000 #>  #>  alpha highest Rhat : as1t  #>          m   m_lMd      s     t0 #> Rhat  1.14   1.046  1.087  1.106 #> ESS  57.00 116.000 69.000 53.000"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Information criteria and marginal likelihoods — compare","title":"Information criteria and marginal likelihoods — compare","text":"Returns BPIC/DIC marginal deviance (-2*marginal likelihood) list samples objects.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information criteria and marginal likelihoods — compare","text":"","code":"compare(   sList,   stage = \"sample\",   filter = NULL,   use_best_fit = TRUE,   BayesFactor = TRUE,   cores_for_props = 4,   cores_per_prop = 1,   print_summary = TRUE,   digits = 0,   digits_p = 3,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information criteria and marginal likelihoods — compare","text":"sList List samples objects stage string. Specifies stage samples taken \"preburn\", \"burn\", \"adapt\", \"sample\" filter integer vector. integer, iterations value set filter excluded. vector supplied, iterations vector considered. use_best_fit Boolean, defaults TRUE, uses minimal mean likelihood (whichever better) calculation, otherwise always uses mean likelihood. BayesFactor Boolean, defaults TRUE. Include marginal likelihoods estimated using WARP-III bridge sampling. Usually takes minute per model added calculate cores_for_props Integer, many cores use Bayes factor calculation, 4 default 4 different proposal densities evaluate, 1, 2 4 sensible. cores_per_prop Integer, many cores use Bayes factor calculation 4 cores available. Cores used cores_for_props * cores_per_prop. Best prioritize cores_for_props 4 2 print_summary Boolean (default TRUE), print table results digits Integer, significant digits printed table information criteria digits_p Integer, significant digits printed table model weights ... Additional, optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information criteria and marginal likelihoods — compare","text":"Matrix effective number parameters, mean deviance, deviance mean, DIC, BPIC, Marginal Deviance (BayesFactor=TRUE) associated weights.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information criteria and marginal likelihoods — compare","text":"","code":"if (FALSE) { # \\dontrun{ # Define a list of two (or more different models) # Here the full model is an emc object with the hypothesized effect # The null model is an emc object without the hypothesized effect design_full <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) # Now without a ~ E design_null <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~1, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1)))  full_model <- make_emc(forstmann, design_full) full_model <- fit(full_model)  null_model <- make_emc(forstmann, design_null) null_model <- fit(null_model) sList <- list(full_model, null_model) # By default emc uses 4 cores to parallelize marginal likelihood estimation across proposals # So cores_per_prop = 3 results in 12 cores used. compare(sList, cores_per_prop = 3) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_MLL.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a table of model probabilities based for a list of samples objects based on samples of marginal log-likelihood (MLL) added to these objects by run_IS2. Probabilities estimated by a bootstrap ath picks a vector of MLLs, one for each model in the list randomly with replacement nboot times, calculates model probabilities and averages — compare_MLL","title":"Calculate a table of model probabilities based for a list of samples objects based on samples of marginal log-likelihood (MLL) added to these objects by run_IS2. Probabilities estimated by a bootstrap ath picks a vector of MLLs, one for each model in the list randomly with replacement nboot times, calculates model probabilities and averages — compare_MLL","text":"Calculate table model probabilities based list samples objects based samples marginal log-likelihood (MLL) added objects run_IS2. Probabilities estimated bootstrap ath picks vector MLLs, one model list randomly replacement nboot times, calculates model probabilities averages","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_MLL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a table of model probabilities based for a list of samples objects based on samples of marginal log-likelihood (MLL) added to these objects by run_IS2. Probabilities estimated by a bootstrap ath picks a vector of MLLs, one for each model in the list randomly with replacement nboot times, calculates model probabilities and averages — compare_MLL","text":"","code":"compare_MLL(mll, nboot = 1e+05, digits = 2, print_summary = TRUE)"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_MLL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a table of model probabilities based for a list of samples objects based on samples of marginal log-likelihood (MLL) added to these objects by run_IS2. Probabilities estimated by a bootstrap ath picks a vector of MLLs, one for each model in the list randomly with replacement nboot times, calculates model probabilities and averages — compare_MLL","text":"mll List samples objects IS_samples attribute added run_IS2 nboot Integer number bootstrap samples, default (1e5) usually gives stable results 2 decimal places. digits Integer, significant digits printed table print_summary Boolean (default TRUE) print table results","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_MLL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a table of model probabilities based for a list of samples objects based on samples of marginal log-likelihood (MLL) added to these objects by run_IS2. Probabilities estimated by a bootstrap ath picks a vector of MLLs, one for each model in the list randomly with replacement nboot times, calculates model probabilities and averages — compare_MLL","text":"Vector model probabilities names samples list.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":null,"dir":"Reference","previous_headings":"","what":"Information criteria for each participant — compare_subject","title":"Information criteria for each participant — compare_subject","text":"Returns BPIC/DIC based model weights participant list samples objects","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Information criteria for each participant — compare_subject","text":"","code":"compare_subject(   sList,   stage = \"sample\",   filter = 0,   use_best_fit = TRUE,   print_summary = TRUE,   digits = 3 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Information criteria for each participant — compare_subject","text":"sList List samples objects stage string. Specifies stage samples taken \"preburn\", \"burn\", \"adapt\", \"sample\" filter integer vector. integer, iterations value set filter excluded. vector supplied, iterations vector considered. use_best_fit Boolean, defaults TRUE, use minimal likelihood mean likelihood (whichever better) calculation, otherwise always uses mean likelihood. print_summary Boolean (defaults TRUE) print table results digits Integer, significant digits printed table","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Information criteria for each participant — compare_subject","text":"List matrices subject effective number parameters, mean deviance, deviance mean, DIC, BPIC associated weights.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/compare_subject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Information criteria for each participant — compare_subject","text":"","code":"if (FALSE) { # \\dontrun{ # Define a list of two (or more different models) # Here the full model is an emc object with the hypothesized effect # The null model is an emc object without the hypothesized effect design_full <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) # Now without a ~ E design_null <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~1, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1)))  full_model <- make_emc(forstmann, design_full) full_model <- fit(full_model, cores_for_chains = 1)  null_model <- make_emc(forstmann, design_null, cores_for_chains = 1) null_model <- fit(null_model) sList <- list(full_model, null_model) compare_subject(sList) # prints a set of weights for each model for the different participants # And returns the DIC and BPIC for each participant for each model. } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":null,"dir":"Reference","previous_headings":"","what":"Anova style contrast matrix — contr.anova","title":"Anova style contrast matrix — contr.anova","text":"Similar contr.helmert, scaled estimate differences conditions. Use design().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anova style contrast matrix — contr.anova","text":"","code":"contr.anova(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anova style contrast matrix — contr.anova","text":"n integer. number items create contrast","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anova style contrast matrix — contr.anova","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anova style contrast matrix — contr.anova","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.anova), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E1\"     \"a_E2\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a a_E1  a_E2 #>     speed 1 -0.5 -0.25 #>   neutral 1  0.5 -0.25 #>  accuracy 1  0.0  0.50 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast to enforce equal prior variance on each level — contr.bayes","title":"Contrast to enforce equal prior variance on each level — contr.bayes","text":"Typical contrasts impose different levels marginal prior variance different levels. contrast can used ensure level equal marginal priors (Rouder, Morey, Speckman, & Province; 2012).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast to enforce equal prior variance on each level — contr.bayes","text":"","code":"contr.bayes(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast to enforce equal prior variance on each level — contr.bayes","text":"n integer. number items create contrast","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast to enforce equal prior variance on each level — contr.bayes","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.bayes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast to enforce equal prior variance on each level — contr.bayes","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.bayes), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E1\"     \"a_E2\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a       a_E1       a_E2 #>     speed 1  0.0000000  0.8164966 #>   neutral 1 -0.7071068 -0.4082483 #>  accuracy 1  0.7071068 -0.4082483 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast to enforce decreasing estimates — contr.decreasing","title":"Contrast to enforce decreasing estimates — contr.decreasing","text":"level estimated reduction previous level","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast to enforce decreasing estimates — contr.decreasing","text":"","code":"contr.decreasing(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast to enforce decreasing estimates — contr.decreasing","text":"n integer. number items create contrast.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast to enforce decreasing estimates — contr.decreasing","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.decreasing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast to enforce decreasing estimates — contr.decreasing","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.decreasing), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E2\"     \"a_E3\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a a_E2 a_E3 #>     speed 1    1    1 #>   neutral 1    1    0 #>  accuracy 1    0    0 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast to enforce increasing estimates — contr.increasing","title":"Contrast to enforce increasing estimates — contr.increasing","text":"level estimated additively previous level","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast to enforce increasing estimates — contr.increasing","text":"","code":"contr.increasing(n)"},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast to enforce increasing estimates — contr.increasing","text":"n integer. number items create contrast.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast to enforce increasing estimates — contr.increasing","text":"contrast matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/contr.increasing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contrast to enforce increasing estimates — contr.increasing","text":"","code":"{ design_DDMaE <- design(data = forstmann,model=DDM, contrasts = list(E = contr.increasing), formula =list(v~S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1), constants=c(s=log(1))) } #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v\"        \"v_Sright\" \"a\"        \"a_E2\"     \"a_E3\"     \"t0\"       \"Z\"        #> [8] \"sv\"       \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v v_Sright #>   left 1        0 #>  right 1        1 #>  #> $a #>         E a a_E2 a_E3 #>     speed 1    0    0 #>   neutral 1    1    0 #>  accuracy 1    1    1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior credible interval tests — credible.emc","title":"Posterior credible interval tests — credible.emc","text":"Modeled t.test, returns credible interval parameter test proportion posterior distribution (difference posterior distributions case two sample test) overlaps mu. one sample test provide x two sample also provide y. Note comparisons within one model, recommend using hypothesis() priors well chosen.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior credible interval tests — credible.emc","text":"","code":"# S3 method for class 'emc' credible(   x,   x_name = NULL,   x_fun = NULL,   x_fun_name = \"fun\",   selection = \"mu\",   y = NULL,   y_name = NULL,   y_fun = NULL,   y_fun_name = \"fun\",   x_subject = NULL,   y_subject = NULL,   mu = 0,   alternative = c(\"less\", \"greater\")[1],   probs = c(0.025, 0.5, 0.975),   digits = 2,   p_digits = 3,   print_table = TRUE,   ... )  credible(x, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior credible interval tests — credible.emc","text":"x emc object x_name character string. Name parameter tested x x_fun Function applied MCMC chains create variable tested. x_fun_name Name give quantity calculated x_fun selection character string designating parameter type (e.g. alpha covariance) y second emc object y_name character string. Name parameter tested y y_fun Function applied MCMC chains create variable tested. y_fun_name Name give quantity calculated y_fun x_subject Integer name selecting subject y_subject Integer name selecting subject mu Numeric. NULL value single sample test y supplied (default 0) alternative less greater determining direction test probability probs Vector defining quantiles return. digits Integer, significant digits estimates printed results p_digits Integer, significant digits probability printed results print_table Boolean (defaults TRUE) printing results table ... Additional optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior credible interval tests — credible.emc","text":"Invisible results table rounding.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/credible.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior credible interval tests — credible.emc","text":"","code":"if (FALSE) { # \\dontrun{ # Run a credible interval test (Bayesian ''t-test'') # Here the full model is an emc object with the hypothesized effect design_full <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1)))  full_model <- make_emc(forstmann, design_full) full_model <- fit(full_model) credible(full_model, x_name = \"v\") # We can also compare between two sets of emc objects # Now without a ~ E design_null <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~1, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1)))  null_model <- make_emc(forstmann, design_null) null_model <- fit(null_model) credible(x = null_model, x_name = \"a\", y = full_model, y_name = \"a\")  # Or provide custom functions credible(x = full_model, x_fun = function(d) d[\"a_Eaccuracy\"] - d[\"a_Eneutral\"]) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify a design and model — design","title":"Specify a design and model — design","text":"function combines information regarding data, type model, model specification.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify a design and model — design","text":"","code":"design(   formula = NULL,   factors = NULL,   Rlevels = NULL,   model,   data = NULL,   contrasts = NULL,   matchfun = NULL,   constants = NULL,   covariates = NULL,   functions = NULL,   report_p_vector = TRUE,   custom_p_vector = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify a design and model — design","text":"formula list. Contains design formulae format list(y ~ x, ~ z). factors named list containing factor variables span design cells taken account model. name subjects must used indicate participant factor variable, also data. Example: list(subjects=levels(dat$subjects), condition=levels(dat$condition)) Rlevels character vector. Contains response factor levels. Example: c(\"right\", \"left\") model function, specifies model type. Choose drift diffusion model (DDM(), DDMt0natural()), log-normal race model (LNR()), linear ballistic model (LBA()), racing diffusion model (RDM(), RDMt0natural()), define model functions. data data frame. data can used automatically detect factors, Rlevels covariates dataset. variable R needs factor variable indicating response variable. numeric column except trials rt treated covariates, remaining factor variables internally used factors. contrasts Optional. named list specifying design matrix. Example supplying customized design matrix: list(lM = matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"diff\")))) matchfun function. needed race models. Specifies whether response correct . Example: function(d)d$S==d$lR lR refers latent response factor. constants named vector sets constants. parameter sampled_p_vector can set constant. covariates Names numeric covariates. functions List functions create new factors based factors argument. new factors can used formula. report_p_vector Boolean. TRUE (default), returns vector parameters estimated. custom_p_vector character vector. specified, custom likelihood function can supplied. ... Additional, optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify a design and model — design","text":"design list.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify a design and model — design","text":"","code":"# load example dataset dat <- forstmann  # create a function that takes the latent response (lR) factor (d) and returns a logical # defining the correct response for each stimulus. Here the match is simply # such that the S factor equals the latent response factor matchfun <- function(d)d$S==d$lR  # When working with lM and lR, it can be useful to design  an # \"average and difference\" contrast matrix. For binary responses, it has a # simple canonical form ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"diff\"))  # Create a design for a linear ballistic accumulator model (LBA) that allows # thresholds to be a function of E and lR. The final result is a 9 parameter model. design_LBABE <- design(data = dat,model=LBA,matchfun=matchfun,                             formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~1),                             contrasts=list(v=list(lM=ADmat)),                             constants=c(sv=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMdiff\"    \"sv_lMTRUE\"   \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMdiff #>   TRUE 1      0.5 #>  FALSE 1     -0.5 #>  #> $sv #>     lM sv sv_lMTRUE #>   TRUE  1         1 #>  FALSE  1         0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Effective sample size — ess_summary.emc","title":"Effective sample size — ess_summary.emc","text":"Returns effective sample size (ESS) selected parameter type. Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Effective sample size — ess_summary.emc","text":"","code":"# S3 method for class 'emc' ess_summary(   emc,   selection = \"mu\",   stat = \"min\",   stat_only = FALSE,   digits = 1,   ... )  ess_summary(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Effective sample size — ess_summary.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). stat string. correspond function can applied vector, performed vector/rows columns matrix parameters stat_only Boolean. TRUE return result applied stat function, otherwise returns stat result result function parameters. digits Integer. many digits round output ... Optional additional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Effective sample size — ess_summary.emc","text":"matrix vector ESS values selected parameter type.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/ess_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Effective sample size — ess_summary.emc","text":"","code":"ess_summary(samples_LNR, selection = \"alpha\") #>        as1t  bd6t  bl1t   min #> m      56.8 177.7 216.7  56.8 #> m_lMd 116.0 131.8 185.1 116.0 #> s      69.3 195.7 173.2  69.3 #> t0     53.1 188.1 177.1  53.1 #> min    53.1 131.8 173.2  53.1"},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Model estimation in EMC2 — fit.emc","title":"Model estimation in EMC2 — fit.emc","text":"General purpose function estimate models specified EMC2.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model estimation in EMC2 — fit.emc","text":"","code":"# S3 method for class 'emc' fit(   emc,   stage = NULL,   iter = 1000,   stop_criteria = NULL,   report_time = TRUE,   p_accept = 0.8,   step_size = 100,   verbose = TRUE,   verboseProgress = FALSE,   fileName = NULL,   particles = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   n_blocks = 1,   ... )  fit(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model estimation in EMC2 — fit.emc","text":"emc emc object created make_emc, path emc object stored. stage string. Indicates stage start run , either preburn, burn, adapt sample. unspecified, run subsequent stage (one). iter integer. Indicates many iterations run sampling stage. stop_criteria list. Defines stopping criteria types parameters hold. See details examples section. report_time Boolean. TRUE, time taken run MCMC chains till completion stop_criteria printed. p_accept double. target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. Defaults .8 step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. verboseProgress Logical. Whether print progress bar within step . print one progress bar chain cores_for_chains = 1. fileName string. specified, auto-save emc object location every iteration. particles integer. many particles use, default NULL particle_factor used instead. specified, particle_factor overwritten. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. n_blocks integer. Number blocks. block parameter chains updated blocks. can helpful extremely tough models large number parameters. ... Additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model estimation in EMC2 — fit.emc","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Model estimation in EMC2 — fit.emc","text":"stop_criteria either list lists names stages, single list case assumed sample stage (see examples). potential stop criteria set : selection (character vector): parameters stop_criteria hold mean_gd (numeric): mean Gelman-Rubin diagnostic across parameters selection max_gd (numeric): max Gelman-Rubin diagnostic across parameters selection min_unique (integer): minimum number unique samples MCMC chains across parameters selection min_es (integer): minimum number effective samples across parameters selection omit_mpsrf (Boolean): Whether include multivariate point-scale reduction factor Gelman-Rubin diagnostic. Default FALSE. iter (integer): number MCMC samples collect. estimation performed using particle-metropolis within-Gibbs sampling. sampling details see: Gunawan, D., Hawkins, G. E., Tran, M.-N., Kohn, R., & Brown, S. (2020). New estimation approaches hierarchical linear ballistic accumulator model. Journal Mathematical Psychology ,96, 102368. doi.org/10.1016/j.jmp.2020.102368 Stevenson, N., Donzallaz, M. C., Innes, R. J., Forstmann, B., Matzke, D., & Heathcote, . (2024). EMC2: R Package cognitive models choice. doi.org/10.31234/osf.io/2e4dq","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model estimation in EMC2 — fit.emc","text":"","code":"if (FALSE) { # \\dontrun{ # First define a design design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) # Then make the emc object, we've omitted a prior here for brevity so default priors will be used. emc_forstmann <- make_emc(forstmann, design)  # With the emc object we can start sampling by simply calling fit emc_forstmann <- fit(emc_forstmann, fileName = \"intermediate_save_location.RData\")  # For particularly hard models it pays off to increase the ``particle_factor`` # and, although to a lesser extent, lower ``p_accept``. emc_forstmann <- fit(emc_forstmann, particle_factor = 100, p_accept = .6)  # Example of how to use the stop_criteria: emc_forstmann <- fit(emc_forstmann, stop_criteria = list(mean_gd = 1.1, max_gd = 1.5,             selection = c('alpha', 'sigma2'), omit_mpsrf = TRUE, min_es = 1000)) # In this case the stop_criteria are set for the sample stage, which will be # run until the mean_gd < 1.1, the max_gd < 1.5 (omitting the multivariate psrf) # and the effective sample size > 1000, # for both the individual-subject parameters (\"alpha\") # and the group-level variance parameters.  # For the unspecified stages in the ``stop_criteria`` the default values # are assumed which are found in Stevenson et al. 2024 <doi.org/10.31234/osf.io/2e4dq>  # Alternatively, you can also specify the stop_criteria for specific stages by creating a # nested list emc_forstmann <- fit(emc_forstmann, stop_criteria = list(\"burn\" = list(mean_gd = 1.1, max_gd = 1.5,             selection = c('alpha')), \"adapt\" = list(min_unique = 100))) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":null,"dir":"Reference","previous_headings":"","what":"Forstmann et al.'s data — forstmann","title":"Forstmann et al.'s data — forstmann","text":"dataset containing speed accuracy manipulation Random Dot Motion experiment.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forstmann et al.'s data — forstmann","text":"","code":"forstmann"},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Forstmann et al.'s data — forstmann","text":"data frame 15818 rows 5 variables: E Factor 3 levels Speed, Accuracy Neutral R Factor 2 levels Left Right responses S Factor 2 levels Left Right trials rt reaction time trial double subjects integer ID subject","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Forstmann et al.'s data — forstmann","text":"https://www.pnas.org/doi/10.1073/pnas.0805903105","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/forstmann.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forstmann et al.'s data — forstmann","text":"Details dataset can found following paper: Striatum pre-SMA facilitate decision-making time pressure Birte U. Forstmann, Gilles Dutilh, Scott Brown, Jane Neumann, D. Yves von Cramon, K. Richard Ridderinkhof, Eric-Jan Wagenmakers. Proceedings National Academy Sciences Nov 2008, 105 (45) 17538-17542; DOI: 10.1073/pnas.0805903105","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Gelman-Rubin statistic — gd_summary.emc","title":"Gelman-Rubin statistic — gd_summary.emc","text":"Returns Gelman-Rubin diagnostics (otherwise known R-hat) selected parameter type; .e. ratio within MCMC chain variance.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gelman-Rubin statistic — gd_summary.emc","text":"","code":"# S3 method for class 'emc' gd_summary(   emc,   selection = \"mu\",   omit_mpsrf = TRUE,   stat = \"max\",   stat_only = FALSE,   digits = 3,   ... )  gd_summary(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gelman-Rubin statistic — gd_summary.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). omit_mpsrf Boolean. TRUE also returns multivariate point scale reduction factor (see ?coda::gelman.diag). stat string. correspond function can applied vector, performed vector/rows columns matrix parameters stat_only Boolean. TRUE return result applied stat function, otherwise returns stat result result function parameters. digits Integer. many digits round output ... Optional additional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gelman-Rubin statistic — gd_summary.emc","text":"matrix vector R-hat values selected parameter type.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gelman-Rubin statistic — gd_summary.emc","text":"See: Gelman, Rubin, DB (1992) Inference iterative simulation using multiple sequences, Statistical Science, 7, 457-511. Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/gd_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gelman-Rubin statistic — gd_summary.emc","text":"","code":"gd_summary(samples_LNR, selection = \"correlation\", stat = \"mean\", flatten = TRUE) #>             m_lMd.m   s.m t0.m s.m_lMd t0.m_lMd  t0.s  mean #> correlation   1.044 1.048  1.1   1.016     1.01 0.987 1.034"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes Factors — get_BayesFactor","title":"Bayes Factors — get_BayesFactor","text":"returns Bayes Factor two models","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes Factors — get_BayesFactor","text":"","code":"get_BayesFactor(MLL1, MLL2)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes Factors — get_BayesFactor","text":"MLL1 Numeric. Marginal likelihood model 1. Obtained run_bridge_sampling() MLL2 Numeric. Marginal likelihood model 2. Obtained run_bridge_sampling()","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes Factors — get_BayesFactor","text":"BayesFactor model 1 model 2","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_BayesFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bayes Factors — get_BayesFactor","text":"","code":"if (FALSE) { # \\dontrun{ # First get the marginal likelihood for two_models # Here the full model is an emc object with the hypothesized effect # The null model is an emc object without the hypothesized effect MLL_full <- run_bridge_sampling(full_model, cores_per_prop = 3) MLL_null <- run_bridge_sampling(null_model, cores_per_prop = 3) # Now we can calculate their Bayes factor get_BayesFactor(MLL_full, MLL_null) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data — get_data.emc","title":"Get data — get_data.emc","text":"Extracts data emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data — get_data.emc","text":"","code":"# S3 method for class 'emc' get_data(emc)  get_data(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data — get_data.emc","text":"emc emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data — get_data.emc","text":"dataframe original data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get data — get_data.emc","text":"emc adds columns rows dataframe order facilitate efficient likelihood calculations. function return data provided originally.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get data — get_data.emc","text":"","code":"get_data(samples_LNR) #>      subjects        E     S     R   rt #> 1        as1t accuracy right right 0.44 #> 3        as1t    speed right right 0.50 #> 5        as1t    speed  left  left 0.32 #> 7        as1t accuracy right right 0.48 #> 9        as1t accuracy  left  left 0.34 #> 11       as1t accuracy  left  left 0.34 #> 13       as1t  neutral  left  left 0.36 #> 15       as1t  neutral right right 0.40 #> 17       as1t  neutral  left  left 0.38 #> 19       as1t accuracy right right 0.36 #> 21       as1t accuracy right right 0.38 #> 23       as1t  neutral  left  left 0.36 #> 25       as1t accuracy  left right 0.32 #> 27       as1t accuracy  left  left 0.42 #> 29       as1t  neutral right right 0.52 #> 31       as1t    speed right  left 0.42 #> 33       as1t accuracy right right 0.48 #> 35       as1t    speed right  left 0.44 #> 37       as1t accuracy right right 0.38 #> 39       as1t    speed  left  left 0.52 #> 41       as1t accuracy right right 0.48 #> 43       as1t  neutral  left  left 0.60 #> 45       as1t  neutral  left  left 0.38 #> 47       as1t    speed  left  left 0.50 #> 49       as1t accuracy right right 0.46 #> 51       as1t  neutral right  left 0.32 #> 53       as1t accuracy  left right 0.48 #> 55       as1t  neutral  left  left 0.30 #> 57       as1t  neutral right right 0.52 #> 59       as1t    speed  left  left 0.28 #> 61       as1t    speed  left  left 0.44 #> 63       as1t  neutral right right 0.42 #> 65       as1t    speed  left  left 0.32 #> 67       as1t accuracy  left  left 0.42 #> 69       as1t accuracy  left  left 0.42 #> 71       as1t    speed right right 0.34 #> 73       as1t  neutral right  left 0.32 #> 75       as1t accuracy right right 0.46 #> 77       as1t    speed  left  left 0.52 #> 79       as1t  neutral right right 0.42 #> 81       as1t    speed right  left 0.42 #> 83       as1t    speed  left  left 0.50 #> 85       as1t  neutral right right 0.42 #> 87       as1t  neutral right right 0.40 #> 89       as1t  neutral right right 0.58 #> 91       as1t accuracy  left  left 0.42 #> 93       as1t    speed  left  left 0.44 #> 95       as1t accuracy right right 0.48 #> 97       as1t  neutral right right 0.40 #> 99       as1t    speed right right 0.50 #> 101      as1t    speed  left  left 0.32 #> 103      as1t  neutral right right 0.78 #> 105      as1t accuracy right right 0.46 #> 107      as1t  neutral  left  left 0.46 #> 109      as1t accuracy right right 0.54 #> 111      as1t    speed right right 0.50 #> 113      as1t    speed  left  left 0.32 #> 115      as1t    speed right right 0.56 #> 117      as1t accuracy right  left 0.60 #> 119      as1t accuracy right right 0.46 #> 121      as1t    speed right  left 0.36 #> 123      as1t accuracy right  left 0.60 #> 125      as1t    speed  left  left 0.52 #> 127      as1t  neutral  left  left 0.40 #> 129      as1t  neutral  left  left 0.46 #> 131      as1t accuracy  left  left 0.48 #> 133      as1t    speed  left  left 0.56 #> 135      as1t  neutral right  left 0.48 #> 137      as1t  neutral  left  left 0.46 #> 139      as1t  neutral  left  left 0.40 #> 141      as1t    speed right right 0.50 #> 143      as1t    speed  left  left 0.44 #> 145      as1t  neutral right right 0.42 #> 147      as1t  neutral right  left 0.72 #> 149      as1t    speed  left right 0.50 #> 151      as1t    speed  left  left 0.44 #> 153      as1t    speed right right 0.50 #> 155      as1t  neutral  left  left 0.38 #> 157      as1t accuracy right right 0.46 #> 159      as1t    speed right  left 0.42 #> 161      as1t    speed  left  left 0.44 #> 163      as1t accuracy right right 0.48 #> 165      as1t accuracy  left  left 0.70 #> 167      as1t  neutral right right 0.52 #> 169      as1t    speed right right 0.60 #> 171      as1t    speed right  left 0.34 #> 173      as1t accuracy  left right 0.56 #> 175      as1t    speed  left  left 0.44 #> 177      as1t accuracy right right 0.46 #> 179      as1t accuracy  left  left 0.42 #> 181      as1t accuracy right right 0.46 #> 183      as1t    speed  left right 0.26 #> 185      as1t    speed  left right 0.30 #> 187      as1t accuracy right right 0.48 #> 189      as1t    speed  left  left 0.32 #> 191      as1t  neutral right  left 0.40 #> 193      as1t  neutral  left  left 0.40 #> 195      as1t    speed  left  left 0.50 #> 197      as1t accuracy  left  left 0.48 #> 199      as1t  neutral right right 0.52 #> 201      as1t accuracy right right 0.46 #> 203      as1t accuracy right right 0.48 #> 205      as1t  neutral right right 0.42 #> 207      as1t accuracy right right 0.44 #> 209      as1t    speed right right 0.56 #> 211      as1t accuracy right right 0.46 #> 213      as1t  neutral  left  left 0.46 #> 215      as1t  neutral right right 0.78 #> 217      as1t  neutral right right 0.42 #> 219      as1t accuracy right right 0.38 #> 221      as1t  neutral right right 0.40 #> 223      as1t    speed  left  left 0.56 #> 225      as1t  neutral  left  left 0.36 #> 227      as1t  neutral right right 0.42 #> 229      as1t accuracy  left  left 0.48 #> 231      as1t  neutral right right 0.42 #> 233      as1t    speed right  left 0.42 #> 235      as1t accuracy  left right 0.32 #> 237      as1t  neutral right right 0.40 #> 239      as1t  neutral  left  left 0.54 #> 241      as1t accuracy right right 0.48 #> 243      as1t  neutral  left  left 0.60 #> 245      as1t accuracy  left right 0.34 #> 247      as1t accuracy right right 0.46 #> 249      as1t accuracy right right 0.48 #> 251      as1t  neutral  left  left 0.40 #> 253      as1t accuracy right right 0.36 #> 255      as1t  neutral  left  left 0.38 #> 257      as1t    speed  left  left 0.58 #> 259      as1t accuracy right right 0.38 #> 261      as1t  neutral right  left 0.46 #> 263      as1t  neutral right right 0.42 #> 265      as1t  neutral  left  left 0.46 #> 267      as1t accuracy right right 0.36 #> 269      as1t    speed right right 0.34 #> 271      as1t accuracy right right 0.48 #> 273      as1t  neutral right right 0.40 #> 275      as1t accuracy right right 0.38 #> 277      as1t  neutral  left  left 0.60 #> 279      as1t  neutral  left  left 0.46 #> 281      as1t accuracy right right 0.44 #> 283      as1t accuracy right right 0.46 #> 285      as1t  neutral  left  left 0.46 #> 287      as1t  neutral  left  left 0.40 #> 289      as1t  neutral right right 0.40 #> 291      as1t accuracy  left  left 0.64 #> 293      as1t accuracy right right 0.38 #> 295      as1t  neutral right  left 0.58 #> 297      as1t    speed  left right 0.42 #> 299      as1t  neutral right right 0.40 #> 301      as1t    speed  left right 0.42 #> 303      as1t accuracy  left right 0.78 #> 305      as1t    speed  left right 0.42 #> 307      as1t  neutral right  left 0.48 #> 309      as1t    speed  left  left 0.44 #> 311      as1t    speed  left  left 0.52 #> 313      as1t    speed right  left 0.26 #> 315      as1t    speed right  left 0.36 #> 317      as1t    speed  left right 0.28 #> 319      as1t accuracy  left right 0.46 #> 321      as1t accuracy right right 0.46 #> 323      as1t  neutral  left  left 0.40 #> 325      as1t    speed right right 0.30 #> 327      as1t  neutral  left  left 0.46 #> 329      as1t  neutral  left  left 0.68 #> 331      as1t    speed right right 0.56 #> 333      as1t    speed  left  left 0.44 #> 335      as1t  neutral  left right 0.58 #> 337      as1t    speed right right 0.56 #> 339      as1t  neutral right right 0.42 #> 341      as1t accuracy  left  left 0.48 #> 343      as1t accuracy  left  left 0.66 #> 345      as1t accuracy right right 0.48 #> 347      as1t  neutral right right 0.58 #> 349      as1t  neutral right right 0.40 #> 351      as1t  neutral right right 0.42 #> 353      as1t accuracy  left  left 0.70 #> 355      as1t accuracy  left right 0.46 #> 357      as1t accuracy right right 0.54 #> 359      as1t accuracy  left  left 0.48 #> 361      as1t  neutral right right 0.40 #> 363      as1t    speed  left  left 0.44 #> 365      as1t  neutral  left right 0.58 #> 367      as1t    speed  left  left 0.44 #> 369      as1t  neutral  left  left 0.60 #> 371      as1t    speed right  left 0.44 #> 373      as1t accuracy right right 0.48 #> 375      as1t accuracy  left right 0.36 #> 377      as1t accuracy  left right 0.52 #> 379      as1t  neutral right right 0.40 #> 381      as1t  neutral  left  left 0.68 #> 383      as1t    speed  left  left 0.80 #> 385      as1t accuracy right right 0.44 #> 387      as1t  neutral  left right 0.66 #> 389      as1t  neutral  left right 0.60 #> 391      as1t    speed right right 0.56 #> 393      as1t  neutral right  left 0.58 #> 395      as1t  neutral right right 0.52 #> 397      as1t    speed right right 0.28 #> 399      as1t    speed  left  left 0.26 #> 401      as1t    speed right  left 0.34 #> 403      as1t  neutral right right 0.42 #> 405      as1t    speed  left  left 0.52 #> 407      as1t    speed  left right 0.64 #> 409      as1t accuracy right right 0.46 #> 411      as1t  neutral  left  left 0.68 #> 413      as1t  neutral right right 0.40 #> 415      as1t accuracy right right 0.44 #> 417      as1t  neutral  left  left 0.46 #> 419      as1t  neutral  left  left 0.40 #> 421      as1t    speed right right 0.50 #> 423      as1t accuracy  left  left 0.62 #> 425      as1t accuracy right right 0.44 #> 427      as1t    speed right right 0.50 #> 429      as1t  neutral right right 0.42 #> 431      as1t    speed right right 0.28 #> 433      as1t    speed right  left 0.34 #> 435      as1t accuracy right right 0.36 #> 437      as1t    speed right right 0.50 #> 439      as1t accuracy right right 0.44 #> 441      as1t    speed  left  left 0.52 #> 443      as1t accuracy  left  left 0.42 #> 445      as1t  neutral  left right 0.60 #> 447      as1t  neutral  left  left 0.54 #> 449      as1t accuracy  left  left 0.66 #> 451      as1t    speed right right 0.56 #> 453      as1t  neutral  left  left 0.54 #> 455      as1t accuracy  left  left 0.42 #> 457      as1t  neutral  left  left 0.46 #> 459      as1t  neutral  left  left 0.40 #> 461      as1t accuracy right right 0.46 #> 463      as1t accuracy right  left 0.68 #> 465      as1t accuracy right right 0.38 #> 467      as1t accuracy right right 0.36 #> 469      as1t    speed  left  left 0.44 #> 471      as1t  neutral right right 0.40 #> 473      as1t accuracy right right 0.46 #> 475      as1t accuracy right right 0.36 #> 477      as1t accuracy right right 0.48 #> 479      as1t accuracy  left right 0.48 #> 481      as1t    speed  left  left 0.58 #> 483      as1t    speed right right 0.34 #> 485      as1t  neutral right  left 0.46 #> 487      as1t    speed  left  left 0.56 #> 489      as1t accuracy right right 0.38 #> 491      as1t  neutral  left  left 0.46 #> 493      as1t    speed right right 0.50 #> 495      as1t accuracy  left  left 0.48 #> 497      as1t    speed right right 0.50 #> 499      as1t accuracy right  left 0.54 #> 501      as1t    speed  left  left 0.44 #> 503      as1t  neutral  left  left 0.38 #> 505      as1t    speed  left right 0.50 #> 507      as1t    speed  left  left 0.44 #> 509      as1t accuracy right right 0.44 #> 511      as1t  neutral right  left 0.38 #> 513      as1t  neutral  left  left 0.68 #> 515      as1t  neutral right right 0.42 #> 517      as1t accuracy  left right 0.48 #> 519      as1t accuracy right right 0.36 #> 521      as1t    speed right right 0.56 #> 523      as1t  neutral  left  left 0.46 #> 525      as1t  neutral  left  left 0.36 #> 527      as1t accuracy right right 0.44 #> 529      as1t    speed right  left 0.42 #> 531      as1t accuracy  left  left 0.34 #> 533      as1t  neutral  left  left 0.36 #> 535      as1t accuracy right right 0.38 #> 537      as1t  neutral right  left 0.48 #> 539      as1t accuracy right right 0.36 #> 541      as1t accuracy  left  left 0.42 #> 543      as1t accuracy right right 0.36 #> 545      as1t    speed  left  left 0.44 #> 547      as1t  neutral right right 0.42 #> 549      as1t  neutral  left  left 0.54 #> 551      as1t accuracy  left  left 0.42 #> 553      as1t accuracy  left  left 0.42 #> 555      as1t accuracy  left right 0.46 #> 557      as1t accuracy  left  left 0.48 #> 559      as1t accuracy  left right 0.48 #> 561      as1t  neutral right right 0.58 #> 563      as1t accuracy  left  left 0.42 #> 565      as1t  neutral  left right 0.44 #> 567      as1t    speed right right 0.72 #> 569      as1t    speed  left right 0.64 #> 571      as1t    speed  left  left 0.44 #> 573      as1t accuracy right right 0.46 #> 575      as1t    speed right  left 0.44 #> 577      as1t  neutral  left right 0.66 #> 579      as1t  neutral  left right 0.74 #> 581      as1t    speed  left  left 0.52 #> 583      as1t  neutral right right 0.58 #> 585      as1t    speed right right 0.56 #> 587      as1t accuracy  left  left 0.48 #> 589      as1t accuracy  left  left 0.42 #> 591      as1t accuracy right right 0.44 #> 593      as1t accuracy  left  left 0.42 #> 595      as1t accuracy  left  left 0.42 #> 597      as1t  neutral right  left 0.48 #> 599      as1t accuracy  left  left 0.76 #> 601      as1t    speed  left  left 0.26 #> 603      as1t  neutral right right 0.58 #> 605      as1t    speed  left  left 0.52 #> 607      as1t accuracy right right 0.46 #> 609      as1t accuracy right right 0.36 #> 611      as1t    speed  left  left 0.52 #> 613      as1t accuracy right right 0.46 #> 615      as1t  neutral right right 0.58 #> 617      as1t  neutral  left  left 0.68 #> 619      as1t    speed right  left 0.52 #> 621      as1t accuracy right  left 0.60 #> 623      as1t accuracy  left right 0.52 #> 625      as1t accuracy  left  left 0.42 #> 627      as1t  neutral  left  left 0.40 #> 629      as1t    speed right right 0.56 #> 631      as1t    speed  left  left 0.50 #> 633      as1t    speed right right 0.64 #> 635      as1t  neutral right  left 0.86 #> 637      as1t accuracy  left  left 0.66 #> 639      as1t    speed right right 0.72 #> 641      as1t    speed right right 0.56 #> 643      as1t  neutral right right 0.40 #> 645      as1t accuracy  left  left 0.48 #> 647      as1t  neutral right right 0.40 #> 649      as1t  neutral  left  left 0.68 #> 651      as1t accuracy right right 0.48 #> 653      as1t  neutral  left  left 0.40 #> 655      as1t accuracy  left  left 0.62 #> 657      as1t accuracy right right 0.44 #> 659      as1t    speed right right 0.32 #> 661      as1t  neutral  left right 0.44 #> 663      as1t accuracy right right 0.44 #> 665      as1t accuracy right right 0.46 #> 667      as1t  neutral  left  left 0.38 #> 669      as1t  neutral right right 0.42 #> 671      as1t  neutral right right 0.66 #> 673      as1t accuracy right  left 0.54 #> 675      as1t  neutral right right 0.40 #> 677      as1t accuracy  left right 0.46 #> 679      as1t accuracy right right 0.44 #> 681      as1t  neutral  left  left 0.74 #> 683      as1t accuracy  left  left 0.78 #> 685      as1t    speed right right 0.50 #> 687      as1t    speed  left  left 0.50 #> 689      as1t accuracy right right 0.68 #> 691      as1t  neutral right right 0.52 #> 693      as1t    speed  left  left 0.50 #> 695      as1t accuracy  left right 0.46 #> 697      as1t    speed right  left 0.62 #> 699      as1t  neutral  left  left 0.46 #> 701      as1t  neutral right right 0.52 #> 703      as1t    speed right right 0.72 #> 705      as1t    speed right right 0.50 #> 707      as1t    speed  left  left 0.58 #> 709      as1t accuracy right right 0.48 #> 711      as1t accuracy right right 0.46 #> 713      as1t accuracy  left  left 0.48 #> 715      as1t    speed  left  left 0.44 #> 717      as1t    speed right right 0.60 #> 719      as1t accuracy  left  left 0.48 #> 721      as1t    speed right right 0.50 #> 723      as1t  neutral right right 0.58 #> 725      as1t  neutral  left right 0.38 #> 727      as1t accuracy  left  left 0.42 #> 729      as1t accuracy  left right 0.46 #> 731      as1t  neutral  left  left 0.46 #> 733      as1t  neutral right  left 0.48 #> 735      as1t accuracy right right 0.54 #> 737      as1t    speed right right 0.30 #> 739      as1t    speed right  left 0.30 #> 741      as1t    speed right right 0.34 #> 743      as1t accuracy right right 0.36 #> 745      as1t accuracy right right 0.48 #> 747      as1t    speed right right 0.30 #> 749      as1t    speed right  left 0.34 #> 751      as1t    speed right right 0.32 #> 753      as1t  neutral  left  left 0.40 #> 755      as1t    speed  left right 0.50 #> 757      as1t    speed  left  left 0.58 #> 759      as1t    speed  left right 0.30 #> 761      as1t    speed right right 0.50 #> 763      as1t  neutral  left right 0.58 #> 765      as1t accuracy right right 0.48 #> 767      as1t accuracy right right 0.36 #> 769      as1t accuracy right right 1.00 #> 771      as1t    speed  left  left 0.52 #> 773      as1t accuracy right right 0.48 #> 775      as1t  neutral  left  left 0.38 #> 777      as1t    speed  left  left 0.58 #> 779      as1t  neutral right right 0.58 #> 781      as1t  neutral right right 0.40 #> 783      as1t  neutral  left  left 0.60 #> 785      as1t accuracy  left right 0.54 #> 787      as1t    speed right right 0.50 #> 789      as1t  neutral  left  left 0.54 #> 791      as1t accuracy right right 0.54 #> 793      as1t  neutral right right 0.42 #> 795      as1t  neutral  left  left 0.46 #> 797      as1t accuracy right right 0.38 #> 799      as1t accuracy  left right 0.46 #> 801      as1t accuracy right right 0.44 #> 803      as1t    speed  left  left 0.56 #> 805      as1t    speed right right 0.50 #> 807      as1t    speed  left  left 0.58 #> 809      as1t accuracy  left right 0.56 #> 811      as1t accuracy  left right 0.40 #> 813      as1t accuracy  left  left 0.48 #> 815      as1t accuracy right right 0.38 #> 817      as1t  neutral right right 0.42 #> 819      as1t accuracy  left right 0.54 #> 821      as1t accuracy right right 0.44 #> 823      as1t  neutral right right 0.40 #> 825      as1t accuracy  left  left 0.48 #> 827      as1t accuracy  left  left 0.48 #> 829      as1t  neutral right right 0.62 #> 831      as1t accuracy right right 0.46 #> 833      as1t  neutral  left  left 0.54 #> 835      as1t    speed right right 0.60 #> 837      as1t accuracy  left  left 0.70 #> 839      as1t  neutral right  left 0.46 #> 841      as1t  neutral  left right 0.68 #> 843      as1t accuracy  left  left 0.70 #> 845      as1t  neutral  left  left 0.54 #> 847      as1t accuracy  left  left 0.42 #> 849      as1t    speed  left right 0.42 #> 851      as1t  neutral right right 0.52 #> 853      as1t    speed right right 0.60 #> 855      as1t  neutral right right 0.42 #> 857      as1t    speed right right 0.50 #> 859      as1t accuracy right right 0.44 #> 861      as1t    speed  left  left 0.52 #> 863      as1t  neutral  left  left 0.40 #> 865      as1t accuracy right right 0.46 #> 867      as1t    speed right  left 0.62 #> 869      as1t    speed  left right 0.50 #> 871      as1t  neutral right right 0.58 #> 873      as1t  neutral right right 0.84 #> 875      as1t  neutral  left  left 0.68 #> 877      as1t    speed  left  left 0.58 #> 879      as1t accuracy right right 0.48 #> 881      as1t  neutral  left  left 0.74 #> 883      as1t  neutral right right 0.58 #> 885      as1t accuracy  left  left 0.66 #> 887      as1t accuracy  left  left 0.42 #> 889      as1t accuracy  left  left 0.70 #> 891      as1t  neutral right right 0.58 #> 893      as1t  neutral right right 0.58 #> 895      as1t    speed right  left 0.36 #> 897      as1t accuracy right right 0.36 #> 899      as1t    speed right right 0.30 #> 901      as1t accuracy right right 0.38 #> 903      as1t accuracy  left right 0.34 #> 905      as1t  neutral  left right 0.58 #> 907      as1t  neutral right right 0.40 #> 909      as1t    speed right right 0.34 #> 911      as1t accuracy right right 0.54 #> 913      as1t  neutral  left  left 0.46 #> 915      as1t  neutral  left  left 0.38 #> 917      as1t  neutral right  left 0.38 #> 919      as1t    speed  left right 0.42 #> 921      as1t    speed right  left 0.62 #> 923      as1t  neutral right right 0.40 #> 925      as1t  neutral right right 0.52 #> 927      as1t    speed right right 0.60 #> 929      as1t  neutral  left  left 0.46 #> 931      as1t accuracy right right 0.44 #> 933      as1t  neutral  left  left 1.16 #> 935      as1t  neutral right right 0.40 #> 937      as1t accuracy  left right 0.46 #> 939      as1t accuracy  left  left 0.64 #> 941      as1t accuracy  left  left 0.48 #> 943      as1t    speed right right 0.34 #> 945      as1t  neutral right  left 0.46 #> 947      as1t  neutral right right 0.52 #> 949      as1t  neutral right right 0.58 #> 951      as1t    speed  left  left 0.44 #> 953      as1t    speed  left  left 0.50 #> 955      as1t accuracy  left  left 0.34 #> 957      as1t  neutral  left  left 0.36 #> 959      as1t  neutral  left  left 0.68 #> 961      as1t    speed right right 0.34 #> 963      as1t accuracy  left right 0.32 #> 965      as1t    speed right right 0.30 #> 967      as1t  neutral right right 0.26 #> 969      as1t    speed right right 0.28 #> 971      as1t accuracy  left right 0.32 #> 973      as1t    speed  left  left 0.32 #> 975      as1t    speed right  left 0.36 #> 977      as1t    speed right right 0.28 #> 979      as1t  neutral right right 0.26 #> 981      as1t    speed  left right 0.30 #> 983      as1t  neutral  left  left 0.60 #> 985      as1t accuracy  left  left 0.48 #> 987      as1t accuracy  left  left 0.48 #> 989      as1t    speed  left  left 0.50 #> 991      as1t accuracy right right 0.38 #> 993      as1t accuracy  left right 0.32 #> 995      as1t  neutral  left  left 0.40 #> 997      as1t    speed right right 0.50 #> 999      as1t accuracy  left  left 0.66 #> 1001     as1t  neutral right right 0.62 #> 1003     as1t    speed  left right 0.26 #> 1005     as1t    speed right right 0.30 #> 1007     as1t    speed right  left 0.44 #> 1009     as1t accuracy  left right 0.34 #> 1011     as1t  neutral  left  left 0.46 #> 1013     as1t  neutral right right 0.40 #> 1015     as1t  neutral right  left 0.40 #> 1017     as1t accuracy right right 0.44 #> 1019     as1t    speed right  left 0.42 #> 1021     as1t accuracy  left right 0.48 #> 1023     as1t    speed  left  left 0.56 #> 1025     as1t    speed  left  left 0.50 #> 1027     as1t accuracy right right 0.48 #> 1029     as1t    speed right  left 0.56 #> 1031     as1t accuracy right right 0.38 #> 1033     as1t    speed  left  left 0.52 #> 1035     as1t accuracy  left right 0.36 #> 1037     as1t accuracy right right 0.44 #> 1039     as1t    speed right right 0.34 #> 1041     as1t  neutral  left  left 0.46 #> 1043     as1t  neutral  left  left 0.40 #> 1045     as1t accuracy right right 0.48 #> 1047     as1t    speed right right 0.34 #> 1049     as1t accuracy  left right 0.36 #> 1051     as1t accuracy  left  left 0.42 #> 1053     as1t accuracy  left right 0.48 #> 1055     as1t    speed right  left 0.44 #> 1057     as1t accuracy right right 0.36 #> 1059     as1t    speed  left  left 0.58 #> 1061     as1t    speed right right 0.50 #> 1063     as1t accuracy right right 0.48 #> 1065     as1t accuracy  left  left 0.72 #> 1067     as1t accuracy  left  left 0.42 #> 1069     as1t    speed right right 0.60 #> 1071     as1t  neutral right  left 0.50 #> 1073     as1t accuracy  left  left 0.64 #> 1075     as1t    speed  left  left 0.44 #> 1077     as1t accuracy  left right 0.32 #> 1079     as1t    speed right  left 0.74 #> 1081     as1t    speed right right 0.34 #> 1083     as1t  neutral  left  left 0.68 #> 1085     as1t accuracy right right 0.44 #> 1087     as1t  neutral  left right 0.44 #> 1089     as1t    speed right  left 0.30 #> 1091     as1t    speed right  left 0.44 #> 1093     as1t accuracy right right 0.44 #> 1095     as1t accuracy right right 0.48 #> 1097     as1t    speed  left  left 0.44 #> 1099     as1t accuracy  left  left 0.64 #> 1101     as1t accuracy right right 0.36 #> 1103     as1t  neutral right right 0.42 #> 1105     as1t    speed  left  left 0.44 #> 1107     as1t accuracy  left  left 0.48 #> 1109     as1t accuracy  left  left 0.48 #> 1111     as1t    speed right right 0.50 #> 1113     as1t accuracy right  left 0.60 #> 1115     as1t accuracy right right 0.44 #> 1117     as1t accuracy  left right 0.34 #> 1119     as1t  neutral right  left 0.58 #> 1121     as1t  neutral right right 0.52 #> 1123     as1t  neutral  left  left 0.54 #> 1125     as1t accuracy right right 0.44 #> 1127     as1t accuracy  left  left 0.64 #> 1129     as1t accuracy right right 0.44 #> 1131     as1t  neutral right right 0.42 #> 1133     as1t accuracy right right 0.44 #> 1135     as1t  neutral  left  left 0.36 #> 1137     as1t  neutral  left  left 0.40 #> 1139     as1t    speed right right 0.34 #> 1141     as1t    speed right  left 0.42 #> 1143     as1t    speed  left  left 0.44 #> 1145     as1t  neutral  left  left 0.54 #> 1147     as1t    speed  left right 0.30 #> 1149     as1t    speed  left  left 0.52 #> 1151     as1t    speed  left  left 0.52 #> 1153     as1t  neutral right right 0.40 #> 1155     as1t    speed right right 0.56 #> 1157     as1t  neutral  left  left 0.46 #> 1159     as1t    speed  left right 0.50 #> 1161     as1t accuracy  left  left 0.64 #> 1163     as1t    speed  left  left 0.44 #> 1165     as1t accuracy right right 0.46 #> 1167     as1t    speed  left  left 0.44 #> 1169     as1t accuracy right right 0.38 #> 1171     as1t    speed  left  left 0.44 #> 1173     as1t accuracy right right 0.46 #> 1175     as1t    speed  left right 0.42 #> 1177     as1t    speed  left  left 0.44 #> 1179     as1t  neutral  left  left 0.60 #> 1181     as1t  neutral right right 0.52 #> 1183     as1t    speed right right 0.50 #> 1185     as1t  neutral right right 0.40 #> 1187     as1t accuracy  left right 0.40 #> 1189     as1t    speed  left  left 0.44 #> 1191     as1t    speed  left right 0.26 #> 1193     as1t accuracy right right 0.38 #> 1195     as1t accuracy  left right 0.46 #> 1197     as1t    speed right right 0.50 #> 1199     as1t    speed  left  left 0.32 #> 1201     as1t  neutral right  left 0.32 #> 1203     as1t    speed  left right 0.28 #> 1205     as1t accuracy right right 0.44 #> 1207     as1t accuracy right right 0.46 #> 1209     as1t  neutral  left  left 0.46 #> 1211     as1t    speed  left right 0.42 #> 1213     as1t  neutral right right 0.66 #> 1215     as1t  neutral right right 0.42 #> 1217     as1t  neutral right right 0.42 #> 1219     as1t accuracy right right 0.48 #> 1221     as1t  neutral  left right 0.44 #> 1223     as1t    speed right right 0.32 #> 1225     as1t  neutral right right 0.42 #> 1227     as1t  neutral right right 0.42 #> 1229     as1t accuracy right right 0.36 #> 1231     as1t accuracy  left right 0.48 #> 1233     as1t  neutral right  left 0.48 #> 1235     as1t    speed right right 0.60 #> 1237     as1t accuracy right right 0.46 #> 1239     as1t accuracy right right 0.54 #> 1241     as1t accuracy  left right 0.34 #> 1243     as1t  neutral right right 0.52 #> 1245     as1t  neutral  left  left 0.46 #> 1247     as1t accuracy  left  left 0.70 #> 1249     as1t    speed right right 0.60 #> 1251     as1t  neutral  left  left 0.60 #> 1253     as1t accuracy  left right 0.46 #> 1255     as1t accuracy  left  left 0.48 #> 1257     as1t accuracy  left  left 0.42 #> 1259     as1t  neutral right  left 0.50 #> 1261     as1t accuracy right right 0.48 #> 1263     as1t accuracy  left right 0.36 #> 1265     as1t    speed  left  left 0.44 #> 1267     as1t  neutral right right 0.42 #> 1269     as1t accuracy right right 0.48 #> 1271     as1t accuracy  left right 0.46 #> 1273     as1t  neutral right  left 0.32 #> 1275     as1t accuracy  left right 0.46 #> 1277     as1t accuracy  left  left 0.48 #> 1279     as1t    speed  left  left 0.50 #> 1281     as1t    speed right right 0.50 #> 1283     as1t accuracy right right 0.38 #> 1285     as1t accuracy right right 0.46 #> 1287     as1t accuracy  left right 0.40 #> 1289     as1t accuracy right  left 0.60 #> 1291     as1t  neutral  left right 0.44 #> 1293     as1t  neutral  left  left 0.36 #> 1295     as1t    speed  left  left 0.44 #> 1297     as1t  neutral  left right 0.44 #> 1299     as1t  neutral  left  left 0.38 #> 1301     as1t    speed right right 0.30 #> 1303     as1t    speed right  left 0.44 #> 1305     as1t    speed right right 0.30 #> 1307     as1t accuracy right right 0.46 #> 1309     as1t accuracy right right 0.36 #> 1311     as1t    speed  left right 0.42 #> 1313     as1t    speed right  left 0.74 #> 1315     as1t  neutral right right 0.40 #> 1317     as1t    speed right  left 0.64 #> 1319     as1t  neutral  left right 0.44 #> 1321     as1t accuracy  left  left 0.48 #> 1323     as1t    speed  left  left 0.44 #> 1325     as1t accuracy  left right 0.32 #> 1327     as1t    speed right right 0.50 #> 1329     as1t accuracy  left  left 0.62 #> 1331     as1t accuracy  left  left 0.78 #> 1333     as1t  neutral right right 0.52 #> 1335     as1t    speed right right 0.50 #> 1337     as1t accuracy  left right 0.48 #> 1339     as1t accuracy right right 0.48 #> 1341     as1t    speed  left right 0.50 #> 1343     as1t    speed  left  left 0.50 #> 1345     as1t accuracy  left  left 0.34 #> 1347     as1t accuracy  left right 0.62 #> 1349     as1t  neutral  left  left 0.46 #> 1351     as1t accuracy  left right 0.46 #> 1353     as1t    speed right right 0.74 #> 1355     as1t  neutral right right 0.66 #> 1357     as1t    speed  left  left 0.28 #> 1359     as1t    speed right right 0.34 #> 1361     as1t accuracy  left right 0.36 #> 1363     as1t accuracy  left right 0.34 #> 1365     as1t accuracy  left right 0.56 #> 1367     as1t accuracy right right 0.48 #> 1369     as1t  neutral  left  left 0.40 #> 1371     as1t  neutral  left  left 0.54 #> 1373     as1t    speed  left  left 0.52 #> 1375     as1t accuracy right right 0.80 #> 1377     as1t    speed  left  left 0.44 #> 1379     as1t  neutral  left right 0.58 #> 1381     as1t    speed  left  left 0.50 #> 1383     as1t  neutral right right 0.40 #> 1385     as1t  neutral  left  left 0.40 #> 1387     as1t accuracy right right 0.44 #> 1389     as1t    speed right right 0.50 #> 1391     as1t    speed  left  left 0.50 #> 1393     as1t accuracy  left right 0.46 #> 1395     as1t accuracy  left right 0.52 #> 1397     as1t  neutral  left  left 0.54 #> 1399     as1t    speed right right 0.60 #> 1401     as1t    speed  left  left 0.56 #> 1403     as1t accuracy right right 0.48 #> 1405     as1t    speed right right 0.30 #> 1407     as1t accuracy right  left 0.54 #> 1409     as1t accuracy  left right 0.32 #> 1411     as1t    speed right right 0.32 #> 1413     as1t accuracy  left  left 0.48 #> 1415     as1t  neutral  left  left 0.60 #> 1417     as1t accuracy  left  left 0.72 #> 1419     as1t accuracy  left  left 0.62 #> 1421     as1t accuracy right right 0.36 #> 1423     as1t accuracy  left right 0.52 #> 1425     as1t accuracy  left right 0.56 #> 1427     as1t accuracy  left right 0.34 #> 1429     as1t    speed right  left 0.34 #> 1431     as1t accuracy right right 0.54 #> 1433     as1t    speed  left  left 0.44 #> 1435     as1t  neutral right right 0.42 #> 1437     as1t accuracy right right 0.54 #> 1439     as1t  neutral  left  left 0.60 #> 1441     as1t accuracy right right 0.44 #> 1443     as1t accuracy right right 0.36 #> 1445     as1t  neutral right right 0.40 #> 1447     as1t    speed right right 0.56 #> 1449     as1t  neutral right right 0.52 #> 1451     as1t    speed  left  left 0.80 #> 1453     as1t  neutral  left  left 0.46 #> 1455     as1t    speed  left  left 0.50 #> 1457     as1t    speed right right 0.64 #> 1459     as1t  neutral right right 0.52 #> 1461     as1t accuracy  left  left 0.82 #> 1463     as1t    speed  left  left 0.56 #> 1465     as1t    speed  left  left 0.58 #> 1467     as1t accuracy  left  left 0.76 #> 1469     as1t accuracy right right 0.68 #> 1471     as1t  neutral  left  left 0.54 #> 1473     as1t    speed right right 0.60 #> 1475     as1t accuracy  left  left 0.48 #> 1477     as1t  neutral  left  left 0.46 #> 1479     as1t  neutral  left  left 0.46 #> 1481     as1t  neutral right  left 0.48 #> 1483     as1t accuracy  left  left 0.64 #> 1485     as1t accuracy  left right 0.56 #> 1487     as1t    speed  left  left 0.52 #> 1489     as1t accuracy  left right 0.36 #> 1491     as1t  neutral  left  left 0.46 #> 1493     as1t  neutral right right 0.58 #> 1495     as1t  neutral  left  left 0.46 #> 1497     as1t    speed right right 0.56 #> 1499     as1t    speed  left  left 0.44 #> 1501     as1t  neutral right right 0.52 #> 1503     as1t accuracy right right 0.48 #> 1505     as1t  neutral  left  left 0.46 #> 1507     as1t accuracy  left  left 0.42 #> 1509     as1t    speed  left  left 0.56 #> 1511     as1t  neutral right right 0.52 #> 1513     as1t  neutral  left  left 0.40 #> 1515     as1t  neutral right right 0.42 #> 1517     as1t  neutral  left  left 0.68 #> 1519     as1t  neutral right  left 0.38 #> 1521     as1t accuracy right right 0.44 #> 1523     as1t    speed right  left 0.34 #> 1525     as1t accuracy  left  left 0.64 #> 1527     as1t  neutral right right 0.40 #> 1529     as1t  neutral  left  left 0.38 #> 1531     as1t    speed right right 0.30 #> 1533     as1t    speed right  left 0.44 #> 1535     as1t    speed  left  left 0.32 #> 1537     as1t accuracy right right 0.46 #> 1539     as1t    speed right  left 0.44 #> 1541     as1t accuracy right right 0.44 #> 1543     as1t  neutral right right 0.42 #> 1545     as1t    speed  left  left 0.50 #> 1547     as1t    speed  left  left 0.52 #> 1549     as1t accuracy  left  left 0.42 #> 1551     as1t  neutral  left  left 0.54 #> 1553     as1t accuracy  left right 0.48 #> 1555     as1t accuracy  left  left 0.62 #> 1557     as1t    speed  left  left 0.50 #> 1559     as1t  neutral  left  left 0.60 #> 1561     as1t    speed  left  left 0.52 #> 1563     as1t  neutral right right 0.62 #> 1565     as1t  neutral  left right 0.38 #> 1567     as1t accuracy  left  left 0.42 #> 1569     as1t    speed right  left 0.34 #> 1571     as1t    speed right right 0.32 #> 1573     as1t accuracy  left  left 0.42 #> 1575     as1t    speed  left right 0.64 #> 1577     as1t  neutral right right 0.42 #> 1579     as1t    speed  left  left 0.50 #> 1581     as1t  neutral right  left 0.58 #> 1583     as1t  neutral right right 0.62 #> 1585     as1t accuracy  left right 0.46 #> 1587     as1t  neutral right  left 0.70 #> 1589     as1t    speed right right 0.50 #> 1591     as1t accuracy right right 0.38 #> 1593     as1t  neutral right  left 0.48 #> 1595     as1t  neutral  left right 0.44 #> 1597     as1t accuracy  left right 0.34 #> 1599     as1t  neutral  left  left 0.38 #> 1601     as1t accuracy  left right 0.36 #> 1603     as1t accuracy  left  left 0.62 #> 1605     as1t    speed right  left 0.52 #> 1607     as1t    speed right right 0.56 #> 1609     as1t accuracy right right 0.38 #> 1611     as1t    speed  left right 0.42 #> 1613     as1t  neutral  left  left 0.54 #> 1615     as1t accuracy  left  left 0.42 #> 1617     as1t accuracy  left  left 0.62 #> 1619     as1t accuracy right right 0.68 #> 1621     bd6t    speed right right 0.32 #> 1623     bd6t  neutral  left  left 0.40 #> 1625     bd6t  neutral  left  left 0.40 #> 1627     bd6t  neutral  left  left 0.42 #> 1629     bd6t  neutral right right 0.34 #> 1631     bd6t  neutral  left  left 0.38 #> 1633     bd6t  neutral  left  left 0.48 #> 1635     bd6t    speed right  left 0.36 #> 1637     bd6t  neutral  left  left 0.42 #> 1639     bd6t    speed right right 0.32 #> 1641     bd6t    speed right right 0.38 #> 1643     bd6t accuracy  left  left 0.56 #> 1645     bd6t accuracy right  left 0.46 #> 1647     bd6t accuracy  left  left 0.36 #> 1649     bd6t accuracy right right 0.42 #> 1651     bd6t  neutral  left  left 0.38 #> 1653     bd6t  neutral right right 0.46 #> 1655     bd6t accuracy  left  left 0.50 #> 1657     bd6t  neutral  left  left 0.42 #> 1659     bd6t  neutral right right 0.52 #> 1661     bd6t  neutral  left  left 0.42 #> 1663     bd6t accuracy right right 0.58 #> 1665     bd6t accuracy right  left 0.48 #> 1667     bd6t    speed right right 0.60 #> 1669     bd6t accuracy right right 0.42 #> 1671     bd6t    speed right right 0.40 #> 1673     bd6t  neutral  left  left 0.40 #> 1675     bd6t  neutral  left  left 0.42 #> 1677     bd6t accuracy  left right 0.54 #> 1679     bd6t    speed right right 0.40 #> 1681     bd6t    speed right right 0.38 #> 1683     bd6t    speed right right 0.38 #> 1685     bd6t    speed right right 0.38 #> 1687     bd6t    speed right right 0.40 #> 1689     bd6t  neutral right right 0.34 #> 1691     bd6t    speed  left right 0.38 #> 1693     bd6t  neutral  left  left 0.40 #> 1695     bd6t  neutral  left right 0.36 #> 1697     bd6t accuracy right right 0.58 #> 1699     bd6t  neutral right right 0.46 #> 1701     bd6t  neutral  left  left 0.38 #> 1703     bd6t accuracy  left  left 0.34 #> 1705     bd6t accuracy right right 0.50 #> 1707     bd6t accuracy  left  left 0.46 #> 1709     bd6t  neutral  left  left 0.40 #> 1711     bd6t    speed  left  left 0.58 #> 1713     bd6t    speed  left  left 0.32 #> 1715     bd6t accuracy right right 0.44 #> 1717     bd6t accuracy  left  left 0.46 #> 1719     bd6t  neutral right right 0.36 #> 1721     bd6t  neutral  left  left 0.40 #> 1723     bd6t  neutral right right 0.36 #> 1725     bd6t  neutral  left  left 0.38 #> 1727     bd6t  neutral right right 0.36 #> 1729     bd6t accuracy right right 0.44 #> 1731     bd6t  neutral  left  left 0.38 #> 1733     bd6t  neutral  left right 0.42 #> 1735     bd6t    speed  left  left 0.44 #> 1737     bd6t  neutral  left  left 0.40 #> 1739     bd6t accuracy  left  left 0.46 #> 1741     bd6t  neutral right right 0.46 #> 1743     bd6t  neutral  left  left 0.42 #> 1745     bd6t accuracy right right 0.50 #> 1747     bd6t    speed right right 0.40 #> 1749     bd6t  neutral  left  left 0.54 #> 1751     bd6t  neutral  left  left 0.40 #> 1753     bd6t accuracy  left  left 0.52 #> 1755     bd6t    speed right right 0.60 #> 1757     bd6t accuracy right right 0.42 #> 1759     bd6t  neutral right  left 0.68 #> 1761     bd6t  neutral  left  left 0.38 #> 1763     bd6t  neutral  left  left 0.54 #> 1765     bd6t  neutral right right 0.46 #> 1767     bd6t accuracy right right 0.44 #> 1769     bd6t    speed  left  left 0.26 #> 1771     bd6t accuracy right  left 0.48 #> 1773     bd6t    speed right right 0.60 #> 1775     bd6t accuracy  left  left 0.36 #> 1777     bd6t accuracy  left  left 0.36 #> 1779     bd6t    speed  left right 0.30 #> 1781     bd6t accuracy  left  left 0.36 #> 1783     bd6t accuracy right  left 0.32 #> 1785     bd6t accuracy right  left 0.38 #> 1787     bd6t accuracy right right 0.42 #> 1789     bd6t  neutral  left  left 0.40 #> 1791     bd6t  neutral  left  left 0.38 #> 1793     bd6t accuracy right  left 0.32 #> 1795     bd6t    speed  left right 0.64 #> 1797     bd6t    speed right right 0.32 #> 1799     bd6t  neutral  left  left 0.38 #> 1801     bd6t  neutral  left right 0.42 #> 1803     bd6t    speed right  left 0.36 #> 1805     bd6t  neutral  left  left 0.40 #> 1807     bd6t accuracy  left  left 0.34 #> 1809     bd6t    speed right right 0.32 #> 1811     bd6t accuracy right right 0.56 #> 1813     bd6t  neutral right right 0.52 #> 1815     bd6t    speed right right 0.40 #> 1817     bd6t    speed  left  left 0.30 #> 1819     bd6t accuracy right  left 0.32 #> 1821     bd6t  neutral  left  left 0.38 #> 1823     bd6t    speed  left  left 0.44 #> 1825     bd6t accuracy  left  left 0.52 #> 1827     bd6t    speed  left right 0.32 #> 1829     bd6t    speed  left  left 0.44 #> 1831     bd6t    speed  left right 0.38 #> 1833     bd6t accuracy right right 0.44 #> 1835     bd6t accuracy right right 0.44 #> 1837     bd6t  neutral  left right 0.40 #> 1839     bd6t  neutral  left  left 0.38 #> 1841     bd6t    speed  left  left 0.26 #> 1843     bd6t accuracy right right 0.42 #> 1845     bd6t  neutral right right 0.72 #> 1847     bd6t    speed right right 0.38 #> 1849     bd6t    speed  left  left 0.44 #> 1851     bd6t accuracy  left  left 0.46 #> 1853     bd6t    speed  left right 0.34 #> 1855     bd6t accuracy right right 0.42 #> 1857     bd6t accuracy right right 0.50 #> 1859     bd6t    speed  left  left 0.44 #> 1861     bd6t  neutral right right 0.36 #> 1863     bd6t  neutral right right 0.46 #> 1865     bd6t  neutral right  left 0.44 #> 1867     bd6t    speed right  left 0.40 #> 1869     bd6t accuracy right  left 0.62 #> 1871     bd6t  neutral  left  left 0.48 #> 1873     bd6t  neutral right right 0.52 #> 1875     bd6t  neutral  left  left 0.40 #> 1877     bd6t  neutral  left  left 0.42 #> 1879     bd6t    speed  left  left 0.44 #> 1881     bd6t    speed right right 0.32 #> 1883     bd6t    speed  left  left 0.44 #> 1885     bd6t    speed  left right 0.34 #> 1887     bd6t accuracy right right 0.56 #> 1889     bd6t accuracy right right 0.42 #> 1891     bd6t accuracy right  left 0.46 #> 1893     bd6t    speed  left  left 0.30 #> 1895     bd6t    speed right right 0.40 #> 1897     bd6t accuracy right right 0.56 #> 1899     bd6t    speed right right 0.40 #> 1901     bd6t accuracy  left  left 0.34 #> 1903     bd6t    speed right right 0.38 #> 1905     bd6t    speed right right 0.32 #> 1907     bd6t accuracy right  left 0.46 #> 1909     bd6t accuracy  left  left 0.46 #> 1911     bd6t  neutral right right 0.36 #> 1913     bd6t accuracy  left  left 0.46 #> 1915     bd6t  neutral right right 0.46 #> 1917     bd6t    speed  left  left 0.30 #> 1919     bd6t accuracy  left  left 0.36 #> 1921     bd6t accuracy right  left 0.32 #> 1923     bd6t  neutral  left  left 0.42 #> 1925     bd6t  neutral right right 0.34 #> 1927     bd6t accuracy right  left 0.38 #> 1929     bd6t  neutral right right 0.34 #> 1931     bd6t  neutral right right 0.52 #> 1933     bd6t accuracy right  left 0.48 #> 1935     bd6t  neutral  left  left 0.68 #> 1937     bd6t accuracy  left  left 0.60 #> 1939     bd6t accuracy right right 0.44 #> 1941     bd6t  neutral  left  left 0.42 #> 1943     bd6t    speed  left right 0.38 #> 1945     bd6t accuracy right right 0.50 #> 1947     bd6t  neutral right right 0.48 #> 1949     bd6t  neutral right right 0.52 #> 1951     bd6t accuracy right right 0.42 #> 1953     bd6t    speed right right 0.32 #> 1955     bd6t  neutral right right 0.34 #> 1957     bd6t    speed right right 0.40 #> 1959     bd6t accuracy right right 0.44 #> 1961     bd6t    speed  left right 0.30 #> 1963     bd6t  neutral  left  left 0.42 #> 1965     bd6t  neutral  left  left 0.40 #> 1967     bd6t  neutral  left  left 0.38 #> 1969     bd6t  neutral right right 0.48 #> 1971     bd6t  neutral  left  left 0.42 #> 1973     bd6t  neutral right right 0.34 #> 1975     bd6t  neutral  left  left 0.48 #> 1977     bd6t accuracy  left  left 0.60 #> 1979     bd6t  neutral right right 0.36 #> 1981     bd6t  neutral  left  left 0.38 #> 1983     bd6t    speed right right 0.26 #> 1985     bd6t    speed right right 0.40 #> 1987     bd6t accuracy  left  left 0.46 #> 1989     bd6t  neutral  left right 0.40 #> 1991     bd6t  neutral right right 0.46 #> 1993     bd6t    speed right right 0.32 #> 1995     bd6t  neutral right right 0.48 #> 1997     bd6t accuracy right  left 0.48 #> 1999     bd6t    speed  left  left 0.44 #> 2001     bd6t accuracy  left  left 0.46 #> 2003     bd6t accuracy right right 0.54 #> 2005     bd6t accuracy  left  left 0.36 #> 2007     bd6t    speed right right 0.40 #> 2009     bd6t  neutral right right 0.52 #> 2011     bd6t    speed  left right 0.38 #> 2013     bd6t  neutral  left  left 0.38 #> 2015     bd6t    speed right right 0.40 #> 2017     bd6t    speed right right 0.38 #> 2019     bd6t    speed  left  left 0.44 #> 2021     bd6t  neutral right  left 0.34 #> 2023     bd6t  neutral  left  left 0.42 #> 2025     bd6t accuracy  left  left 0.36 #> 2027     bd6t    speed right right 0.38 #> 2029     bd6t accuracy  left  left 0.34 #> 2031     bd6t    speed  left  left 0.32 #> 2033     bd6t    speed  left  left 0.44 #> 2035     bd6t    speed  left right 0.32 #> 2037     bd6t accuracy  left  left 0.34 #> 2039     bd6t accuracy right right 0.58 #> 2041     bd6t    speed right right 0.40 #> 2043     bd6t accuracy  left  left 0.46 #> 2045     bd6t  neutral  left  left 0.38 #> 2047     bd6t  neutral  left  left 0.42 #> 2049     bd6t  neutral right  left 0.42 #> 2051     bd6t  neutral  left right 0.52 #> 2053     bd6t  neutral  left right 0.36 #> 2055     bd6t accuracy right right 0.54 #> 2057     bd6t    speed right right 0.32 #> 2059     bd6t  neutral  left  left 0.48 #> 2061     bd6t accuracy  left  left 0.56 #> 2063     bd6t  neutral  left  left 0.62 #> 2065     bd6t  neutral right  left 0.34 #> 2067     bd6t    speed  left  left 0.32 #> 2069     bd6t  neutral  left  left 0.40 #> 2071     bd6t  neutral  left  left 0.48 #> 2073     bd6t  neutral right right 0.36 #> 2075     bd6t  neutral  left  left 0.40 #> 2077     bd6t accuracy  left  left 0.36 #> 2079     bd6t  neutral  left  left 0.38 #> 2081     bd6t  neutral right right 0.48 #> 2083     bd6t    speed right right 0.38 #> 2085     bd6t  neutral  left  left 0.40 #> 2087     bd6t accuracy  left  left 0.70 #> 2089     bd6t accuracy right right 0.62 #> 2091     bd6t accuracy right right 0.42 #> 2093     bd6t  neutral right  left 0.60 #> 2095     bd6t  neutral right right 0.64 #> 2097     bd6t    speed right right 0.38 #> 2099     bd6t accuracy right right 0.42 #> 2101     bd6t accuracy right right 0.44 #> 2103     bd6t accuracy right right 0.50 #> 2105     bd6t    speed right right 0.40 #> 2107     bd6t accuracy right right 0.44 #> 2109     bd6t accuracy right right 0.42 #> 2111     bd6t  neutral  left  left 0.42 #> 2113     bd6t accuracy  left  left 0.60 #> 2115     bd6t accuracy  left  left 0.36 #> 2117     bd6t    speed  left  left 0.30 #> 2119     bd6t accuracy  left  left 0.66 #> 2121     bd6t  neutral right right 0.48 #> 2123     bd6t accuracy right right 0.42 #> 2125     bd6t accuracy  left  left 0.50 #> 2127     bd6t accuracy right right 0.44 #> 2129     bd6t    speed right right 0.40 #> 2131     bd6t accuracy  left  left 0.52 #> 2133     bd6t accuracy right right 0.44 #> 2135     bd6t  neutral right right 0.48 #> 2137     bd6t    speed right  left 0.36 #> 2139     bd6t accuracy right right 0.54 #> 2141     bd6t  neutral  left  left 0.42 #> 2143     bd6t  neutral right right 0.46 #> 2145     bd6t  neutral  left right 0.40 #> 2147     bd6t    speed  left right 0.44 #> 2149     bd6t accuracy  left  left 0.60 #> 2151     bd6t    speed  left  left 0.44 #> 2153     bd6t accuracy right right 0.58 #> 2155     bd6t    speed  left  left 0.44 #> 2157     bd6t accuracy  left  left 0.56 #> 2159     bd6t accuracy  left  left 0.34 #> 2161     bd6t  neutral  left  left 0.42 #> 2163     bd6t  neutral right right 0.48 #> 2165     bd6t accuracy  left  left 0.50 #> 2167     bd6t  neutral right right 0.48 #> 2169     bd6t  neutral right right 0.48 #> 2171     bd6t  neutral  left right 0.36 #> 2173     bd6t accuracy  left  left 0.56 #> 2175     bd6t accuracy right right 0.42 #> 2177     bd6t accuracy  left  left 0.52 #> 2179     bd6t  neutral  left  left 0.38 #> 2181     bd6t  neutral  left  left 0.48 #> 2183     bd6t accuracy right right 0.44 #> 2185     bd6t accuracy right right 0.62 #> 2187     bd6t  neutral  left  left 0.62 #> 2189     bd6t accuracy  left  left 0.60 #> 2191     bd6t  neutral right right 0.52 #> 2193     bd6t    speed right  left 0.40 #> 2195     bd6t    speed right right 0.38 #> 2197     bd6t    speed  left right 0.30 #> 2199     bd6t  neutral  left  left 0.42 #> 2201     bd6t accuracy right right 0.62 #> 2203     bd6t accuracy right right 0.44 #> 2205     bd6t accuracy right right 0.54 #> 2207     bd6t accuracy right  left 0.54 #> 2209     bd6t    speed right right 0.60 #> 2211     bd6t  neutral  left  left 0.48 #> 2213     bd6t    speed right right 0.38 #> 2215     bd6t  neutral  left  left 0.38 #> 2217     bd6t    speed  left  left 0.26 #> 2219     bd6t    speed right  left 0.30 #> 2221     bd6t    speed  left right 0.32 #> 2223     bd6t    speed right right 0.40 #> 2225     bd6t  neutral  left right 0.52 #> 2227     bd6t accuracy right right 0.44 #> 2229     bd6t  neutral  left right 0.42 #> 2231     bd6t  neutral  left  left 0.62 #> 2233     bd6t accuracy right right 0.58 #> 2235     bd6t    speed right right 0.38 #> 2237     bd6t  neutral right right 0.64 #> 2239     bd6t  neutral  left  left 0.38 #> 2241     bd6t  neutral right right 0.34 #> 2243     bd6t accuracy right right 0.44 #> 2245     bd6t    speed  left  left 0.30 #> 2247     bd6t accuracy  left  left 0.46 #> 2249     bd6t    speed right right 0.40 #> 2251     bd6t  neutral right right 0.86 #> 2253     bd6t accuracy right right 0.42 #> 2255     bd6t accuracy right right 0.42 #> 2257     bd6t  neutral  left right 0.36 #> 2259     bd6t  neutral  left right 0.60 #> 2261     bd6t  neutral right right 0.48 #> 2263     bd6t accuracy  left  left 0.56 #> 2265     bd6t accuracy right right 0.44 #> 2267     bd6t    speed  left  left 0.32 #> 2269     bd6t    speed right right 0.40 #> 2271     bd6t accuracy  left  left 0.46 #> 2273     bd6t    speed right right 0.38 #> 2275     bd6t  neutral right right 0.48 #> 2277     bd6t  neutral  left  left 0.40 #> 2279     bd6t accuracy  left  left 0.76 #> 2281     bd6t accuracy  left  left 0.46 #> 2283     bd6t  neutral  left  left 0.48 #> 2285     bd6t accuracy right right 0.94 #> 2287     bd6t accuracy right right 0.62 #> 2289     bd6t accuracy  left  left 0.60 #> 2291     bd6t  neutral  left  left 0.54 #> 2293     bd6t accuracy right right 0.54 #> 2295     bd6t  neutral right right 0.68 #> 2297     bd6t accuracy right right 0.62 #> 2299     bd6t  neutral  left  left 0.64 #> 2301     bd6t accuracy right right 0.62 #> 2303     bd6t accuracy  left  left 0.72 #> 2305     bd6t  neutral right right 0.52 #> 2307     bd6t    speed right right 0.38 #> 2309     bd6t  neutral right right 0.36 #> 2311     bd6t accuracy right  left 0.46 #> 2313     bd6t accuracy  left  left 0.50 #> 2315     bd6t  neutral  left  left 0.42 #> 2317     bd6t accuracy right right 0.62 #> 2319     bd6t    speed  left  left 0.44 #> 2321     bd6t  neutral  left  left 0.42 #> 2323     bd6t    speed right right 0.60 #> 2325     bd6t  neutral  left  left 0.40 #> 2327     bd6t  neutral  left  left 0.54 #> 2329     bd6t accuracy right right 0.44 #> 2331     bd6t accuracy  left  left 0.50 #> 2333     bd6t accuracy right right 0.62 #> 2335     bd6t accuracy right right 0.66 #> 2337     bd6t accuracy  left  left 0.60 #> 2339     bd6t  neutral  left  left 0.48 #> 2341     bd6t accuracy right right 0.90 #> 2343     bd6t  neutral right right 0.68 #> 2345     bd6t accuracy right right 0.74 #> 2347     bd6t accuracy right  left 0.38 #> 2349     bd6t    speed right  left 0.30 #> 2351     bd6t    speed right right 0.60 #> 2353     bd6t accuracy right right 0.62 #> 2355     bd6t accuracy  left right 0.58 #> 2357     bd6t accuracy  left right 1.24 #> 2359     bd6t accuracy right right 1.12 #> 2361     bd6t accuracy right right 0.66 #> 2363     bd6t  neutral  left  left 0.88 #> 2365     bd6t    speed right  left 0.36 #> 2367     bd6t    speed right  left 0.36 #> 2369     bd6t accuracy  left  left 0.60 #> 2371     bd6t accuracy  left  left 0.56 #> 2373     bd6t accuracy right right 0.50 #> 2375     bd6t  neutral  left  left 0.40 #> 2377     bd6t accuracy right right 0.82 #> 2379     bd6t  neutral right right 0.68 #> 2381     bd6t    speed right right 0.40 #> 2383     bd6t accuracy right right 0.42 #> 2385     bd6t  neutral  left  left 0.40 #> 2387     bd6t  neutral  left  left 0.42 #> 2389     bd6t  neutral right right 0.46 #> 2391     bd6t    speed  left  left 0.44 #> 2393     bd6t    speed right  left 0.28 #> 2395     bd6t  neutral  left  left 0.40 #> 2397     bd6t  neutral right right 0.46 #> 2399     bd6t  neutral  left  left 0.78 #> 2401     bd6t  neutral  left  left 0.48 #> 2403     bd6t accuracy right right 0.44 #> 2405     bd6t  neutral right  left 0.50 #> 2407     bd6t accuracy  left  left 0.46 #> 2409     bd6t    speed right  left 0.30 #> 2411     bd6t  neutral  left  left 0.48 #> 2413     bd6t  neutral right right 0.48 #> 2415     bd6t accuracy  left  left 0.46 #> 2417     bd6t  neutral  left  left 0.40 #> 2419     bd6t    speed right right 0.60 #> 2421     bd6t  neutral  left  left 0.38 #> 2423     bd6t  neutral  left  left 0.38 #> 2425     bd6t    speed  left right 0.30 #> 2427     bd6t  neutral  left  left 0.38 #> 2429     bd6t    speed  left right 0.64 #> 2431     bd6t  neutral right right 0.68 #> 2433     bd6t  neutral  left right 0.70 #> 2435     bd6t accuracy right right 0.54 #> 2437     bd6t  neutral  left  left 0.40 #> 2439     bd6t  neutral  left  left 0.62 #> 2441     bd6t  neutral  left  left 0.62 #> 2443     bd6t accuracy right right 0.56 #> 2445     bd6t accuracy  left  left 0.70 #> 2447     bd6t accuracy right right 0.62 #> 2449     bd6t accuracy right right 0.56 #> 2451     bd6t accuracy right right 0.66 #> 2453     bd6t  neutral right right 0.52 #> 2455     bd6t    speed right right 0.60 #> 2457     bd6t  neutral  left  left 0.74 #> 2459     bd6t    speed  left  left 0.44 #> 2461     bd6t accuracy  left  left 0.76 #> 2463     bd6t accuracy right right 0.42 #> 2465     bd6t    speed  left  left 0.58 #> 2467     bd6t    speed  left  left 0.44 #> 2469     bd6t    speed  left  left 0.32 #> 2471     bd6t  neutral right right 0.52 #> 2473     bd6t    speed right  left 0.52 #> 2475     bd6t  neutral right  left 0.42 #> 2477     bd6t accuracy  left  left 0.36 #> 2479     bd6t accuracy  left  left 0.46 #> 2481     bd6t accuracy right right 0.42 #> 2483     bd6t accuracy  left  left 0.36 #> 2485     bd6t accuracy  left  left 0.52 #> 2487     bd6t accuracy right right 0.50 #> 2489     bd6t    speed right right 0.60 #> 2491     bd6t  neutral right right 0.52 #> 2493     bd6t accuracy right right 0.54 #> 2495     bd6t accuracy  left  left 0.46 #> 2497     bd6t accuracy  left  left 0.50 #> 2499     bd6t    speed right right 0.60 #> 2501     bd6t accuracy right right 0.78 #> 2503     bd6t accuracy  left  left 0.46 #> 2505     bd6t accuracy right  left 0.58 #> 2507     bd6t  neutral right right 0.80 #> 2509     bd6t  neutral  left right 0.42 #> 2511     bd6t accuracy right right 0.54 #> 2513     bd6t accuracy right right 1.00 #> 2515     bd6t  neutral right right 0.72 #> 2517     bd6t    speed right right 0.60 #> 2519     bd6t accuracy  left  left 0.66 #> 2521     bd6t accuracy right right 0.50 #> 2523     bd6t accuracy right  left 0.48 #> 2525     bd6t accuracy  left  left 0.50 #> 2527     bd6t  neutral  left  left 0.48 #> 2529     bd6t accuracy right right 0.54 #> 2531     bd6t  neutral right right 0.34 #> 2533     bd6t  neutral  left  left 0.54 #> 2535     bd6t  neutral right right 0.72 #> 2537     bd6t accuracy  left  left 0.36 #> 2539     bd6t  neutral right right 0.36 #> 2541     bd6t accuracy  left  left 0.60 #> 2543     bd6t  neutral  left  left 0.40 #> 2545     bd6t    speed  left right 0.30 #> 2547     bd6t accuracy right right 0.56 #> 2549     bd6t    speed  left  left 0.44 #> 2551     bd6t accuracy  left  left 0.50 #> 2553     bd6t accuracy  left  left 0.82 #> 2555     bd6t    speed right  left 0.30 #> 2557     bd6t accuracy  left  left 0.52 #> 2559     bd6t accuracy right right 0.56 #> 2561     bd6t  neutral  left  left 0.42 #> 2563     bd6t accuracy  left  left 0.34 #> 2565     bd6t accuracy  left  left 0.36 #> 2567     bd6t    speed right  left 0.36 #> 2569     bd6t    speed  left  left 0.30 #> 2571     bd6t accuracy right right 0.44 #> 2573     bd6t accuracy  left  left 0.46 #> 2575     bd6t accuracy right right 0.42 #> 2577     bd6t accuracy right right 0.56 #> 2579     bd6t    speed right right 0.40 #> 2581     bd6t accuracy  left  left 0.46 #> 2583     bd6t accuracy right right 0.42 #> 2585     bd6t  neutral  left  left 0.40 #> 2587     bd6t  neutral  left  left 0.48 #> 2589     bd6t  neutral right right 0.36 #> 2591     bd6t accuracy  left  left 0.36 #> 2593     bd6t  neutral  left  left 0.40 #> 2595     bd6t accuracy right right 0.42 #> 2597     bd6t    speed right  left 0.36 #> 2599     bd6t accuracy  left  left 0.60 #> 2601     bd6t  neutral right  left 0.34 #> 2603     bd6t  neutral  left  left 0.40 #> 2605     bd6t    speed right right 0.38 #> 2607     bd6t  neutral right right 0.36 #> 2609     bd6t    speed  left  left 0.32 #> 2611     bd6t  neutral right right 0.48 #> 2613     bd6t accuracy right right 0.62 #> 2615     bd6t  neutral  left  left 0.74 #> 2617     bd6t    speed  left  left 0.32 #> 2619     bd6t  neutral  left  left 0.38 #> 2621     bd6t    speed right right 0.32 #> 2623     bd6t  neutral  left  left 0.74 #> 2625     bd6t    speed  left right 0.34 #> 2627     bd6t  neutral  left  left 0.38 #> 2629     bd6t  neutral  left  left 0.40 #> 2631     bd6t    speed right  left 0.30 #> 2633     bd6t    speed right  left 0.36 #> 2635     bd6t  neutral right right 0.36 #> 2637     bd6t accuracy right right 0.54 #> 2639     bd6t  neutral right  left 0.34 #> 2641     bd6t  neutral right  left 0.34 #> 2643     bd6t  neutral  left  left 0.48 #> 2645     bd6t    speed  left  left 0.58 #> 2647     bd6t accuracy  left  left 0.34 #> 2649     bd6t  neutral  left  left 0.38 #> 2651     bd6t accuracy right right 0.44 #> 2653     bd6t  neutral right right 0.52 #> 2655     bd6t  neutral  left  left 0.54 #> 2657     bd6t  neutral  left  left 0.48 #> 2659     bd6t accuracy right right 0.56 #> 2661     bd6t    speed  left  left 0.58 #> 2663     bd6t  neutral right right 0.34 #> 2665     bd6t  neutral right right 0.36 #> 2667     bd6t accuracy right right 0.76 #> 2669     bd6t  neutral  left  left 0.88 #> 2671     bd6t  neutral  left  left 0.38 #> 2673     bd6t    speed right right 0.40 #> 2675     bd6t    speed right right 0.40 #> 2677     bd6t    speed  left  left 0.32 #> 2679     bd6t  neutral right  left 0.42 #> 2681     bd6t  neutral right right 0.34 #> 2683     bd6t  neutral  left  left 0.54 #> 2685     bd6t  neutral  left  left 0.74 #> 2687     bd6t  neutral  left  left 0.74 #> 2689     bd6t accuracy right right 0.62 #> 2691     bd6t accuracy  left  left 0.36 #> 2693     bd6t  neutral right right 0.34 #> 2695     bd6t  neutral right right 0.72 #> 2697     bd6t  neutral  left  left 0.78 #> 2699     bd6t accuracy  left  left 0.52 #> 2701     bd6t accuracy  left  left 0.36 #> 2703     bd6t  neutral  left  left 0.38 #> 2705     bd6t accuracy  left right 0.46 #> 2707     bd6t accuracy  left  left 0.36 #> 2709     bd6t accuracy right right 0.82 #> 2711     bd6t    speed right right 0.60 #> 2713     bd6t    speed right  left 0.36 #> 2715     bd6t accuracy right right 0.82 #> 2717     bd6t accuracy  left  left 0.46 #> 2719     bd6t  neutral right right 0.46 #> 2721     bd6t accuracy right right 0.44 #> 2723     bd6t accuracy right right 0.42 #> 2725     bd6t  neutral  left  left 0.48 #> 2727     bd6t    speed right right 0.38 #> 2729     bd6t    speed right right 0.40 #> 2731     bd6t accuracy right right 0.62 #> 2733     bd6t    speed  left  left 0.30 #> 2735     bd6t accuracy  left  left 0.66 #> 2737     bd6t accuracy  left  left 0.60 #> 2739     bd6t  neutral  left  left 0.54 #> 2741     bd6t    speed  left  left 0.44 #> 2743     bd6t  neutral right right 0.34 #> 2745     bd6t  neutral  left  left 0.48 #> 2747     bd6t    speed right right 0.38 #> 2749     bd6t  neutral right  left 0.66 #> 2751     bd6t    speed right  left 0.30 #> 2753     bd6t accuracy  left  left 0.60 #> 2755     bd6t accuracy  left  left 0.60 #> 2757     bd6t accuracy right right 0.50 #> 2759     bd6t accuracy right  left 0.48 #> 2761     bd6t    speed right right 0.38 #> 2763     bd6t    speed right right 0.30 #> 2765     bd6t accuracy  left  left 0.46 #> 2767     bd6t    speed  left  left 0.30 #> 2769     bd6t    speed right right 0.40 #> 2771     bd6t    speed  left right 0.38 #> 2773     bd6t accuracy right right 0.56 #> 2775     bd6t  neutral right right 0.36 #> 2777     bd6t  neutral  left  left 0.42 #> 2779     bd6t  neutral  left  left 0.40 #> 2781     bd6t    speed  left  left 0.32 #> 2783     bd6t  neutral  left  left 0.48 #> 2785     bd6t accuracy right  left 0.32 #> 2787     bd6t  neutral  left  left 0.40 #> 2789     bd6t    speed right right 0.32 #> 2791     bd6t accuracy  left  left 0.72 #> 2793     bd6t  neutral  left  left 0.64 #> 2795     bd6t accuracy right right 0.44 #> 2797     bd6t    speed  left  left 0.44 #> 2799     bd6t    speed  left  left 0.58 #> 2801     bd6t  neutral  left  left 0.40 #> 2803     bd6t accuracy  left  left 0.60 #> 2805     bd6t    speed right right 0.32 #> 2807     bd6t  neutral  left  left 0.68 #> 2809     bd6t  neutral right right 0.64 #> 2811     bd6t accuracy  left right 0.50 #> 2813     bd6t accuracy  left  left 0.70 #> 2815     bd6t  neutral  left  left 0.62 #> 2817     bd6t accuracy  left  left 0.34 #> 2819     bd6t    speed  left right 0.34 #> 2821     bd6t accuracy right right 0.44 #> 2823     bd6t accuracy  left  left 0.36 #> 2825     bd6t accuracy  left  left 0.56 #> 2827     bd6t    speed  left right 0.34 #> 2829     bd6t accuracy  left  left 0.56 #> 2831     bd6t  neutral  left  left 0.40 #> 2833     bd6t  neutral  left  left 0.48 #> 2835     bd6t accuracy right right 0.50 #> 2837     bd6t  neutral  left  left 0.38 #> 2839     bd6t accuracy  left  left 0.52 #> 2841     bd6t  neutral right right 0.64 #> 2843     bd6t  neutral  left  left 0.42 #> 2845     bd6t accuracy right right 0.42 #> 2847     bd6t accuracy right right 0.42 #> 2849     bd6t  neutral right  left 0.50 #> 2851     bd6t  neutral right right 0.52 #> 2853     bd6t accuracy right right 0.66 #> 2855     bd6t    speed  left  left 0.44 #> 2857     bd6t  neutral right right 0.48 #> 2859     bd6t accuracy right right 0.50 #> 2861     bd6t  neutral right right 0.36 #> 2863     bd6t accuracy right right 0.50 #> 2865     bd6t    speed  left right 0.64 #> 2867     bd6t accuracy  left  left 1.22 #> 2869     bd6t  neutral right right 0.46 #> 2871     bd6t    speed right right 0.60 #> 2873     bd6t accuracy  left  left 1.18 #> 2875     bd6t accuracy  left  left 0.36 #> 2877     bd6t accuracy right  left 0.38 #> 2879     bd6t  neutral right right 0.68 #> 2881     bd6t accuracy right right 0.66 #> 2883     bd6t  neutral  left  left 0.54 #> 2885     bd6t    speed  left  left 0.58 #> 2887     bd6t accuracy right right 0.78 #> 2889     bd6t  neutral right right 0.46 #> 2891     bd6t accuracy  left  left 0.34 #> 2893     bd6t accuracy right  left 0.32 #> 2895     bd6t  neutral  left  left 0.64 #> 2897     bd6t accuracy  left  left 0.36 #> 2899     bd6t  neutral  left  left 0.54 #> 2901     bd6t accuracy  left  left 0.66 #> 2903     bd6t accuracy right right 0.54 #> 2905     bd6t accuracy right right 0.54 #> 2907     bd6t    speed  left  left 0.44 #> 2909     bd6t  neutral  left  left 0.54 #> 2911     bd6t  neutral  left  left 0.48 #> 2913     bd6t  neutral right  left 0.68 #> 2915     bd6t    speed right right 0.38 #> 2917     bd6t accuracy right right 0.84 #> 2919     bd6t    speed  left right 0.38 #> 2921     bd6t  neutral  left  left 0.68 #> 2923     bd6t accuracy right right 0.44 #> 2925     bd6t    speed  left  left 0.58 #> 2927     bd6t accuracy  left  left 0.56 #> 2929     bd6t    speed  left  left 0.30 #> 2931     bd6t    speed  left right 0.32 #> 2933     bd6t accuracy right  left 0.32 #> 2935     bd6t  neutral right  left 0.50 #> 2937     bd6t  neutral right  left 0.34 #> 2939     bd6t    speed right right 0.32 #> 2941     bd6t accuracy  left  left 0.46 #> 2943     bd6t  neutral  left  left 0.74 #> 2945     bd6t accuracy  left  left 0.60 #> 2947     bd6t accuracy  left  left 0.66 #> 2949     bd6t accuracy right right 0.54 #> 2951     bd6t  neutral right right 0.34 #> 2953     bd6t    speed right right 0.40 #> 2955     bd6t    speed right  left 0.56 #> 2957     bd6t  neutral  left  left 0.74 #> 2959     bd6t  neutral  left  left 0.64 #> 2961     bd6t  neutral right right 0.64 #> 2963     bd6t  neutral  left  left 0.62 #> 2965     bd6t accuracy  left  left 0.60 #> 2967     bd6t  neutral right  left 0.70 #> 2969     bd6t accuracy  left  left 0.50 #> 2971     bd6t  neutral  left  left 0.74 #> 2973     bd6t accuracy  left right 0.46 #> 2975     bd6t accuracy right right 1.40 #> 2977     bd6t accuracy right right 0.70 #> 2979     bd6t  neutral  left  left 0.38 #> 2981     bd6t  neutral  left right 0.36 #> 2983     bd6t  neutral  left right 0.36 #> 2985     bd6t  neutral  left  left 0.40 #> 2987     bd6t accuracy  left  left 0.46 #> 2989     bd6t accuracy  left  left 0.46 #> 2991     bd6t accuracy  left  left 0.66 #> 2993     bd6t  neutral  left  left 0.74 #> 2995     bd6t  neutral right right 0.64 #> 2997     bd6t    speed  left right 0.38 #> 2999     bd6t  neutral right right 0.86 #> 3001     bd6t accuracy  left  left 0.36 #> 3003     bd6t  neutral  left  left 0.68 #> 3005     bd6t accuracy right right 1.26 #> 3007     bd6t    speed right  left 0.52 #> 3009     bd6t  neutral  left  left 0.68 #> 3011     bd6t  neutral  left  left 0.74 #> 3013     bd6t  neutral right right 0.86 #> 3015     bd6t  neutral right right 0.80 #> 3017     bd6t accuracy right right 0.44 #> 3019     bd6t    speed right right 0.60 #> 3021     bd6t  neutral  left  left 0.42 #> 3023     bd6t  neutral  left  left 0.62 #> 3025     bd6t accuracy right right 0.56 #> 3027     bd6t  neutral right right 0.48 #> 3029     bd6t  neutral right right 0.46 #> 3031     bd6t  neutral right right 0.48 #> 3033     bd6t    speed  left right 0.34 #> 3035     bd6t  neutral  left  left 0.42 #> 3037     bd6t  neutral  left  left 0.48 #> 3039     bd6t accuracy right right 0.50 #> 3041     bd6t    speed right  left 0.36 #> 3043     bd6t accuracy right right 0.74 #> 3045     bd6t accuracy  left  left 0.56 #> 3047     bd6t accuracy  left  left 0.56 #> 3049     bd6t accuracy right right 0.58 #> 3051     bd6t    speed  left right 0.30 #> 3053     bd6t accuracy right right 0.96 #> 3055     bd6t accuracy  left  left 0.36 #> 3057     bd6t accuracy  left  left 0.52 #> 3059     bd6t  neutral  left  left 0.38 #> 3061     bd6t accuracy  left  left 0.50 #> 3063     bd6t  neutral  left  left 0.40 #> 3065     bd6t    speed  left  left 0.58 #> 3067     bd6t  neutral  left  left 0.48 #> 3069     bd6t    speed right right 0.60 #> 3071     bd6t accuracy right right 0.88 #> 3073     bd6t accuracy  left  left 0.56 #> 3075     bd6t    speed right  left 0.36 #> 3077     bd6t    speed right right 0.60 #> 3079     bd6t accuracy  left  left 0.52 #> 3081     bd6t  neutral right right 0.34 #> 3083     bd6t accuracy  left  left 0.56 #> 3085     bd6t    speed  left  left 0.32 #> 3087     bd6t    speed right  left 0.36 #> 3089     bd6t accuracy right  left 0.46 #> 3091     bd6t accuracy  left  left 0.70 #> 3093     bd6t  neutral right right 0.72 #> 3095     bd6t  neutral  left  left 0.42 #> 3097     bd6t accuracy right right 0.56 #> 3099     bd6t    speed right right 0.60 #> 3101     bd6t accuracy  left  left 0.46 #> 3103     bd6t    speed right right 0.60 #> 3105     bd6t  neutral right right 0.52 #> 3107     bd6t    speed right  left 0.36 #> 3109     bd6t  neutral  left  left 0.40 #> 3111     bd6t  neutral right right 0.80 #> 3113     bd6t accuracy  left  left 0.46 #> 3115     bd6t accuracy  left  left 0.50 #> 3117     bd6t  neutral  left  left 0.42 #> 3119     bd6t accuracy right right 0.50 #> 3121     bd6t accuracy right right 0.42 #> 3123     bd6t    speed  left  left 0.44 #> 3125     bd6t    speed  left  left 0.44 #> 3127     bd6t accuracy right right 0.58 #> 3129     bd6t accuracy  left  left 0.34 #> 3131     bd6t accuracy right right 0.54 #> 3133     bd6t    speed  left right 0.30 #> 3135     bd6t    speed right right 0.40 #> 3137     bd6t  neutral right right 0.86 #> 3139     bd6t accuracy right  left 0.76 #> 3141     bd6t  neutral right right 0.46 #> 3143     bd6t    speed right right 0.60 #> 3145     bd6t  neutral  left  left 0.42 #> 3147     bd6t accuracy  left  left 0.52 #> 3149     bd6t  neutral right  left 0.42 #> 3151     bd6t  neutral  left  left 0.38 #> 3153     bd6t accuracy  left  left 0.70 #> 3155     bd6t accuracy  left  left 0.36 #> 3157     bd6t    speed right  left 0.40 #> 3159     bd6t accuracy  left  left 0.50 #> 3161     bd6t accuracy  left right 1.32 #> 3163     bd6t accuracy right right 0.42 #> 3165     bd6t    speed  left right 0.38 #> 3167     bd6t accuracy  left  left 0.70 #> 3169     bd6t    speed right right 0.32 #> 3171     bd6t accuracy  left  left 0.52 #> 3173     bd6t  neutral right right 0.46 #> 3175     bd6t  neutral  left  left 0.48 #> 3177     bd6t    speed right right 0.60 #> 3179     bd6t    speed right right 0.40 #> 3181     bd6t accuracy  left  left 0.36 #> 3183     bd6t accuracy right  left 0.32 #> 3185     bd6t accuracy  left  left 0.52 #> 3187     bd6t accuracy  left  left 0.66 #> 3189     bd6t  neutral  left  left 0.74 #> 3191     bd6t    speed  left right 0.32 #> 3193     bd6t accuracy right right 0.42 #> 3195     bd6t accuracy  left  left 0.60 #> 3197     bd6t  neutral  left  left 0.80 #> 3199     bd6t  neutral right right 0.36 #> 3201     bd6t accuracy right right 0.66 #> 3203     bd6t    speed right right 0.40 #> 3205     bd6t  neutral right right 0.64 #> 3207     bd6t  neutral right  left 0.60 #> 3209     bd6t    speed right right 0.40 #> 3211     bd6t accuracy right right 0.66 #> 3213     bd6t    speed  left right 0.28 #> 3215     bd6t accuracy  left  left 0.60 #> 3217     bd6t accuracy right right 0.50 #> 3219     bd6t accuracy  left  left 0.56 #> 3221     bd6t    speed right  left 0.30 #> 3223     bd6t  neutral right right 0.48 #> 3225     bd6t accuracy  left  left 0.60 #> 3227     bd6t    speed  left  left 0.30 #> 3229     bd6t accuracy right right 0.54 #> 3231     bd6t  neutral right right 0.36 #> 3233     bd6t accuracy right  left 0.32 #> 3235     bd6t  neutral  left  left 0.78 #> 3237     bd6t accuracy right right 0.54 #> 3239     bd6t  neutral  left  left 0.62 #> 3241     bd6t  neutral right right 0.80 #> 3243     bd6t  neutral  left  left 0.48 #> 3245     bd6t accuracy right right 0.44 #> 3247     bd6t  neutral right right 0.36 #> 3249     bd6t accuracy right right 0.42 #> 3251     bd6t  neutral  left  left 1.12 #> 3253     bd6t  neutral  left  left 0.62 #> 3255     bd6t    speed  left  left 0.32 #> 3257     bd6t  neutral right  left 0.34 #> 3259     bd6t  neutral  left  left 0.48 #> 3261     bd6t  neutral  left  left 1.02 #> 3263     bd6t accuracy  left  left 0.36 #> 3265     bd6t    speed right right 0.60 #> 3267     bd6t  neutral  left  left 0.54 #> 3269     bd6t accuracy right right 0.66 #> 3271     bd6t accuracy right  left 0.58 #> 3273     bd6t    speed right right 0.60 #> 3275     bd6t accuracy  left  left 0.50 #> 3277     bd6t  neutral right right 0.48 #> 3279     bd6t accuracy right  left 0.32 #> 3281     bd6t    speed  left right 0.26 #> 3283     bd6t accuracy right right 0.74 #> 3285     bd6t  neutral right  left 0.34 #> 3287     bd6t accuracy right right 0.42 #> 3289     bd6t accuracy  left  left 0.60 #> 3291     bd6t accuracy right right 0.42 #> 3293     bd6t accuracy right right 0.44 #> 3295     bd6t accuracy  left  left 0.56 #> 3297     bd6t  neutral  left  left 0.68 #> 3299     bd6t accuracy right  left 0.32 #> 3301     bd6t  neutral right right 0.46 #> 3303     bd6t accuracy  left  left 0.66 #> 3305     bd6t  neutral  left  left 0.88 #> 3307     bd6t accuracy  left  left 0.52 #> 3309     bd6t  neutral right  left 0.34 #> 3311     bd6t accuracy right right 0.78 #> 3313     bd6t    speed right right 0.40 #> 3315     bd6t  neutral right right 0.68 #> 3317     bd6t  neutral  left  left 0.48 #> 3319     bl1t  neutral right right 0.46 #> 3321     bl1t  neutral right right 0.52 #> 3323     bl1t  neutral  left  left 0.46 #> 3325     bl1t accuracy right right 0.48 #> 3327     bl1t accuracy right right 0.44 #> 3329     bl1t accuracy right right 0.44 #> 3331     bl1t    speed  left  left 0.40 #> 3333     bl1t  neutral  left  left 0.36 #> 3335     bl1t accuracy  left  left 0.44 #> 3337     bl1t accuracy right right 0.50 #> 3339     bl1t  neutral right  left 0.42 #> 3341     bl1t accuracy  left  left 0.48 #> 3343     bl1t    speed  left  left 0.40 #> 3345     bl1t accuracy right right 0.44 #> 3347     bl1t accuracy right right 0.42 #> 3349     bl1t accuracy right right 0.44 #> 3351     bl1t  neutral right right 0.46 #> 3353     bl1t accuracy right right 0.44 #> 3355     bl1t  neutral right right 0.38 #> 3357     bl1t accuracy right right 0.42 #> 3359     bl1t  neutral  left  left 0.46 #> 3361     bl1t accuracy  left  left 0.56 #> 3363     bl1t  neutral  left  left 0.42 #> 3365     bl1t  neutral right right 0.38 #> 3367     bl1t  neutral  left  left 0.38 #> 3369     bl1t  neutral  left  left 0.38 #> 3371     bl1t    speed right right 0.68 #> 3373     bl1t  neutral right right 0.52 #> 3375     bl1t    speed right right 0.82 #> 3377     bl1t  neutral  left  left 0.54 #> 3379     bl1t  neutral right right 0.38 #> 3381     bl1t  neutral  left  left 0.46 #> 3383     bl1t accuracy  left  left 0.44 #> 3385     bl1t accuracy right right 0.42 #> 3387     bl1t    speed  left  left 0.34 #> 3389     bl1t accuracy right right 0.94 #> 3391     bl1t  neutral right right 0.70 #> 3393     bl1t    speed right right 0.36 #> 3395     bl1t  neutral right right 0.52 #> 3397     bl1t  neutral right right 0.38 #> 3399     bl1t accuracy  left  left 0.50 #> 3401     bl1t    speed  left  left 0.40 #> 3403     bl1t  neutral right right 0.38 #> 3405     bl1t  neutral right  left 0.52 #> 3407     bl1t    speed right  left 0.38 #> 3409     bl1t  neutral right right 0.52 #> 3411     bl1t  neutral right right 0.52 #> 3413     bl1t  neutral  left  left 0.46 #> 3415     bl1t accuracy  left  left 0.62 #> 3417     bl1t accuracy  left  left 0.44 #> 3419     bl1t accuracy right  left 0.48 #> 3421     bl1t accuracy  left  left 0.68 #> 3423     bl1t  neutral right right 0.38 #> 3425     bl1t    speed right  left 0.56 #> 3427     bl1t  neutral right right 0.64 #> 3429     bl1t accuracy  left  left 0.58 #> 3431     bl1t accuracy right right 0.56 #> 3433     bl1t  neutral right right 0.78 #> 3435     bl1t accuracy  left  left 0.48 #> 3437     bl1t    speed right right 0.58 #> 3439     bl1t accuracy  left  left 0.44 #> 3441     bl1t accuracy right right 0.44 #> 3443     bl1t accuracy right right 0.40 #> 3445     bl1t accuracy right  left 0.66 #> 3447     bl1t  neutral right right 0.38 #> 3449     bl1t    speed  left  left 0.40 #> 3451     bl1t  neutral  left  left 0.38 #> 3453     bl1t  neutral  left  left 0.42 #> 3455     bl1t    speed  left  left 0.34 #> 3457     bl1t  neutral  left  left 0.38 #> 3459     bl1t accuracy  left  left 0.70 #> 3461     bl1t    speed  left  left 0.52 #> 3463     bl1t accuracy right right 0.40 #> 3465     bl1t accuracy right right 0.48 #> 3467     bl1t    speed  left right 0.36 #> 3469     bl1t  neutral  left  left 0.42 #> 3471     bl1t accuracy right right 0.56 #> 3473     bl1t accuracy  left  left 0.44 #> 3475     bl1t    speed  left  left 0.40 #> 3477     bl1t accuracy right right 0.60 #> 3479     bl1t accuracy  left  left 0.66 #> 3481     bl1t    speed  left right 0.30 #> 3483     bl1t accuracy  left  left 0.48 #> 3485     bl1t    speed  left  left 0.34 #> 3487     bl1t    speed  left  left 0.40 #> 3489     bl1t accuracy right right 0.56 #> 3491     bl1t    speed  left  left 0.34 #> 3493     bl1t    speed  left  left 0.34 #> 3495     bl1t  neutral  left  left 0.42 #> 3497     bl1t  neutral right  left 0.40 #> 3499     bl1t accuracy  left  left 0.64 #> 3501     bl1t    speed  left  left 0.40 #> 3503     bl1t  neutral right  left 0.40 #> 3505     bl1t  neutral right right 0.52 #> 3507     bl1t  neutral  left  left 0.36 #> 3509     bl1t  neutral  left  left 0.38 #> 3511     bl1t accuracy right right 0.54 #> 3513     bl1t accuracy  left  left 0.48 #> 3515     bl1t accuracy  left  left 0.44 #> 3517     bl1t accuracy right  left 0.46 #> 3519     bl1t    speed right  left 0.34 #> 3521     bl1t    speed right  left 0.28 #> 3523     bl1t accuracy  left  left 0.50 #> 3525     bl1t    speed right right 0.58 #> 3527     bl1t  neutral  left  left 0.42 #> 3529     bl1t    speed  left right 0.36 #> 3531     bl1t    speed right right 0.82 #> 3533     bl1t accuracy  left  left 0.44 #> 3535     bl1t    speed  left  left 0.32 #> 3537     bl1t  neutral right right 0.46 #> 3539     bl1t accuracy right right 1.26 #> 3541     bl1t accuracy right right 0.42 #> 3543     bl1t  neutral  left  left 0.46 #> 3545     bl1t    speed right  left 0.34 #> 3547     bl1t    speed  left  left 0.40 #> 3549     bl1t  neutral right right 0.46 #> 3551     bl1t accuracy right right 0.40 #> 3553     bl1t accuracy  left  left 0.48 #> 3555     bl1t accuracy right right 0.48 #> 3557     bl1t accuracy  left  left 0.98 #> 3559     bl1t accuracy right right 0.42 #> 3561     bl1t  neutral right right 0.52 #> 3563     bl1t  neutral right right 0.46 #> 3565     bl1t    speed right right 0.36 #> 3567     bl1t    speed  left  left 0.40 #> 3569     bl1t accuracy right right 0.48 #> 3571     bl1t    speed  left  left 0.34 #> 3573     bl1t accuracy right right 0.42 #> 3575     bl1t  neutral  left  left 0.42 #> 3577     bl1t accuracy  left  left 0.44 #> 3579     bl1t accuracy  left  left 0.48 #> 3581     bl1t  neutral  left  left 0.38 #> 3583     bl1t    speed  left  left 0.40 #> 3585     bl1t accuracy right right 0.50 #> 3587     bl1t    speed right  left 0.38 #> 3589     bl1t    speed right right 0.36 #> 3591     bl1t    speed right  left 0.32 #> 3593     bl1t    speed right right 0.68 #> 3595     bl1t    speed right right 0.72 #> 3597     bl1t  neutral right  left 0.68 #> 3599     bl1t  neutral right right 0.46 #> 3601     bl1t  neutral  left  left 0.46 #> 3603     bl1t    speed right right 0.58 #> 3605     bl1t accuracy right  left 0.54 #> 3607     bl1t  neutral right right 0.64 #> 3609     bl1t  neutral right right 0.92 #> 3611     bl1t  neutral  left  left 0.46 #> 3613     bl1t accuracy right right 0.40 #> 3615     bl1t  neutral  left  left 0.38 #> 3617     bl1t  neutral right right 0.66 #> 3619     bl1t  neutral  left  left 0.42 #> 3621     bl1t    speed  left  left 0.40 #> 3623     bl1t accuracy right right 0.42 #> 3625     bl1t    speed  left  left 0.34 #> 3627     bl1t accuracy  left  left 0.48 #> 3629     bl1t    speed  left  left 0.40 #> 3631     bl1t accuracy right right 0.40 #> 3633     bl1t accuracy right right 0.44 #> 3635     bl1t    speed  left  left 0.30 #> 3637     bl1t accuracy  left right 0.46 #> 3639     bl1t  neutral right right 0.80 #> 3641     bl1t accuracy  left  left 1.02 #> 3643     bl1t  neutral  left  left 0.54 #> 3645     bl1t  neutral  left  left 0.36 #> 3647     bl1t accuracy right right 0.44 #> 3649     bl1t    speed right  left 0.34 #> 3651     bl1t    speed right right 0.34 #> 3653     bl1t accuracy right right 0.48 #> 3655     bl1t accuracy right right 0.84 #> 3657     bl1t    speed  left  left 0.34 #> 3659     bl1t  neutral right right 0.52 #> 3661     bl1t accuracy right right 1.00 #> 3663     bl1t accuracy right  left 0.50 #> 3665     bl1t accuracy  left  left 0.58 #> 3667     bl1t  neutral  left  left 1.00 #> 3669     bl1t    speed  left  left 0.30 #> 3671     bl1t    speed right  left 0.38 #> 3673     bl1t accuracy right right 0.42 #> 3675     bl1t accuracy  left  left 0.56 #> 3677     bl1t accuracy right  left 1.04 #> 3679     bl1t  neutral  left  left 0.38 #> 3681     bl1t accuracy right right 0.50 #> 3683     bl1t accuracy  left  left 0.44 #> 3685     bl1t  neutral  left  left 0.42 #> 3687     bl1t  neutral  left  left 0.42 #> 3689     bl1t    speed  left right 0.32 #> 3691     bl1t  neutral right right 0.66 #> 3693     bl1t accuracy right right 0.48 #> 3695     bl1t    speed right right 0.58 #> 3697     bl1t accuracy right  left 0.48 #> 3699     bl1t  neutral right right 0.52 #> 3701     bl1t accuracy right right 0.50 #> 3703     bl1t    speed right right 0.36 #> 3705     bl1t    speed  left  left 0.32 #> 3707     bl1t accuracy right  left 0.64 #> 3709     bl1t accuracy  left  left 0.50 #> 3711     bl1t  neutral  left  left 0.54 #> 3713     bl1t    speed  left  left 0.32 #> 3715     bl1t    speed right  left 0.34 #> 3717     bl1t  neutral right right 0.98 #> 3719     bl1t accuracy  left  left 0.48 #> 3721     bl1t    speed  left  left 0.40 #> 3723     bl1t  neutral  left  left 0.36 #> 3725     bl1t    speed right  left 0.38 #> 3727     bl1t    speed right right 0.58 #> 3729     bl1t accuracy  left  left 0.50 #> 3731     bl1t  neutral  left  left 0.46 #> 3733     bl1t  neutral right right 0.46 #> 3735     bl1t    speed  left  left 0.40 #> 3737     bl1t    speed right  left 0.38 #> 3739     bl1t  neutral  left  left 0.38 #> 3741     bl1t    speed  left right 0.34 #> 3743     bl1t  neutral right right 0.46 #> 3745     bl1t accuracy right right 0.56 #> 3747     bl1t    speed right right 0.58 #> 3749     bl1t    speed right  left 0.30 #> 3751     bl1t    speed  left right 0.26 #> 3753     bl1t  neutral right right 0.46 #> 3755     bl1t  neutral right right 0.46 #> 3757     bl1t    speed  left  left 0.34 #> 3759     bl1t  neutral  left  left 0.42 #> 3761     bl1t  neutral  left  left 0.36 #> 3763     bl1t  neutral  left  left 0.36 #> 3765     bl1t    speed  left right 0.42 #> 3767     bl1t accuracy  left  left 0.64 #> 3769     bl1t accuracy right right 0.48 #> 3771     bl1t accuracy right  left 0.44 #> 3773     bl1t  neutral right right 0.52 #> 3775     bl1t accuracy  left  left 0.44 #> 3777     bl1t  neutral  left  left 0.38 #> 3779     bl1t  neutral  left  left 0.38 #> 3781     bl1t  neutral right right 0.66 #> 3783     bl1t  neutral  left  left 0.46 #> 3785     bl1t  neutral  left  left 0.46 #> 3787     bl1t  neutral  left  left 0.42 #> 3789     bl1t accuracy  left  left 0.44 #> 3791     bl1t  neutral  left  left 0.42 #> 3793     bl1t accuracy right right 0.56 #> 3795     bl1t accuracy right right 0.56 #> 3797     bl1t accuracy right right 0.50 #> 3799     bl1t accuracy right right 0.54 #> 3801     bl1t accuracy  left  left 0.48 #> 3803     bl1t accuracy right right 0.44 #> 3805     bl1t    speed  left  left 0.52 #> 3807     bl1t accuracy  left  left 0.60 #> 3809     bl1t  neutral  left  left 0.76 #> 3811     bl1t    speed  left  left 0.34 #> 3813     bl1t accuracy  left  left 0.44 #> 3815     bl1t accuracy right right 0.54 #> 3817     bl1t accuracy right right 0.48 #> 3819     bl1t  neutral  left  left 0.38 #> 3821     bl1t    speed  left  left 0.40 #> 3823     bl1t accuracy right right 0.40 #> 3825     bl1t  neutral right right 0.38 #> 3827     bl1t accuracy right  left 0.44 #> 3829     bl1t accuracy  left  left 0.56 #> 3831     bl1t    speed right right 0.36 #> 3833     bl1t    speed  left right 0.38 #> 3835     bl1t accuracy  left  left 0.74 #> 3837     bl1t accuracy right right 0.44 #> 3839     bl1t  neutral right  left 0.40 #> 3841     bl1t  neutral  left  left 0.42 #> 3843     bl1t    speed  left  left 0.32 #> 3845     bl1t  neutral  left  left 0.36 #> 3847     bl1t accuracy right right 0.48 #> 3849     bl1t accuracy  left  left 0.48 #> 3851     bl1t accuracy right right 0.50 #> 3853     bl1t  neutral right right 0.52 #> 3855     bl1t  neutral right  left 0.42 #> 3857     bl1t  neutral right  left 0.36 #> 3859     bl1t    speed right  left 0.32 #> 3861     bl1t  neutral right right 0.46 #> 3863     bl1t accuracy right right 0.56 #> 3865     bl1t    speed right right 0.82 #> 3867     bl1t accuracy right right 0.42 #> 3869     bl1t  neutral right  left 0.36 #> 3871     bl1t  neutral  left  left 0.36 #> 3873     bl1t accuracy right right 0.50 #> 3875     bl1t    speed right right 0.36 #> 3877     bl1t    speed  left  left 0.34 #> 3879     bl1t  neutral  left  left 0.54 #> 3881     bl1t    speed  left right 0.32 #> 3883     bl1t accuracy right right 0.60 #> 3885     bl1t    speed right  left 0.32 #> 3887     bl1t    speed right right 0.58 #> 3889     bl1t    speed right right 0.72 #> 3891     bl1t    speed right right 0.34 #> 3893     bl1t accuracy right right 1.02 #> 3895     bl1t accuracy right right 0.50 #> 3897     bl1t accuracy right right 0.40 #> 3899     bl1t accuracy right right 0.42 #> 3901     bl1t    speed right right 0.36 #> 3903     bl1t  neutral  left  left 0.42 #> 3905     bl1t    speed  left right 0.36 #> 3907     bl1t accuracy right right 0.44 #> 3909     bl1t    speed right right 0.68 #> 3911     bl1t accuracy right right 0.40 #> 3913     bl1t  neutral  left  left 0.46 #> 3915     bl1t  neutral right  left 0.40 #> 3917     bl1t  neutral  left  left 0.42 #> 3919     bl1t  neutral  left  left 0.42 #> 3921     bl1t    speed right right 0.72 #> 3923     bl1t  neutral  left  left 0.42 #> 3925     bl1t    speed  left right 0.36 #> 3927     bl1t accuracy  left  left 0.48 #> 3929     bl1t  neutral  left  left 0.42 #> 3931     bl1t  neutral  left  left 0.38 #> 3933     bl1t    speed right right 0.34 #> 3935     bl1t  neutral  left  left 0.72 #> 3937     bl1t    speed  left  left 0.32 #> 3939     bl1t accuracy right  left 0.48 #> 3941     bl1t accuracy right  left 0.46 #> 3943     bl1t accuracy right right 0.40 #> 3945     bl1t accuracy  left  left 0.56 #> 3947     bl1t  neutral  left  left 0.46 #> 3949     bl1t    speed right right 0.72 #> 3951     bl1t accuracy  left  left 0.64 #> 3953     bl1t    speed  left  left 0.34 #> 3955     bl1t  neutral right  left 0.36 #> 3957     bl1t accuracy  left  left 0.56 #> 3959     bl1t  neutral  left  left 0.38 #> 3961     bl1t    speed right  left 0.34 #> 3963     bl1t  neutral right right 0.88 #> 3965     bl1t  neutral  left  left 0.36 #> 3967     bl1t accuracy  left  left 0.50 #> 3969     bl1t accuracy right  left 0.48 #> 3971     bl1t  neutral  left  left 0.38 #> 3973     bl1t accuracy  left  left 0.60 #> 3975     bl1t  neutral right  left 0.40 #> 3977     bl1t  neutral  left  left 0.76 #> 3979     bl1t accuracy  left  left 0.44 #> 3981     bl1t accuracy right right 0.40 #> 3983     bl1t accuracy right right 0.42 #> 3985     bl1t accuracy right right 0.56 #> 3987     bl1t accuracy  left  left 0.50 #> 3989     bl1t  neutral  left  left 0.46 #> 3991     bl1t accuracy right right 0.42 #> 3993     bl1t    speed  left  left 0.34 #> 3995     bl1t accuracy right  left 0.44 #> 3997     bl1t  neutral right right 0.62 #> 3999     bl1t    speed right right 0.34 #> 4001     bl1t  neutral  left  left 0.36 #> 4003     bl1t accuracy right right 0.40 #> 4005     bl1t accuracy  left right 0.52 #> 4007     bl1t    speed  left  left 0.28 #> 4009     bl1t  neutral right  left 0.36 #> 4011     bl1t  neutral  left  left 0.54 #> 4013     bl1t  neutral  left  left 0.42 #> 4015     bl1t accuracy right right 0.44 #> 4017     bl1t accuracy right  left 0.44 #> 4019     bl1t  neutral  left  left 0.54 #> 4021     bl1t accuracy  left  left 0.66 #> 4023     bl1t  neutral right right 0.70 #> 4025     bl1t  neutral right right 0.88 #> 4027     bl1t    speed  left  left 0.52 #> 4029     bl1t accuracy right  left 0.44 #> 4031     bl1t accuracy right right 0.50 #> 4033     bl1t    speed right  left 0.26 #> 4035     bl1t  neutral  left right 0.40 #> 4037     bl1t accuracy right right 0.54 #> 4039     bl1t    speed  left  left 0.40 #> 4041     bl1t  neutral  left  left 0.38 #> 4043     bl1t accuracy  left  left 0.48 #> 4045     bl1t    speed  left right 0.36 #> 4047     bl1t  neutral right right 0.38 #> 4049     bl1t accuracy right right 0.48 #> 4051     bl1t accuracy  left  left 0.50 #> 4053     bl1t  neutral  left  left 0.42 #> 4055     bl1t  neutral right  left 0.52 #> 4057     bl1t accuracy right  left 0.46 #> 4059     bl1t    speed  left  left 0.34 #> 4061     bl1t    speed  left  left 0.52 #> 4063     bl1t accuracy right right 0.48 #> 4065     bl1t    speed right  left 0.32 #> 4067     bl1t    speed  left  left 0.40 #> 4069     bl1t  neutral right right 0.66 #> 4071     bl1t accuracy  left  left 0.48 #> 4073     bl1t  neutral  left  left 0.76 #> 4075     bl1t accuracy right right 0.54 #> 4077     bl1t    speed  left  left 0.34 #> 4079     bl1t accuracy right right 0.86 #> 4081     bl1t    speed  left  left 0.32 #> 4083     bl1t    speed  left  left 0.34 #> 4085     bl1t accuracy right right 1.22 #> 4087     bl1t  neutral  left  left 0.36 #> 4089     bl1t  neutral  left  left 0.38 #> 4091     bl1t  neutral  left  left 0.54 #> 4093     bl1t  neutral right right 0.92 #> 4095     bl1t    speed right right 0.72 #> 4097     bl1t    speed  left  left 0.52 #> 4099     bl1t accuracy right  left 0.54 #> 4101     bl1t accuracy  left  left 0.56 #> 4103     bl1t accuracy  left  left 0.60 #> 4105     bl1t    speed right  left 0.38 #> 4107     bl1t  neutral  left  left 0.42 #> 4109     bl1t accuracy right right 0.40 #> 4111     bl1t  neutral right right 0.66 #> 4113     bl1t    speed  left  left 0.34 #> 4115     bl1t accuracy  left right 0.68 #> 4117     bl1t    speed right  left 0.32 #> 4119     bl1t accuracy  left  left 0.86 #> 4121     bl1t  neutral right right 0.78 #> 4123     bl1t  neutral right right 0.70 #> 4125     bl1t    speed  left  left 0.30 #> 4127     bl1t  neutral right right 0.64 #> 4129     bl1t    speed  left  left 0.32 #> 4131     bl1t  neutral  left  left 0.46 #> 4133     bl1t    speed right  left 0.34 #> 4135     bl1t  neutral  left  left 0.54 #> 4137     bl1t  neutral  left  left 0.88 #> 4139     bl1t    speed  left right 0.28 #> 4141     bl1t accuracy right right 0.76 #> 4143     bl1t accuracy  left  left 0.58 #> 4145     bl1t accuracy  left  left 0.62 #> 4147     bl1t  neutral right right 0.52 #> 4149     bl1t    speed right right 0.58 #> 4151     bl1t    speed  left  left 0.30 #> 4153     bl1t  neutral right right 0.52 #> 4155     bl1t accuracy  left  left 0.62 #> 4157     bl1t    speed  left  left 0.80 #> 4159     bl1t    speed right right 0.68 #> 4161     bl1t    speed  left  left 0.32 #> 4163     bl1t    speed right right 0.30 #> 4165     bl1t    speed right  left 0.32 #> 4167     bl1t accuracy  left  left 0.56 #> 4169     bl1t  neutral  left  left 0.46 #> 4171     bl1t  neutral right right 0.46 #> 4173     bl1t    speed right right 0.58 #> 4175     bl1t    speed right right 0.58 #> 4177     bl1t accuracy right right 0.54 #> 4179     bl1t    speed right right 0.32 #> 4181     bl1t  neutral  left  left 0.42 #> 4183     bl1t accuracy  left  left 0.50 #> 4185     bl1t accuracy  left  left 0.70 #> 4187     bl1t    speed right  left 0.30 #> 4189     bl1t    speed  left  left 0.30 #> 4191     bl1t accuracy right right 0.48 #> 4193     bl1t  neutral  left right 0.74 #> 4195     bl1t  neutral  left  left 0.36 #> 4197     bl1t accuracy right right 0.60 #> 4199     bl1t accuracy  left  left 0.56 #> 4201     bl1t    speed  left right 0.34 #> 4203     bl1t accuracy right right 0.42 #> 4205     bl1t    speed right right 0.72 #> 4207     bl1t accuracy  left  left 0.50 #> 4209     bl1t accuracy  left  left 0.50 #> 4211     bl1t accuracy right right 0.42 #> 4213     bl1t    speed  left  left 0.52 #> 4215     bl1t accuracy right right 0.48 #> 4217     bl1t accuracy right right 0.44 #> 4219     bl1t accuracy right right 0.54 #> 4221     bl1t accuracy  left  left 0.62 #> 4223     bl1t  neutral  left  left 0.36 #> 4225     bl1t    speed  left right 0.38 #> 4227     bl1t    speed  left  left 0.30 #> 4229     bl1t accuracy right right 0.56 #> 4231     bl1t accuracy  left  left 0.56 #> 4233     bl1t accuracy right right 0.56 #> 4235     bl1t    speed right  left 0.38 #> 4237     bl1t  neutral right right 0.52 #> 4239     bl1t  neutral right  left 0.40 #> 4241     bl1t    speed  left  left 0.40 #> 4243     bl1t    speed  left right 0.32 #> 4245     bl1t  neutral  left  left 0.42 #> 4247     bl1t    speed  left  left 0.30 #> 4249     bl1t    speed right  left 0.32 #> 4251     bl1t accuracy  left  left 0.68 #> 4253     bl1t  neutral right right 0.46 #> 4255     bl1t accuracy right  left 0.62 #> 4257     bl1t accuracy right right 0.50 #> 4259     bl1t accuracy right  left 1.10 #> 4261     bl1t    speed  left  left 0.32 #> 4263     bl1t accuracy  left  left 0.48 #> 4265     bl1t    speed  left right 0.36 #> 4267     bl1t accuracy  left  left 0.98 #> 4269     bl1t accuracy  left  left 0.50 #> 4271     bl1t  neutral  left  left 0.42 #> 4273     bl1t    speed right right 0.36 #> 4275     bl1t  neutral  left  left 0.46 #> 4277     bl1t accuracy right right 0.50 #> 4279     bl1t    speed right  left 0.30 #> 4281     bl1t accuracy  left  left 0.66 #> 4283     bl1t accuracy  left  left 0.48 #> 4285     bl1t accuracy  left right 0.58 #> 4287     bl1t  neutral right right 0.62 #> 4289     bl1t    speed right right 0.34 #> 4291     bl1t accuracy  left  left 0.60 #> 4293     bl1t accuracy  left  left 0.50 #> 4295     bl1t accuracy right right 0.42 #> 4297     bl1t accuracy  left right 0.46 #> 4299     bl1t accuracy  left  left 0.48 #> 4301     bl1t    speed right right 0.34 #> 4303     bl1t    speed  left  left 0.40 #> 4305     bl1t  neutral right  left 0.36 #> 4307     bl1t    speed  left right 0.36 #> 4309     bl1t accuracy  left  left 0.96 #> 4311     bl1t    speed right right 0.36 #> 4313     bl1t  neutral  left right 0.40 #> 4315     bl1t accuracy  left  left 0.56 #> 4317     bl1t accuracy  left  left 0.92 #> 4319     bl1t    speed  left right 0.38 #> 4321     bl1t accuracy right right 0.84 #> 4323     bl1t    speed  left  left 0.32 #> 4325     bl1t accuracy right right 0.56 #> 4327     bl1t    speed  left  left 0.32 #> 4329     bl1t accuracy  left  left 0.56 #> 4331     bl1t accuracy  left  left 0.94 #> 4333     bl1t  neutral  left  left 0.46 #> 4335     bl1t accuracy  left  left 0.70 #> 4337     bl1t    speed right  left 0.30 #> 4339     bl1t  neutral  left  left 0.36 #> 4341     bl1t accuracy  left  left 0.66 #> 4343     bl1t accuracy  left  left 0.74 #> 4345     bl1t accuracy  left right 0.58 #> 4347     bl1t accuracy  left  left 0.78 #> 4349     bl1t  neutral right right 0.38 #> 4351     bl1t accuracy  left  left 0.50 #> 4353     bl1t    speed  left  left 0.40 #> 4355     bl1t    speed right  left 0.28 #> 4357     bl1t    speed  left  left 0.52 #> 4359     bl1t accuracy right right 0.40 #> 4361     bl1t accuracy  left  left 0.44 #> 4363     bl1t accuracy  left  left 0.60 #> 4365     bl1t  neutral  left  left 0.42 #> 4367     bl1t    speed right  left 0.56 #> 4369     bl1t  neutral  left  left 0.38 #> 4371     bl1t accuracy right right 0.40 #> 4373     bl1t accuracy right right 1.02 #> 4375     bl1t  neutral  left  left 0.54 #> 4377     bl1t accuracy right right 1.16 #> 4379     bl1t    speed right right 0.30 #> 4381     bl1t  neutral  left  left 0.46 #> 4383     bl1t    speed  left  left 0.34 #> 4385     bl1t accuracy  left  left 0.44 #> 4387     bl1t accuracy  left right 0.68 #> 4389     bl1t    speed right  left 0.38 #> 4391     bl1t  neutral  left  left 0.46 #> 4393     bl1t    speed right right 0.36 #> 4395     bl1t accuracy  left right 0.62 #> 4397     bl1t    speed  left  left 0.80 #> 4399     bl1t accuracy right right 0.94 #> 4401     bl1t  neutral  left  left 0.76 #> 4403     bl1t accuracy  left  left 0.86 #> 4405     bl1t    speed  left  left 0.52 #> 4407     bl1t accuracy right right 0.54 #> 4409     bl1t accuracy  left  left 0.84 #> 4411     bl1t  neutral  left  left 0.36 #> 4413     bl1t  neutral right  left 0.52 #> 4415     bl1t accuracy right right 0.50 #> 4417     bl1t    speed  left  left 0.28 #> 4419     bl1t  neutral right right 0.46 #> 4421     bl1t  neutral right right 0.46 #> 4423     bl1t    speed  left  left 0.32 #> 4425     bl1t    speed  left right 0.32 #> 4427     bl1t  neutral  left  left 0.46 #> 4429     bl1t accuracy  left  left 0.48 #> 4431     bl1t    speed right right 0.34 #> 4433     bl1t    speed  left  left 0.34 #> 4435     bl1t  neutral  left  left 0.46 #> 4437     bl1t    speed right  left 0.34 #> 4439     bl1t    speed  left  left 0.28 #> 4441     bl1t  neutral  left  left 0.38 #> 4443     bl1t  neutral  left  left 0.76 #> 4445     bl1t    speed  left  left 0.34 #> 4447     bl1t accuracy  left  left 0.56 #> 4449     bl1t    speed right  left 0.32 #> 4451     bl1t accuracy right  left 0.62 #> 4453     bl1t accuracy right right 0.48 #> 4455     bl1t  neutral  left  left 0.42 #> 4457     bl1t    speed right  left 0.28 #> 4459     bl1t  neutral  left  left 0.36 #> 4461     bl1t  neutral right right 0.38 #> 4463     bl1t  neutral  left  left 0.38 #> 4465     bl1t accuracy right  left 0.78 #> 4467     bl1t    speed  left  left 0.52 #> 4469     bl1t  neutral right right 0.70 #> 4471     bl1t accuracy  left  left 0.84 #> 4473     bl1t    speed  left  left 0.34 #> 4475     bl1t  neutral right  left 0.36 #> 4477     bl1t accuracy  left  left 0.48 #> 4479     bl1t accuracy  left  left 0.50 #> 4481     bl1t accuracy  left  left 0.70 #> 4483     bl1t accuracy right  left 0.48 #> 4485     bl1t    speed  left  left 0.28 #> 4487     bl1t  neutral right right 0.52 #> 4489     bl1t    speed  left  left 0.52 #> 4491     bl1t accuracy  left  left 0.50 #> 4493     bl1t accuracy right right 0.60 #> 4495     bl1t    speed right  left 0.34 #> 4497     bl1t  neutral  left  left 0.36 #> 4499     bl1t    speed  left  left 0.40 #> 4501     bl1t accuracy right right 0.42 #> 4503     bl1t accuracy right right 0.48 #> 4505     bl1t accuracy right  left 0.50 #> 4507     bl1t accuracy  left  left 1.02 #> 4509     bl1t  neutral  left  left 1.04 #> 4511     bl1t accuracy right right 0.54 #> 4513     bl1t  neutral right right 0.66 #> 4515     bl1t accuracy right  left 0.48 #> 4517     bl1t  neutral  left  left 0.38 #> 4519     bl1t accuracy right right 0.94 #> 4521     bl1t    speed right  left 0.28 #> 4523     bl1t    speed right  left 0.34 #> 4525     bl1t accuracy right right 0.60 #> 4527     bl1t accuracy right  left 0.54 #> 4529     bl1t accuracy right right 0.56 #> 4531     bl1t  neutral right right 1.28 #> 4533     bl1t    speed right  left 0.30 #> 4535     bl1t accuracy right right 0.50 #> 4537     bl1t  neutral right right 0.64 #> 4539     bl1t    speed right  left 0.34 #> 4541     bl1t    speed right right 0.82 #> 4543     bl1t accuracy  left  left 0.58 #> 4545     bl1t    speed  left  left 0.26 #> 4547     bl1t  neutral  left  left 0.42 #> 4549     bl1t    speed right  left 0.32 #> 4551     bl1t    speed right right 0.58 #> 4553     bl1t  neutral  left right 0.48 #> 4555     bl1t    speed right  left 0.56 #> 4557     bl1t accuracy right right 0.84 #> 4559     bl1t    speed  left  left 0.28 #> 4561     bl1t accuracy  left  left 0.44 #> 4563     bl1t  neutral  left  left 0.38 #> 4565     bl1t    speed  left right 0.38 #> 4567     bl1t    speed  left  left 0.30 #> 4569     bl1t accuracy  left  left 0.70 #> 4571     bl1t    speed  left  left 0.30 #> 4573     bl1t    speed  left  left 0.28 #> 4575     bl1t  neutral right right 0.78 #> 4577     bl1t    speed right right 0.36 #> 4579     bl1t  neutral right right 0.62 #> 4581     bl1t accuracy  left  left 0.44 #> 4583     bl1t accuracy  left  left 0.48 #> 4585     bl1t    speed right right 0.34 #> 4587     bl1t accuracy right right 0.44 #> 4589     bl1t accuracy right right 0.44 #> 4591     bl1t  neutral right right 0.52 #> 4593     bl1t accuracy right right 1.42 #> 4595     bl1t accuracy  left  left 0.62 #> 4597     bl1t    speed right  left 0.28 #> 4599     bl1t  neutral  left  left 0.36 #> 4601     bl1t accuracy right  left 0.46 #> 4603     bl1t accuracy  left  left 0.56 #> 4605     bl1t accuracy right right 0.84 #> 4607     bl1t  neutral right  left 0.52 #> 4609     bl1t    speed  left  left 0.34 #> 4611     bl1t    speed right  left 0.28 #> 4613     bl1t accuracy right right 0.40 #> 4615     bl1t  neutral  left  left 0.36 #> 4617     bl1t    speed right  left 0.34 #> 4619     bl1t  neutral  left  left 0.76 #> 4621     bl1t    speed right right 0.30 #> 4623     bl1t    speed  left right 0.34 #> 4625     bl1t    speed right  left 0.30 #> 4627     bl1t accuracy  left  left 0.50 #> 4629     bl1t  neutral  left  left 0.46 #> 4631     bl1t accuracy right right 0.56 #> 4633     bl1t accuracy  left  left 0.62 #> 4635     bl1t    speed right  left 0.28 #> 4637     bl1t  neutral right  left 0.36 #> 4639     bl1t  neutral  left  left 0.72 #> 4641     bl1t accuracy  left  left 0.68 #> 4643     bl1t accuracy  left right 0.52 #> 4645     bl1t accuracy right right 0.50 #> 4647     bl1t    speed right  left 0.32 #> 4649     bl1t    speed  left right 0.38 #> 4651     bl1t accuracy right  left 0.44 #> 4653     bl1t accuracy  left  left 0.44 #> 4655     bl1t    speed  left  left 0.30 #> 4657     bl1t accuracy  left  left 0.60 #> 4659     bl1t accuracy  left  left 0.48 #> 4661     bl1t    speed right right 0.34 #> 4663     bl1t accuracy  left  left 0.56 #> 4665     bl1t  neutral right right 0.78 #> 4667     bl1t accuracy  left  left 0.66 #> 4669     bl1t  neutral  left  left 0.46 #> 4671     bl1t    speed right right 0.34 #> 4673     bl1t  neutral right right 0.62 #> 4675     bl1t  neutral right  left 0.40 #> 4677     bl1t    speed right right 0.82 #> 4679     bl1t accuracy  left right 0.62 #> 4681     bl1t  neutral right right 0.62 #> 4683     bl1t accuracy  left  left 0.60 #> 4685     bl1t  neutral  left  left 0.36 #> 4687     bl1t accuracy  left  left 0.44 #> 4689     bl1t    speed  left right 0.34 #> 4691     bl1t  neutral  left right 0.40 #> 4693     bl1t  neutral  left right 0.56 #> 4695     bl1t    speed  left  left 0.34 #> 4697     bl1t    speed right right 0.34 #> 4699     bl1t accuracy  left  left 0.56 #> 4701     bl1t  neutral right right 0.46 #> 4703     bl1t accuracy right right 0.42 #> 4705     bl1t  neutral  left  left 0.82 #> 4707     bl1t accuracy right right 0.40 #> 4709     bl1t    speed right  left 0.32 #> 4711     bl1t  neutral  left  left 0.46 #> 4713     bl1t    speed  left  left 0.34 #> 4715     bl1t  neutral right right 0.46 #> 4717     bl1t    speed right  left 0.30 #> 4719     bl1t    speed right  left 0.32 #> 4721     bl1t accuracy  left  left 0.74 #> 4723     bl1t  neutral right right 0.66 #> 4725     bl1t accuracy  left  left 0.50 #> 4727     bl1t    speed  left right 0.36 #> 4729     bl1t  neutral  left  left 0.38 #> 4731     bl1t    speed right  left 0.34 #> 4733     bl1t  neutral right right 0.52 #> 4735     bl1t    speed right right 0.34 #> 4737     bl1t accuracy  left  left 0.44 #> 4739     bl1t accuracy right  left 0.50 #> 4741     bl1t  neutral right right 0.38 #> 4743     bl1t  neutral right right 0.62 #> 4745     bl1t accuracy  left  left 0.50 #> 4747     bl1t accuracy right  left 0.54 #> 4749     bl1t  neutral right  left 0.36 #> 4751     bl1t accuracy  left  left 0.60 #> 4753     bl1t accuracy  left  left 0.44 #> 4755     bl1t accuracy  left  left 0.48 #> 4757     bl1t  neutral  left  left 0.36 #> 4759     bl1t    speed  left  left 0.32 #> 4761     bl1t    speed right  left 0.32 #> 4763     bl1t  neutral  left  left 0.46 #> 4765     bl1t    speed right right 0.58 #> 4767     bl1t  neutral  left  left 0.38 #> 4769     bl1t  neutral right right 0.38 #> 4771     bl1t    speed  left  left 0.34 #> 4773     bl1t accuracy right right 0.48 #> 4775     bl1t  neutral right  left 0.42 #> 4777     bl1t  neutral  left  left 0.36 #> 4779     bl1t accuracy right right 1.00 #> 4781     bl1t    speed right  left 0.38 #> 4783     bl1t accuracy  left  left 0.44 #> 4785     bl1t  neutral  left  left 0.46 #> 4787     bl1t accuracy right right 0.54 #> 4789     bl1t accuracy right  left 0.50 #> 4791     bl1t    speed  left  left 0.40 #> 4793     bl1t    speed  left  left 0.34 #> 4795     bl1t    speed  left  left 0.34 #> 4797     bl1t accuracy  left  left 1.48 #> 4799     bl1t    speed  left right 0.34 #> 4801     bl1t    speed  left  left 0.32 #> 4803     bl1t    speed  left right 0.34 #> 4805     bl1t  neutral right right 0.52 #> 4807     bl1t  neutral right right 0.92 #> 4809     bl1t accuracy right right 0.50 #> 4811     bl1t    speed  left right 0.34 #> 4813     bl1t  neutral right  left 0.40 #> 4815     bl1t    speed  left right 0.36 #> 4817     bl1t    speed  left  left 0.40 #> 4819     bl1t    speed right right 0.68 #> 4821     bl1t  neutral right  left 0.42 #> 4823     bl1t accuracy  left  left 0.60 #> 4825     bl1t    speed right right 0.34 #> 4827     bl1t  neutral  left  left 0.36 #> 4829     bl1t    speed  left  left 0.32 #> 4831     bl1t accuracy right right 0.60 #> 4833     bl1t  neutral right right 0.62 #> 4835     bl1t accuracy right  left 0.58 #> 4837     bl1t  neutral right right 1.08 #> 4839     bl1t accuracy right right 0.44 #> 4841     bl1t    speed  left  left 0.40 #> 4843     bl1t    speed right right 0.36 #> 4845     bl1t  neutral right  left 0.42 #> 4847     bl1t  neutral  left  left 0.46 #> 4849     bl1t accuracy  left  left 0.48 #> 4851     bl1t    speed right right 0.82 #> 4853     bl1t accuracy  left  left 0.44 #> 4855     bl1t accuracy  left  left 0.44 #> 4857     bl1t    speed right right 0.72 #> 4859     bl1t  neutral  left  left 0.46 #> 4861     bl1t    speed  left right 0.38 #> 4863     bl1t  neutral right right 0.88 #> 4865     bl1t accuracy right right 0.54 #> 4867     bl1t accuracy  left right 0.54 #> 4869     bl1t accuracy right right 0.86 #> 4871     bl1t  neutral right  left 0.42 #> 4873     bl1t accuracy  left  left 0.58 #> 4875     bl1t accuracy  left  left 0.44 #> 4877     bl1t    speed  left  left 0.28 #> 4879     bl1t    speed right  left 0.38 #> 4881     bl1t accuracy right right 0.48 #> 4883     bl1t    speed  left  left 0.32 #> 4885     bl1t accuracy right right 0.48 #> 4887     bl1t    speed right right 0.68 #> 4889     bl1t  neutral right right 0.78 #> 4891     bl1t  neutral  left  left 0.42 #> 4893     bl1t  neutral  left  left 0.36 #> 4895     bl1t  neutral  left  left 0.82 #> 4897     bl1t accuracy  left  left 0.60 #> 4899     bl1t  neutral  left  left 0.36 #> 4901     bl1t  neutral  left  left 0.90 #> 4903     bl1t accuracy  left  left 0.50 #> 4905     bl1t    speed right right 0.36 #> 4907     bl1t accuracy  left  left 0.56 #> 4909     bl1t  neutral  left  left 0.90 #> 4911     bl1t accuracy right right 0.54 #> 4913     bl1t  neutral right  left 0.36 #> 4915     bl1t accuracy  left  left 0.50 #> 4917     bl1t accuracy  left  left 0.84 #> 4919     bl1t accuracy right right 0.44 #> 4921     bl1t  neutral  left  left 0.54 #> 4923     bl1t accuracy  left right 0.62 #> 4925     bl1t    speed  left  left 0.30 #> 4927     bl1t    speed right right 0.34 #> 4929     bl1t  neutral  left  left 0.46 #> 4931     bl1t accuracy  left  left 0.48 #> 4933     bl1t accuracy  left right 0.58 #> 4935     bl1t accuracy  left  left 0.48 #> 4937     bl1t accuracy right  left 0.64 #> 4939     bl1t    speed right right 0.36 #> 4941     bl1t  neutral right right 0.38 #> 4943     bl1t accuracy right  left 0.62 #> 4945     bl1t    speed  left  left 0.32 #> 4947     bl1t    speed right  left 0.30 #> 4949     bl1t    speed  left  left 0.28 #> 4951     bl1t accuracy  left right 0.44 #> 4953     bl1t accuracy right  left 0.80 #> 4955     bl1t  neutral right right 1.44 #> 4957     bl1t  neutral right right 0.46 #> 4959     bl1t    speed  left  left 0.30 #> 4961     bl1t    speed  left  left 0.30 #> 4963     bl1t    speed right  left 0.30 #> 4965     bl1t    speed  left  left 0.26 #> 4967     bl1t    speed right right 0.34 #> 4969     bl1t  neutral  left  left 0.36 #> 4971     bl1t accuracy  left  left 0.60 #> 4973     bl1t accuracy  left  left 0.62 #> 4975     bl1t accuracy  left  left 0.44 #> 4977     bl1t  neutral right  left 0.36 #> 4979     bl1t accuracy right right 0.86 #> 4981     bl1t    speed  left  left 0.52 #> 4983     bl1t    speed right right 0.82 #> 4985     bl1t    speed right right 0.34 #> 4987     bl1t  neutral  left  left 0.54 #> 4989     bl1t    speed  left right 0.36 #> 4991     bl1t accuracy  left  left 0.44 #> 4993     bl1t accuracy right right 1.10 #> 4995     bl1t    speed  left right 0.34 #> 4997     bl1t accuracy  left  left 0.44 #> 4999     bl1t    speed right  left 0.34 #> 5001     bl1t  neutral right  left 0.36 #> 5003     bl1t    speed right right 0.82"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter/manipulate parameters from emc object — get_pars","title":"Filter/manipulate parameters from emc object — get_pars","text":"Underlying function used plotting object handling functions EMC2. Can example used filter/thin parameter type (.e, group-level means mu) convert mcmc.list.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter/manipulate parameters from emc object — get_pars","text":"","code":"get_pars(   emc,   selection = \"mu\",   stage = \"sample\",   thin = 1,   filter = 0,   map = FALSE,   add_recalculated = FALSE,   length.out = NULL,   by_subject = FALSE,   return_mcmc = TRUE,   merge_chains = FALSE,   subject = NULL,   flatten = FALSE,   remove_dup = FALSE,   remove_constants = TRUE,   use_par = NULL,   type = NULL,   true_pars = NULL,   chain = NULL,   covariates = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter/manipulate parameters from emc object — get_pars","text":"emc emc object. selection Character string. Indicates parameter type select (e.g., alpha, mu, sigma2, correlation). stage character string. Indicates sampling stage(s) take samples (.e. preburn, burn, adapt, sample) thin integer. much thin chains filter Integer numeric vector. integer supplied, iterations integer removed. vector supplied, iterations within range kept. map Boolean. TRUE parameters mapped back cells experimental design using design matrices. Otherwise sampled parameters returned. works selection = mu selection = alpha. add_recalculated Boolean. TRUE also add recalculated parameters, b LBA (b = B + ; see ?LBA), z DDM z = Z*(see ?DDM) works map = TRUE length.Integer. Alternatively thinning, can also select desired length MCMC chains, thinned appropriately. by_subject Boolean. TRUE selections include subject parameters (e.g. alpha), plot/stats organized subject, otherwise parameter. return_mcmc Boolean. TRUE returns mcmc.list object, otherwise matrix/array parameter type. merge_chains Boolean. TRUE returns parameter type merged across chains. subject Integer (vector) character (vector). integer select 'x'th subject(s), character match subject names data selected. flatten Boolean. FALSE 3-dimensional samples (e.g., correlations: n-pars x n-pars x iterations). organizes dimension containing parameter names, otherwise collapses names across first second dimension. apply selection = \"alpha\" remove_dup Boolean. TRUE removes duplicate values samples. Automatically set TRUE flatten = TRUE remove_constants Boolean. TRUE removes constant values samples (e.g. 0s covariance matrix). use_par Character (vector). specified, parameters returned. match parameter names (.e. collapsed flatten = TRUE use_par also collapsed names). type Character indicating group-level model selected. necessary sampler specified. true_pars Set true_parameters can specified apply flatten use_par set true parameters chain Integer. chain(s) return covariates needed plot_prior covariates design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter/manipulate parameters from emc object — get_pars","text":"mcmc.list object selected parameter types specified manipulations","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter/manipulate parameters from emc object — get_pars","text":"","code":"# E.g. get the group-level mean parameters mapped back to the design get_pars(samples_LNR, stage = \"sample\", map = TRUE, selection = \"mu\") #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\"  # Or return the flattened correlation, with 10 iterations per chain get_pars(samples_LNR, stage = \"sample\", selection = \"correlation\", flatten = TRUE, length.out = 10) #> $correlation #> [[1]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 10  #> Thinning interval = 1  #>          m_lMd.m        s.m       t0.m     s.m_lMd   t0.m_lMd      t0.s #>  [1,]  0.4161710 -0.6259101 -0.7718499 -0.35553290 -0.6256956 0.6667611 #>  [2,]  0.2501842 -0.9145107 -0.7955403 -0.44346196 -0.6067699 0.8940067 #>  [3,]  0.9380206 -0.7432630 -0.6485934 -0.80325567 -0.7607187 0.8958959 #>  [4,]  0.9012393 -0.8598360 -0.9070840 -0.81564785 -0.7857671 0.8023191 #>  [5,] -0.3318392 -0.6172538 -0.3607328 -0.01709717 -0.4680233 0.7224332 #>  [6,]  0.3632546 -0.5779674 -0.6217344 -0.33415065 -0.6140923 0.5190850 #>  [7,]  0.9089677 -0.4972707 -0.3765058 -0.67796702 -0.5270201 0.8069139 #>  [8,]  0.7921812 -0.6232306 -0.7189267 -0.26017151 -0.4338810 0.5790486 #>  [9,] -0.5027539  0.3108699  0.2131788 -0.57969274 -0.2809811 0.6623240 #> [10,]  0.9050753 -0.9158997 -0.9183176 -0.96503892 -0.9310012 0.9170239 #>  #> [[2]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 10  #> Thinning interval = 1  #>           m_lMd.m        s.m       t0.m     s.m_lMd   t0.m_lMd       t0.s #>  [1,]  0.72380800  0.3632221  0.3824542  0.01009507  0.1217113 0.10199593 #>  [2,]  0.63967736 -0.0872879 -0.3767488  0.26465814 -0.5279094 0.08677739 #>  [3,]  0.66764646 -0.1298830  0.2244160 -0.72193329 -0.2378108 0.29716339 #>  [4,]  0.50860601  0.3215838  0.1365122 -0.28725407 -0.2814896 0.72706995 #>  [5,]  0.97202375 -0.8540369 -0.9202158 -0.90616284 -0.9437163 0.86288112 #>  [6,]  0.71747092 -0.7931026 -0.8820200 -0.61464123 -0.8418412 0.75485969 #>  [7,]  0.32358089 -0.8265526 -0.8194899 -0.11420503 -0.1080113 0.98079341 #>  [8,]  0.09362899 -0.4534869 -0.1398391  0.05341269 -0.5076566 0.28797526 #>  [9,] -0.67982519  0.3466001 -0.1773134 -0.45229919  0.2681004 0.49333839 #> [10,]  0.50179387 -0.5953184 -0.4790218 -0.90900744 -0.9234997 0.83370013 #>  #> [[3]] #> Markov Chain Monte Carlo (MCMC) output: #> Start = 1  #> End = 10  #> Thinning interval = 1  #>          m_lMd.m         s.m        t0.m     s.m_lMd    t0.m_lMd      t0.s #>  [1,]  0.8671442 -0.41315331 -0.67095310 -0.52884700 -0.72228925 0.5592671 #>  [2,]  0.7313510 -0.60859329 -0.51751044 -0.59550307 -0.85142037 0.5012968 #>  [3,]  0.7947831 -0.73853832 -0.17845371 -0.78742059 -0.27699367 0.5972722 #>  [4,]  0.6870603 -0.48150737 -0.54228968 -0.59407139 -0.82447241 0.8811392 #>  [5,]  0.6160009 -0.27463906 -0.41870063 -0.50370139 -0.73793340 0.6593811 #>  [6,] -0.1148367 -0.02781127  0.04183441 -0.88253651 -0.66663829 0.6022866 #>  [7,]  0.7717988 -0.81631346 -0.80039250 -0.45855096 -0.69259725 0.5922351 #>  [8,]  0.8803450 -0.05208476 -0.88156786 -0.19539243 -0.96658182 0.1106099 #>  [9,]  0.1273639  0.40332163  0.17323633 -0.55190424 -0.78948670 0.7809628 #> [10,]  0.1032909 -0.92818684 -0.92789494  0.03446882 -0.01983142 0.9086741 #>  #> attr(,\"class\") #> [1] \"mcmc.list\" #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_SEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification or prior sampling for SEM estimation. — get_prior_SEM","title":"Prior specification or prior sampling for SEM estimation. — get_prior_SEM","text":"Prior specification prior sampling SEM estimation.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_SEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification or prior sampling for SEM estimation. — get_prior_SEM","text":"","code":"get_prior_SEM(   prior = NULL,   n_pars = NULL,   sample = TRUE,   N = 1e+05,   selection = \"mu\",   design = NULL,   Lambda_mat = NULL,   B_mat = NULL,   K_mat = NULL,   G_mat = NULL,   covariates = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_SEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification or prior sampling for SEM estimation. — get_prior_SEM","text":"prior named list containing prior mean group-level mean (theta_mu_mean), variance group-level mean (theta_mu_var), variance loadings G (lambda_var), variance latent regressions (B_var), shape rate prior factor variances (a_p b_p), shape rate prior residual variances (a_e b_e) n_pars Argument used sampler, best left NULL. user case inferred design sample Whether sample prior. Default TRUE. returns prior list N many samples draw prior, default 1e5 selection parameter type select e.g. alpha design design obtained design, required map = TRUE Lambda_mat loadings constraint matrix B_mat latent regressions constraint matrix K_mat regression parameters included covariates G_mat regression latent factors included covariates covariates included covariates","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_SEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification or prior sampling for SEM estimation. — get_prior_SEM","text":"list single entry type samples prior (sample = TRUE) else prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_blocked.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","title":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","text":"Works analogous get_prior_standard. Blocks covariance matrix estimate considered sampling. get default prior created design: get_prior_diag(design = design, sample = FALSE)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_blocked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","text":"","code":"get_prior_blocked(   prior = NULL,   n_pars = NULL,   sample = TRUE,   N = 1e+05,   selection = \"mu\",   design = NULL,   par_groups = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_blocked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","text":"prior named list can contain prior mean (theta_mu_mean) variance (theta_mu_var) group-level mean, scale (), degrees freedom (v) group-level variance-covariance matrix. NULL entries, default prior gets created. n_pars Often inferred design, design = NULL, n_pars used determine size prior. sample Boolean, defaults TRUE, sample prior simply return prior specifications? N many samples draw prior, default 1e5 selection Character. sample = TRUE, prior sample . Options: \"mu\", \"sigma2\", \"covariance\" \"Sigma\", \"alpha\", \"correlation\". design design obtained design(), required map = TRUE par_groups Integer vector indicating parts covariance matrix blocked together","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_blocked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","text":"list single entry type samples prior (sample = TRUE) else prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_blocked.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","text":"details see Huang, ., & Wand, M. P. (2013). Simple marginally noninformative prior distributions covariance matrices. Bayesian Analysis, 8, 439-452. https://doi.org/10.1214/13-BA815. Note sample = FALSE, prior$theta_mu_invar (inverse prior covariance matrix group-level mean) returned, used computational efficiency","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_blocked.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior specification or prior sampling for blocked estimation — get_prior_blocked","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Now get the default prior prior <- get_prior_blocked(design = design_DDMaE, sample = FALSE) # We can change values in the default prior or use `prior` # Then we can get samples from this prior e.g. samples <- get_prior_blocked(prior = prior, design = design_DDMaE,   sample = TRUE, selection = \"mu\")"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_diag.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","title":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","text":"get default prior created design: get_prior_diag(design = design, sample = FALSE)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_diag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","text":"","code":"get_prior_diag(   prior = NULL,   n_pars = NULL,   sample = TRUE,   N = 1e+05,   selection = \"mu\",   design = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_diag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","text":"prior named list can contain prior mean (theta_mu_mean) variance (theta_mu_var) group-level mean, scale (), degrees freedom (v) group-level variance-covariance matrix. NULL entries, default prior gets created. n_pars Often inferred design, design = NULL, n_pars used determine size prior. sample Boolean, defaults TRUE, sample prior simply return prior specifications? N many samples draw prior, default 1e5 selection Character. sample = TRUE, prior sample . Options: \"mu\", \"sigma2\", \"covariance\" \"Sigma\", \"alpha\", \"correlation\". design design obtained design(), required map = TRUE","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_diag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","text":"list single entry type samples prior (sample = TRUE) else prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_diag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","text":"details see Huang, ., & Wand, M. P. (2013). Simple marginally noninformative prior distributions covariance matrices. Bayesian Analysis, 8, 439-452. https://doi.org/10.1214/13-BA815. Note sample = FALSE, prior$theta_mu_invar (inverse prior covariance matrix group-level mean) returned, used computational efficiency.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_diag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior specification or prior sampling for diagonal estimation — get_prior_diag","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Now get the default prior prior <- get_prior_diag(design = design_DDMaE, sample = FALSE) # We can change values in the default prior or use `prior` # Then we can get samples from this prior e.g. samples <- get_prior_diag(prior = prior, design = design_DDMaE,   sample = TRUE, selection = \"mu\")"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification and prior sampling for factor estimation — get_prior_factor","title":"Prior specification and prior sampling for factor estimation — get_prior_factor","text":"get default priors given design: get_prior_factor(design = design, sample = FALSE)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification and prior sampling for factor estimation — get_prior_factor","text":"","code":"get_prior_factor(   prior = NULL,   n_pars = NULL,   sample = TRUE,   N = 1e+05,   selection = \"mu\",   design = NULL,   Lambda_mat = NULL,   n_factors = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification and prior sampling for factor estimation — get_prior_factor","text":"prior named list can contain prior mean (theta_mu_mean) variance (theta_mu_var) group-level mean; variance loadings (theta_lambda_var); shape rate factor variances (ap bp) shape rate residual variances (bs). NULL entries, default prior used. n_pars Often inferred design, design = NULL, n_pars used determine size prior. sample Whether sample prior simply return prior. Default TRUE, N many samples draw prior, default 1e5 selection Character. sample = TRUE, priors sample . design design obtained design(), required map = TRUE Lambda_mat loadings constraint matrix. n_factors Integer. number factors.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification and prior sampling for factor estimation — get_prior_factor","text":"list single entry type samples prior (sample = TRUE) else prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_factor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior specification and prior sampling for factor estimation — get_prior_factor","text":"details see Ghosh, J., & Dunson, D. B. (2009). Default prior distributions efficient posterior computation Bayesian factor analysis. Journal Computational Graphical Statistics, 18, 306-320. Stevenson, N., Innes, R. J., Gronau, Q. F., Miletic, S., Heathcote, ., PhD, Forstmann, B., & Brown, S. (2024). Using group level factor models resolve high dimensionality model-based sampling. https://doi.org/10.31234/osf.io/pn3wv. Note sample = FALSE, prior$theta_mu_invar (inverse prior covariance matrix group-level mean) returned, used computational efficiency","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_factor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior specification and prior sampling for factor estimation — get_prior_factor","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Now get the default prior prior <- get_prior_factor(design = design_DDMaE, sample = FALSE, n_factors = 3) # We can change values in the default prior or use `prior` # Then we can get samples from this prior e.g. samples <- get_prior_factor(prior = prior, design = design_DDMaE,   sample = TRUE, selection = \"mu\", n_factors = 3)"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification or prior sampling for single subject estimation — get_prior_single","title":"Prior specification or prior sampling for single subject estimation — get_prior_single","text":"type estimation, one multiple subjects estimated independently, without hierarchical constraint.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_single.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification or prior sampling for single subject estimation — get_prior_single","text":"","code":"get_prior_single(   prior = NULL,   n_pars = NULL,   sample = TRUE,   N = 1e+05,   selection = \"alpha\",   design = NULL,   map = FALSE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_single.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification or prior sampling for single subject estimation — get_prior_single","text":"prior named list containing prior mean (theta_mu_mean) variance (theta_mu_var). NULL, default prior used. n_pars Often inferred design, design = NULL, n_pars used determine size prior. sample Boolean, defaults TRUE, sample prior simply return prior specifications? N many samples draw prior, default 1e5 selection Character. sample = TRUE, prior sample . Options: \"alpha\". design design obtained design(), required map = TRUE map Boolean, defaults TRUE. sample = TRUE, implied prior sampled. includes back-transformations naturally bounded parameters non-decision time inverse mapping design matrix back cells design. FALSE, transformed, unmapped, parameters used. Note map affect prior used sampling process.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_single.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification or prior sampling for single subject estimation — get_prior_single","text":"list single entry named \"alpha\" samples prior (sample = TRUE) else prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_single.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior specification or prior sampling for single subject estimation — get_prior_single","text":"specify (multivariate normal) prior, prior$theta_mu_mean prior$theta_mu_var entry needed parameter.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_single.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior specification or prior sampling for single subject estimation — get_prior_single","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Now get the default prior prior <- get_prior_single(design = design_DDMaE, sample = FALSE) # We can change values in the default prior or use `prior` # Then we can get samples from this prior e.g. samples <- get_prior_single(prior = prior, design = design_DDMaE,   sample = TRUE, selection = \"alpha\")"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_standard.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification or prior sampling for standard estimation. — get_prior_standard","title":"Prior specification or prior sampling for standard estimation. — get_prior_standard","text":"get default prior created design: get_prior_standard(design = design, sample = FALSE)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_standard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification or prior sampling for standard estimation. — get_prior_standard","text":"","code":"get_prior_standard(   prior = NULL,   n_pars = NULL,   sample = TRUE,   N = 1e+05,   selection = \"mu\",   design = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_standard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification or prior sampling for standard estimation. — get_prior_standard","text":"prior named list can contain prior mean (theta_mu_mean) variance (theta_mu_var) group-level mean, scale (), degrees freedom (v) group-level variance-covariance matrix. NULL entries, default prior gets created. n_pars Often inferred design, design = NULL, n_pars used determine size prior. sample Boolean, defaults TRUE, sample prior simply return prior specifications? N many samples draw prior, default 1e5 selection Character. sample = TRUE, prior sample . Options: \"mu\", \"sigma2\", \"covariance\" \"Sigma\", \"alpha\", \"correlation\". design design obtained design(), required map = TRUE","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_standard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification or prior sampling for standard estimation. — get_prior_standard","text":"list single entry type samples prior (sample = TRUE) else prior object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_standard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior specification or prior sampling for standard estimation. — get_prior_standard","text":"details see Huang, ., & Wand, M. P. (2013). Simple marginally noninformative prior distributions covariance matrices. Bayesian Analysis, 8, 439-452. https://doi.org/10.1214/13-BA815. Note sample = FALSE, prior$theta_mu_invar (inverse prior covariance matrix group-level mean) also returned, used computational efficiency","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/get_prior_standard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior specification or prior sampling for standard estimation. — get_prior_standard","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Now get the default prior prior <- get_prior_standard(design = design_DDMaE, sample = FALSE) # We can change values in the default prior or use `prior` # Then we can get samples from this prior e.g. samples <- get_prior_standard(prior = prior, design = design_DDMaE,   sample = TRUE, selection = \"mu\")"},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":null,"dir":"Reference","previous_headings":"","what":"Within-model hypothesis testing — hypothesis.emc","title":"Within-model hypothesis testing — hypothesis.emc","text":"Approximates Bayes factor parameter effects using savage-dickey ratio.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Within-model hypothesis testing — hypothesis.emc","text":"","code":"# S3 method for class 'emc' hypothesis(   emc,   parameter = NULL,   H0 = 0,   fun = NULL,   selection = \"mu\",   do_plot = TRUE,   use_prior_lim = TRUE,   N = 10000,   prior_plot_args = list(),   ... )  hypothesis(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Within-model hypothesis testing — hypothesis.emc","text":"emc emc object parameter string. parameter want compare H0. used FUN specified. H0 integer. H0 value want compare fun function. Specifies operation performed sampled mapped parameters. selection Character string. Indicates parameter type use (e.g., alpha, mu, sigma2, correlation). do_plot Boolean. FALSE omit prior-posterior plot return savage-dickey ratio. use_prior_lim Boolean. TRUE use xlimits based prior density, otherwise based posterior density. N Integer. many prior samples draw prior_plot_args list. Optional additional arguments passed plot.default plotting prior density (see par()) ... Optional arguments can passed get_pars, density, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Within-model hypothesis testing — hypothesis.emc","text":"Bayes factor hypothesis H0.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Within-model hypothesis testing — hypothesis.emc","text":"Note different computation marginal deviance compare since considers group level effect whole model (.e. subject-level parameters). details see: Wagenmakers, Lodewyckx, Kuriyal, & Grasman (2010).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/hypothesis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Within-model hypothesis testing — hypothesis.emc","text":"","code":"# Here the emc object has an effect parameter (e.g. m), # that maps onto a certain hypothesis. # The hypothesis here is that m is different from zero. # We can test whether there's a group-level effect on m: hypothesis(samples_LNR, parameter = \"m\")  #> [1] 9.735819e+15 # Alternatively we can also test whether two parameters differ from each other mdiff <- function(p)diff(p[c(\"m\",\"m_lMd\")]) hypothesis(samples_LNR,fun=mdiff)  #> [1] 19.60087"},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize chains — init_chains","title":"Initialize chains — init_chains","text":"Adds set start points chain. start points sampled user-defined multivariate normal across subjects.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize chains — init_chains","text":"","code":"init_chains(   emc,   start_mu = NULL,   start_var = NULL,   particles = 1000,   cores_per_chain = 1,   cores_for_chains = length(emc) )"},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize chains — init_chains","text":"emc emc object made make_emc() start_mu vector. Mean multivariate normal used proposal distribution start_var matrix. Variance covariance matrix multivariate normal used proposal distribution. Smaller values lead less deviation around mean. particles integer. Number starting values cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. cores_for_chains integer. many cores use parallelize across chains. Default number chains.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize chains — init_chains","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/init_chains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize chains — init_chains","text":"","code":"if (FALSE) { # \\dontrun{ # Make a design and an emc object design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1)))  DDMaE <- make_emc(forstmann, design_DDMaE) # set up our mean starting points (same used across subjects). mu <- c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),        t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # Small variances to simulate start points from a tight range var <- diag(0.05, length(mu)) # Initialize chains, 4 cores per chain, and parallelizing across our 3 chains as well # so 4*3 cores used. DDMaE <- init_chains(DDMaE, start_mu = p_vector, start_var = var, cores_per_chain = 4) # Afterwards we can just use fit DDMaE <- fit(DDMaE, cores_per_chain = 4) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate data — make_data","title":"Simulate data — make_data","text":"Simulates data based model design parameter vector (p_vector) one two methods: Creating fully crossed balanced design specified design, number trials per cell specified n_trials argument Using design data frame supplied, allows creation unbalanced irregular designs, replacing previous data simulated data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate data — make_data","text":"","code":"make_data(   parameters,   design = NULL,   n_trials = NULL,   data = NULL,   expand = 1,   mapped_p = FALSE,   hyper = FALSE,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate data — make_data","text":"parameters parameter vector used simulate data. Can also matrix one row per subject (corresponding row names) emc object sampled parameters (case posterior medians alpha used simulate data) design Design list created design() n_trials Integer. data supplied, number trials create per design cell data Data frame. supplied, factors taken data. Determines number trials per level design factors can thus allow unbalanced designs expand Integer. Replicates data (supplied) expand times increase number trials per cell. mapped_p TRUE instead returns data frame one row per design cell columns parameter specifying mapped design cells. hyper TRUE supplied parameters must set samples, group-level used generate subject level parameters. See also make_random_effects generate subject-level parameters hyper distribution. ... Additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate data — make_data","text":"data frame simulated data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate data — make_data","text":"create data multiple subjects see ?make_random_effects().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate data — make_data","text":"","code":"# First create a design design_DDMaE <- design(factors = list(S = c(\"left\", \"right\"),                                            E = c(\"SPD\", \"ACC\"),                                            subjects = 1:30),                             Rlevels = c(\"left\", \"right\"), model = DDM,                             formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                             constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"  \"v_Sright\" \"a\"        \"a_EACC\"   \"t0\"       \"Z\"        \"sv\"       #> [8] \"SZ\"       #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>    E a a_EACC #>  SPD 1      0 #>  ACC 1      1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a p_vector: parameters <- c(v_Sleft=-2,v_Sright=2,a=log(1),a_EACC=log(2), t0=log(.2),               Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5))  # Now we can simulate data data <- make_data(parameters, design_DDMaE, n_trials = 30) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\"  # We can also simulate data based on a specific dataset design_DDMaE <- design(data = forstmann,model=DDM,                             formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                             constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  parameters <- c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),               t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5))  data <- make_data(parameters, design_DDMaE, data = forstmann) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an emc object — make_emc","title":"Make an emc object — make_emc","text":"Creates emc object combining data, prior, model specification emc object needed fit().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an emc object — make_emc","text":"","code":"make_emc(   data,   design,   model = NULL,   type = \"standard\",   n_chains = 3,   compress = TRUE,   rt_resolution = 0.02,   prior_list = NULL,   grouped_pars = NULL,   par_groups = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an emc object — make_emc","text":"data data frame, list data frames. Needs variable subjects participant identifier. design list pre-specified design, output design(). model model list. none supplied, model specified design() used. type string indicating whether run standard group-level, blocked, diagonal, factor, single (.e., non-hierarchical) model. n_chains integer. Specifies number mcmc chains run (1 compute rhat). compress Boolean, TRUE (.e., default), data compressed speed likelihood calculations. rt_resolution double. Used compression, response times binned based resolution. prior_list named list containing prior. Default prior created NULL. default priors, see ?get_prior_{type}. grouped_pars integer vector. Parameters location vector parameters treated constant across subjects par_groups vector. specified type blocked, e.g., c(1,1,1,2,2) means covariances first three last two parameters estimated two separate blocks. ... Additional, optional arguments.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an emc object — make_emc","text":"uninitialized emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make an emc object — make_emc","text":"","code":"dat <- forstmann  # function that takes the lR factor (named diff in the following function) and # returns a logical defining the correct response for each stimulus. In this # case the match is simply such that the S factor equals the latent response factor. matchfun <- function(d)d$S==d$lR  # design an \"average and difference\" contrast matrix ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,\"diff\"))  # specify design design_LBABE <- design(data = dat,model=LBA,matchfun=matchfun, formula=list(v~lM,sv~lM,B~E+lR,A~1,t0~1), contrasts=list(v=list(lM=ADmat)),constants=c(sv=log(1))) #>  #>  Sampled Parameters:  #> [1] \"v\"           \"v_lMdiff\"    \"sv_lMTRUE\"   \"B\"           \"B_Eneutral\"  #> [6] \"B_Eaccuracy\" \"B_lRright\"   \"A\"           \"t0\"          #>  #>  Design Matrices:  #> $v #>     lM v v_lMdiff #>   TRUE 1      0.5 #>  FALSE 1     -0.5 #>  #> $sv #>     lM sv sv_lMTRUE #>   TRUE  1         1 #>  FALSE  1         0 #>  #> $B #>         E    lR B B_Eneutral B_Eaccuracy B_lRright #>     speed  left 1          0           0         0 #>     speed right 1          0           0         1 #>   neutral  left 1          1           0         0 #>   neutral right 1          1           0         1 #>  accuracy  left 1          0           1         0 #>  accuracy right 1          0           1         1 #>  #> $A #>  A #>  1 #>  #> $t0 #>  t0 #>   1 #>   # specify priors pmean <- c(v=1,v_lMdiff=1,sv_lMTRUE=log(.5), B=log(.5),B_Eneutral=log(1.5),            B_Eaccuracy=log(2),B_lRright=0, A=log(0.25),t0=log(.2)) psd <- c(v=1,v_lMdiff=0.5,sv_lMTRUE=.5,          B=0.3,B_Eneutral=0.3,B_Eaccuracy=0.3,B_lRright=0.3,A=0.4,t0=.5) prior_LBABE <- prior(design_LBABE, type = 'standard',pmean=pmean,psd=psd)  # create emc object LBABE <- make_emc(dat,design_LBABE,type=\"standard\",  prior=prior_LBABE) #> Processing data set 1 #> Likelihood speedup factor: 4 (3955 unique trials)"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_factor_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor diagram plot — make_factor_diagram","title":"Factor diagram plot — make_factor_diagram","text":"Makes factor diagram plot. Heavily based fa.diagram function psych package.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_factor_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor diagram plot — make_factor_diagram","text":"","code":"make_factor_diagram(   emc = NULL,   stage = \"sample\",   loadings = NULL,   standardize = TRUE,   simple = FALSE,   only_cred = FALSE,   cut = 0,   nice_names = NULL,   factor_names = NULL,   sort = TRUE,   adj = 1,   main = NULL,   cex = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_factor_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor diagram plot — make_factor_diagram","text":"emc emc object stage Character. stage take samples loadings array loadings. Can alternatively supplied emc supplied standardize Boolean. Whether standardize loadings simple Boolean. Whether factor diagram simplified visual clarity. only_cred Boolean. Whether plot credible loadings cut Numeric. Mean loadings beneath number excluded. nice_names Character vector. Alternative names give parameters factor_names Character vector. Names give different factors sort Boolean. Whether sort paramaters plotting visual clarity. adj Integer. Adjust adjust loading values positions diagram illegible. main Character vector. Title plot cex Integer. Font size","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"make_missing — make_missing","title":"make_missing — make_missing","text":"Truncate censor data. .na(rt) truncated censored.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make_missing — make_missing","text":"","code":"make_missing(   data,   LT = 0,   UT = Inf,   LC = 0,   UC = Inf,   LCresponse = TRUE,   UCresponse = TRUE,   LCdirection = TRUE,   UCdirection = TRUE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make_missing — make_missing","text":"data Data frame rt R columns LT lower truncation bound data removed (scalar subject named vector) UT upper truncation bound data removed (scalar subject named vector) LC lower censoring bound (scalar subject named vector) UC upper censoring bound (scalar subject named vector) LCresponse Boolean, default TRUE, false set LC response NA UCresponse Boolean, default TRUE, false set UC response NA LCdirection Boolean, default TRUE, set LC rt 0, else NA UCdirection Boolean, default TRUE, set LC rt Inf, else NA","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make_missing — make_missing","text":"Truncated censored data frame","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":null,"dir":"Reference","previous_headings":"","what":"Make random effects — make_random_effects","title":"Make random effects — make_random_effects","text":"Simulates subject-level parameters format required make_data().","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make random effects — make_random_effects","text":"","code":"make_random_effects(   design,   group_means,   n_subj = NULL,   variance_proportion = 0.2,   covariances = NULL )"},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make random effects — make_random_effects","text":"design design list. design specified design() group_means numeric vector. group level means parameter, order sampled_p_vector(design) n_subj integer. number subjects generate parameters . NULL inferred design variance_proportion double. Optional. covariances specified, variances created multiplying means number. covariances 0. covariances covariance matrix. Optional. Specify intended covariance matrix.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make random effects — make_random_effects","text":"matrix subject-level parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/make_random_effects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make random effects — make_random_effects","text":"","code":"# First create a design design_DDMaE <- design(data = forstmann,model=DDM,                             formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                             constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a group-level means vector: group_means =c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),                t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # Now we can create subject-level parameters subj_pars <- make_random_effects(design_DDMaE, group_means, n_subj = 5)  # We can also define a covariance matrix to simulate from subj_pars <- make_random_effects(design_DDMaE, group_means, n_subj = 5,              covariances = diag(.1, length(group_means)))  # The subject level parameters can be used to generate data make_data(subj_pars, design_DDMaE, n_trials = 10) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_par.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameter mapping back to the design factors — mapped_par","title":"Parameter mapping back to the design factors — mapped_par","text":"Maps parameter vector corresponds sampled parameters cognitive model back experimental design. parameter vector can created using sampled_p_vector(). returned matrix shows whether/parameters differ across experimental factors.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameter mapping back to the design factors — mapped_par","text":"","code":"mapped_par(   p_vector,   design,   model = NULL,   digits = 3,   remove_subjects = TRUE,   covariates = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameter mapping back to the design factors — mapped_par","text":"p_vector parameter vector. Must form sampled_p_vector(design) design design list. Created design model Optional model type (already specified design) digits Integer. round output parameter values many decimals remove_subjects Boolean. Whether include subjects factor design covariates Covariates specified design can included . ... optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameter mapping back to the design factors — mapped_par","text":"Matrix column factor design model parameter type (p_type).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/mapped_par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameter mapping back to the design factors — mapped_par","text":"","code":"# First define a design: design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a p_vector: p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),           t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # This will map the parameters of the p_vector back to the design mapped_par(p_vector,design_DDMaE) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge samples — merge_chains","title":"Merge samples — merge_chains","text":"Merges samples chains one unlisted object.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge samples — merge_chains","text":"","code":"merge_chains(emc)"},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge samples — merge_chains","text":"emc emc object, commonly output fit()","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge samples — merge_chains","text":"unlisted emc object chains merged","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/merge_chains.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge samples — merge_chains","text":"Note sampling stages included merged output, including iterations preburn, burn, adapt stages. merge_chains(emc)$samples$stage shows corresponding sampling stages.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot within-chain correlations — pairs_posterior","title":"Plot within-chain correlations — pairs_posterior","text":"Plots within-chain parameter correlations (upper triangle) corresponding scatterplots (lower triangle) visualize parameter sloppiness.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot within-chain correlations — pairs_posterior","text":"","code":"pairs_posterior(   emc,   selection = \"alpha\",   scale_subjects = TRUE,   do_plot = TRUE,   N = 500,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot within-chain correlations — pairs_posterior","text":"emc emc object selection Character string. Indicates parameter type plot (alpha, mu, variance, covariance, correlation). scale_subjects Boolean. standardize participant selection = \"alpha\", subtracting mean divding standard deviation. ensures plot every participant scale. do_plot Boolean. Whether plot pairs plot, FALSE, correlations returned. N Integer maximum number iterations used (defaults 500). number samples stage selection exceeds N, random subset taken size N ... Optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot within-chain correlations — pairs_posterior","text":"Invisibly returns matrix correlations parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot within-chain correlations — pairs_posterior","text":"selection = alpha parameter chains concatenated across participants, (standardizing scale_subjects = TRUE) correlated.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/pairs_posterior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot within-chain correlations — pairs_posterior","text":"","code":"# \\donttest{ # Plot the sloppiness for the individual-level subjects pairs_posterior(samples_LNR, selection = \"alpha\")   # We can also choose group-level parameters and subsets of the parameter space pairs_posterior(samples_LNR, use_par = c(\"m\", \"t0\"), selection = \"sigma2\")  # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a parameter type from an emc object as a data frame. — parameters.emc","title":"Returns a parameter type from an emc object as a data frame. — parameters.emc","text":"Returns parameter type emc object data frame.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a parameter type from an emc object as a data frame. — parameters.emc","text":"","code":"# S3 method for class 'emc' parameters(emc, selection = \"mu\", N = NULL, resample = FALSE, ...)  parameters(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a parameter type from an emc object as a data frame. — parameters.emc","text":"emc emc object selection String designating parameter type (e.g. mu, sigma2, correlation, alpha) N Integer. many samples take posterior. NULL return full posterior resample Boolean. TRUE sample N samples posterior replacement ... Optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a parameter type from an emc object as a data frame. — parameters.emc","text":"data frame one row sample (subjects column selection = \"alpha\")","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for emc objects — plot.emc","title":"Plot function for emc objects — plot.emc","text":"Makes trace plots model parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for emc objects — plot.emc","text":"","code":"# S3 method for class 'emc' plot(   x,   stage = \"sample\",   selection = c(\"mu\", \"sigma2\", \"alpha\"),   layout = NA,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for emc objects — plot.emc","text":"x object class emc stage character string indicating sampling stage summarized. Can preburn, burn, adapt, sample. selection character vector indicating parameter group(s). Defaults mu, sigma2, alpha. layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. ... Optional arguments can passed get_pars plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for emc objects — plot.emc","text":"trace/acf plot selected MCMC chains","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot.emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for emc objects — plot.emc","text":"","code":"plot(samples_LNR)       # Or trace autocorrelation for the second subject: plot(samples_LNR, subject = 2, selection = \"alpha\")   # Can also plot the trace of for example the group-level correlation: plot(samples_LNR, selection = \"correlation\", col = c(\"green\", \"purple\", \"orange\"), lwd = 2)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_defective_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot defective densities for each subject and cell — plot_defective_density","title":"Plot defective densities for each subject and cell — plot_defective_density","text":"Plots panels contain set densities response option data. densities defective; areas relative respective response proportion. Across responses, area sums 1.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_defective_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot defective densities for each subject and cell — plot_defective_density","text":"","code":"plot_defective_density(   data,   subject = NULL,   factors = NULL,   layout = NA,   correct_fun = NULL,   rt_pos = \"top\",   accuracy = \"topright\",   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_defective_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot defective densities for each subject and cell — plot_defective_density","text":"data data frame. experimental data EMC2 format least subject (.e., subject factor), R (.e., response factor) rt (.e., response time) variable. Additional factor variables design optional. subject integer character string selecting subject data. specified, subject plotted. Per default (.e., NULL), subjects plotted. factors character vector factor names design aggregate across Defaults (.e., NULL). layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. correct_fun specified, accuracy subject calculated, using supplied function accuracy vector subject returned invisibly. rt_pos legend function position character string mean response time (defaults top) accuracy legend function position character string accuracy (defaults topright) ... Optional arguments can passed get_pars, density, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_defective_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot defective densities for each subject and cell — plot_defective_density","text":"correct_fun specified, subject accuracy vector returned invisibly","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_defective_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot defective densities for each subject and cell — plot_defective_density","text":"","code":"# First for each subject and the factor combination in the design: plot_defective_density(forstmann)  # Now collapsing across subjects: plot_defective_density(forstmann, factors = c(\"S\", \"E\"))  # If the data is response coded, it generally makes sense to include the \"S\" factor # because EMC2 will plot the \"R\" factor automatically. This way, choice accuracy can # be examined # Each subject's accuracy can be returned using a custom function: print(plot_defective_density(forstmann, correct_fun = function(d) d$R == d$S))  #>      as1t      bd6t      bl1t      hsft      hsgt      kd6t      kd9t      kh6t  #> 0.7666667 0.8386337 0.7947805 0.9375000 0.9552415 0.6855124 0.9623086 0.8661888  #>      kmat      ku4t      na1t      rmbt      rt2t      rt3t      rt5t      scat  #> 0.8947991 0.7207101 0.9551887 0.8652226 0.9180523 0.7520759 0.6483357 0.7926973  #>      ta5t      vf1t      zk1t  #> 0.9195266 0.8436754 0.8114144"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior predictive checks — plot_fit","title":"Posterior predictive checks — plot_fit","text":"Plot (defective) cumulative density functions observed data data posterior predictive distribution: probability response, p(R) function response time experimental data posterior predictive simulations.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior predictive checks — plot_fit","text":"","code":"plot_fit(   data,   pp,   subject = NULL,   factors = NULL,   functions = NULL,   stat = NULL,   stat_name = \"\",   adjust = 1,   quants = c(0.025, 0.5, 0.975),   do_plot = TRUE,   xlim = NULL,   ylim = NULL,   layout = NULL,   mfcol = FALSE,   probs = c(1:99)/100,   data_lwd = 2,   fit_lwd = 1,   q_points = c(0.1, 0.3, 0.5, 0.7, 0.9),   qp_cex = 1,   pqp_cex = 0.5,   lpos = \"right\",   main = \"\" )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior predictive checks — plot_fit","text":"data data frame. experimental data EMC2 format least subject (.e., subject factor), R (.e., response factor) rt (.e., response time) variable. Additional factor variables design optional. pp data frame. Posterior predictives created predict() subject Integer string selecting subject data. specified subject plotted. NULL (.e., default), plot subjects. factors Character vector factors data display separately. NULL (default) use names columns data except \"trials\",\"R\", \"rt\". Omitted factors aggregated . NA treats entire data set single cell. Must NA NULL using stat argument. functions named list functions create new factors can used factors stat arguments. stat function takes data/posterior predictives returns single value. posterior predictives use single value per replicate, plotted density. stat_name string naming stat argument calculates, used labeling x-axis plot. adjust Numeric. Density function bandwidth adjust parameter. See “?density` quants vector. Quantiles posterior predictives return stat argument supplied. do_plot Boolean. Set FALSE return quantiles omit plots. xlim numeric vector. x-axis plot limit. ylim numeric vector. y-axis plot limit. layout vector specifying layout par(mfrow = layout). NA NULL uses current plot window layout. mfcol Boolean.  TRUE uses par(mfrow = layout), otherwise uses par(mfcol = layout) probs Vector probabilities calculate cumulative density function data_lwd Integer. Line width data fit_lwd Integer. Line width posterior predictives q_points Vector. Quantile points plot qp_cex Numeric. Cex data quantile points pqp_cex Numeric. Cex predicted quantile points lpos Character. Legend position, see ?legend(). main Character. Pasted plot title, especially useful specifying stat argument.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior predictive checks — plot_fit","text":"stat argument provided, vector observed values predicted quantiles returned","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Posterior predictive checks — plot_fit","text":"data plotted black. Large grey points show average quantiles across posterior predictives. small grey points represent predicted quantile individual replicate, providing representation uncertainty model predictions. stat argument supplied (calculates statistic based data), posterior predictives plotted density different replicates. vertical line plotted value statistic experimental data. one subject included, data fits aggregated across subjects default. Also see ?plot_defective_density() details.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior predictive checks — plot_fit","text":"","code":"# \\donttest{ # First generate posterior predictives based on an emc object run with run_emc pp <- predict(samples_LNR, n_cores = 1, n_post = 10) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\" # Then visualize the model fit plot_fit(forstmann, pp, factors = c(\"S\", \"E\"), layout = c(2,3)) #> Error in eval(expr, envir, enclos): object 'pp' not found  # Specific statistics on the posterior predictives can also be specified # This function calculates the difference in rt between two S levels. # It takes the data (or the posterior predictives) as an argument drt <- function(data) diff(tapply(data$rt,data[,c(\"S\")],mean)) plot_fit(forstmann, pp, stat=drt,stat_name=\"Rt difference\",          main=(\"Left vs Right\")) #> Error in eval(expr, envir, enclos): object 'pp' not found # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots choice data — plot_fit_choice","title":"Plots choice data — plot_fit_choice","text":"Plots choice data response times.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots choice data — plot_fit_choice","text":"","code":"plot_fit_choice(   data,   pp,   subject = NULL,   factors = NULL,   functions = NULL,   stat = NULL,   stat_name = \"\",   adjust = 1,   ci = c(0.025, 0.5, 0.975),   do_plot = TRUE,   xlim = NULL,   ylim = NULL,   main = \"\",   layout = NULL,   mfcol = TRUE,   signalFactor = \"S\",   zROC = FALSE,   qfun = qnorm,   lim = NULL,   rocfit_cex = 0.5 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots choice data — plot_fit_choice","text":"data data frame. experimental data EMC2 format least subject (.e., subject factor), R (.e., response factor) rt (.e., response time) variable. Additional factor variables design optional. pp Posterior predictives created predict() subject Integer string picking subject(s). factors Character vector factors data display separately. NULL (.e., default), use names columns data except trials,R, rt. Omitted factors aggregated . NA, treats entire data set single cell. stat used, default changed NA. functions named list functions create new factors can used factors stat arguments. stat function takes data returns single value. stat_name string naming stat argument calculates. adjust Control smoothing density plots ci Credible interval central tendency quantiles return stat argument supplied (defaults 2.5\\%, 50\\% 97.5\\% quantiles) do_plot Boolean (defaults TRUE) whether plot created xlim x-axis plot limit, 2-vector () matrix (one row paramter) ylim y-axis plot limit, 2-vector () matrix (one row paramter) main Text title, pasted cell name. layout 2-vector specifying par(mfrow) par(mfcol). default NULL uses current, NA keeps par currently active. mfcol Boolean layout settings, default TRUE uses mfcol, else mfrow. signalFactor Character name factor signal zROC Boolean, plot Z transformed ROC (defaults FALSE) qfun Type Z transform (defaults probit) lim x = y limit ROC plots rocfit_cex Size points ROC plot (default 0.5)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_fit_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots choice data — plot_fit_choice","text":"stat argument provided matrix observed values predicted quantiles returned","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC — plot_mcmc","title":"Plot MCMC — plot_mcmc","text":"Uses coda plot functions applied per chain","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC — plot_mcmc","text":"","code":"plot_mcmc(   emc,   selection = \"mu\",   fun = \"cumuplot\",   layout = NA,   chain = 1,   plot_type = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC — plot_mcmc","text":"emc emc object selection Character string. Indicates parameter type plot (e.g., alpha, mu, sigma2, correlation). fun plot function takes vector/mcmc object input, e.g. cumuplot, acf layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. chain Integer, chain include, 1 make separate plots per chain. plot_type type argument passed coda fun. ... Optional arguments can passed get_pars, chosen coda plot function, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC — plot_mcmc","text":"coda plot","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC.list — plot_mcmc_list","title":"Plot MCMC.list — plot_mcmc_list","text":"Uses coda plot functions applied across chain","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC.list — plot_mcmc_list","text":"","code":"plot_mcmc_list(emc, selection = \"mu\", fun = \"traceplot\", layout = NA, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC.list — plot_mcmc_list","text":"emc emc object selection Character string. Indicates parameter type plot (e.g., alpha, mu, sigma2, correlation). fun coda plot function choice layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. ... Optional arguments can passed get_pars, chosen coda plot function, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_mcmc_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC.list — plot_mcmc_list","text":"coda plot","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots density for parameters — plot_pars","title":"Plots density for parameters — plot_pars","text":"Plots posterior prior density selected parameters model. Full range samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots density for parameters — plot_pars","text":"","code":"plot_pars(   emc,   layout = NA,   selection = \"mu\",   show_chains = FALSE,   plot_prior = TRUE,   N = 10000,   use_prior_lim = !all_subjects,   lpos = \"topright\",   true_pars = NULL,   all_subjects = FALSE,   prior_plot_args = list(),   true_plot_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots density for parameters — plot_pars","text":"emc emc object layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. selection Character string. Indicates parameter type use (e.g., alpha, mu, sigma2, correlation). show_chains Boolean (defaults FALSE) plots separate density chain. plot_prior Boolean. TRUE overlay prior density plot (default red) N Integer. many prior samples draw use_prior_lim Boolean. TRUE use xlimits based prior density, otherwise based posterior density. lpos Character. plot contraction statistic. true_pars vector emc object. Can used visualize recovery. vector plot vertical line parameter appropriate place. emc object plot densities object well, assumed data-generating posteriors. all_subjects Boolean. plot densities (selected) subjects overlaid group-level distribution prior_plot_args list. Optional additional arguments passed plot.default plotting prior density (see par()) true_plot_args list. Optional additional arguments passed plot.default plotting true parameters (see par()) ... Optional arguments can passed get_pars, density, plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots density for parameters — plot_pars","text":"invisible return contraction statistics selected parameter type","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_pars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots density for parameters — plot_pars","text":"","code":"# Full range of possibilities described in get_pars plot_pars(samples_LNR)  # Or plot all subjects plot_pars(samples_LNR, all_subjects = TRUE, col = 'purple')  # Or plot recovery true_emc <- samples_LNR # This would normally be the data-generating samples plot_pars(samples_LNR, true_pars = true_emc, true_plot_args = list(col = 'blue'), adjust = 2)"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — plot_prior","title":"Title — plot_prior","text":"Title","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — plot_prior","text":"","code":"plot_prior(   prior,   design,   selection = \"mu\",   do_plot = TRUE,   covariates = NULL,   layout = NA,   N = 50000,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — plot_prior","text":"prior prior list created prior design design list created design selection Character string. Indicates parameter type use (e.g., alpha, mu, sigma2, correlation). do_plot Boolean. FALSE return prior samples omit plotting. covariates dataframe/functions specified design layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. N Integer. many prior samples draw ... Optional arguments can passed get_pars, histogram, plot.default (see par()), arguments required types models e.g. n_factors type = \"factor\"","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — plot_prior","text":"mcmc.list object prior samples selected type","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — plot_prior","text":"","code":"# \\donttest{ # First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then set up a prior using make_prior p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),           t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) psd <- c(v_Sleft=1,v_Sright=1,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,           t0=.4,Z=1,sv=.4,SZ=1) # Here we left the variance prior at default prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd) # Now we can plot all sorts of (implied) priors plot_prior(prior_DDMaE, design_DDMaE, selection = \"mu\", N = 1e3) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\" plot_prior(prior_DDMaE, design_DDMaE, selection = \"mu\", mapped = FALSE, N=1e3) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\" #> Warning: calling par(new=TRUE) with no plot # We can also plot the implied prior on the participant level effects. plot_prior(prior_DDMaE, design_DDMaE, selection = \"alpha\", col = \"green\", N = 1e3) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\" #> Warning: calling par(new=TRUE) with no plot # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot relations — plot_relations","title":"Plot relations — plot_relations","text":"adjusted version corrplot package function corrplot() tailored EMC2 plotting estimated correlations.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot relations — plot_relations","text":"","code":"plot_relations(   emc = NULL,   stage = \"sample\",   plot_cred = TRUE,   plot_means = TRUE,   only_cred = FALSE,   nice_names = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot relations — plot_relations","text":"emc EMC2 object, commonly output run_emc(). stage Character. stage take samples, defaults sampling stage sample. plot_cred Boolean. Whether plot 95 percent credible intervals plot_means Boolean. Whether plot means only_cred Boolean. Whether plot credible values nice_names Character string. Alternative names give parameters ... Optional additional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot relations — plot_relations","text":"return value, creates plot group-level relations","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/plot_relations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot relations — plot_relations","text":"","code":"# For a given set of hierarchical model samples we can make a # correlation matrix plot. plot_relations(samples_LNR, only_cred = TRUE, plot_cred = TRUE) # We can also only plot the correlations where the credible interval does not include zero plot_relations(samples_LNR, plot_means = TRUE, only_cred = TRUE)"},{"path":"https://ampl-psych.github.io/EMC2/reference/posterior_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Posterior quantiles — posterior_summary.emc","title":"Posterior quantiles — posterior_summary.emc","text":"Returns quantiles selected parameter type. Full range possible samples manipulations described get_pars.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/posterior_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Posterior quantiles — posterior_summary.emc","text":"","code":"# S3 method for class 'emc' posterior_summary(   emc,   selection = \"mu\",   probs = c(0.025, 0.5, 0.975),   digits = 3,   ... )  posterior_summary(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/posterior_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Posterior quantiles — posterior_summary.emc","text":"emc emc object selection Character vector. Indicates parameter types check (e.g., alpha, mu, sigma2, correlation). probs vector. Indicates quantiles return posterior. digits Integer. many digits round output ... Optional additional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/posterior_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Posterior quantiles — posterior_summary.emc","text":"list posterior quantiles parameter group selected parameter type.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/posterior_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Posterior quantiles — posterior_summary.emc","text":"","code":"posterior_summary(samples_LNR) #> $mu #>         2.5%    50%  97.5% #> m     -1.132 -0.975 -0.849 #> m_lMd -0.862 -0.548 -0.250 #> s     -0.882 -0.513 -0.008 #> t0    -2.020 -1.594 -1.232 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate posterior predictives — predict.emc","title":"Generate posterior predictives — predict.emc","text":"Simulate n_post data sets using posterior parameter estimates","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate posterior predictives — predict.emc","text":"","code":"# S3 method for class 'emc' predict(   object,   hyper = FALSE,   n_post = 100,   n_cores = 1,   stat = c(\"random\", \"mean\", \"median\")[1],   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate posterior predictives — predict.emc","text":"object emc object posterior predictives generated hyper Boolean. Defaults FALSE. TRUE, simulates group-level (hyper) parameters instead subject-level parameters. n_post Integer. Number generated datasets n_cores Integer. Number cores across parallellized stat Character. Can mean, median random (.e., default). take either random samples chain(s) use mean median parameter estimates. ... Optional additional arguments passed get_pars make_data","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate posterior predictives — predict.emc","text":"list simulated data sets length n_post","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/predict.emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate posterior predictives — predict.emc","text":"","code":"# \\donttest{ # based on an emc object ran by fit() we can generate posterior predictives predict(samples_LNR, n_cores = 1, n_post = 10) #> Error in make_missing(data[, names(data) != \"winner\"], LT, UT, LC, UC,     LCresponse, UCresponse, LCdirection, UCdirection): could not find function \"make_missing\" # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Prior specification — prior","title":"Prior specification — prior","text":"Specify priors chosen model. values entered manually default can recycled another prior (given update argument).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prior specification — prior","text":"","code":"prior(   design,   type = \"standard\",   update = NULL,   ask = NULL,   fill_default = TRUE,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prior specification — prior","text":"design Design list prior constructed, typically output design() type Character. type group-level model plan using .e. diagonal update Prior list copy values ask Character. parameter types ask prior specification, .e. Sigma, mu loadings factor models fill_default Boolean, TRUE fill non-specified parameters, parameters outside ask, default values ... Either values prefill, .e. theta_mu_mean = c(1:6), additional arguments n_factors = 2","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prior specification — prior","text":"prior list object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prior specification — prior","text":"value supplied, user prompted enter numeric values (functions evaluate numbers). get default prior type, run: get_prior_{type}(design = design, sample = F) E.g.: get_prior_diagonal(design = design, sample = F)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/prior.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prior specification — prior","text":"","code":"# First define a design for the model design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then set up a prior using prior p_vector=c(v_Sleft=-2,v_Sright=2,a=log(1),a_Eneutral=log(1.5),a_Eaccuracy=log(2),                      t0=log(.2),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) psd <- c(v_Sleft=1,v_Sright=1,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,                      t0=.4,Z=1,sv=.4,SZ=1) # Here we left the variance prior at default prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd) # Also add a group-level variance prior: pscale <- c(v_Sleft=.6,v_Sright=.6,a=.3,a_Eneutral=.3,a_Eaccuracy=.3,                              t0=.2,Z=.5,sv=.4,SZ=.3) df <- .4 prior_DDMaE <- prior(design_DDMaE,mu_mean=p_vector,mu_sd=psd, A = pscale, df = df) # If we specify a new design design_DDMat0E <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~E, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #>  [1] \"v_Sleft\"      \"v_Sright\"     \"a\"            \"a_Eneutral\"   \"a_Eaccuracy\"  #>  [6] \"t0\"           \"t0_Eneutral\"  \"t0_Eaccuracy\" \"Z\"            \"sv\"           #> [11] \"SZ\"           #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>         E t0 t0_Eneutral t0_Eaccuracy #>     speed  1           0            0 #>   neutral  1           1            0 #>  accuracy  1           0            1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # We can easily update the prior prior_DDMat0E <- prior(design_DDMat0E, update = prior_DDMaE)"},{"path":"https://ampl-psych.github.io/EMC2/reference/probit.html","id":null,"dir":"Reference","previous_headings":"","what":"Gaussian Signal Detection Theory Model — probit","title":"Gaussian Signal Detection Theory Model — probit","text":"Discrete choice based continuous Gaussian latent, rt. Model parameters mean (unbounded) sd (log scale) threshold, first value  natural scale, others designs two responses threshold increases log scale enforce monotonic increase natural scale.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/probit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gaussian Signal Detection Theory Model — probit","text":"","code":"probit()"},{"path":"https://ampl-psych.github.io/EMC2/reference/probit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gaussian Signal Detection Theory Model — probit","text":"model list necessary functions sample","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood profile plots — profile_plot","title":"Likelihood profile plots — profile_plot","text":"Creates likelihood profile plots design experimental data varying one model parameter holding others constant.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood profile plots — profile_plot","text":"","code":"profile_plot(   data,   design,   p_vector,   range = 0.5,   layout = NA,   p_min = NULL,   p_max = NULL,   use_par = NULL,   n_point = 100,   n_cores = 1,   round = 3,   true_plot_args = list(),   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood profile plots — profile_plot","text":"data dataframe. Experimental data used, needed design mapping design design list. Created using design. p_vector Named vector parameter values (typically created sampled_p_vector(design)) range Numeric. max min p_vector + range/2 p_vector - range/2, unless specified p_min p_max. layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. p_min Named vector. specified instead use values minimum range selected parameters. p_max Named vector. specified instead use values maximum range selected parameters. use_par Character vector. specified plot profiles specified parameters. n_point Integer. Number evenly spaced points calculate likelihood n_cores Number likelihood points evenly spaced minimum maximum likelihood range. round Integer. many digits output rounded. true_plot_args list. Optional additional arguments can passed plot.default plotting true vertical line. ... Optional additional arguments can passed plot.default.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood profile plots — profile_plot","text":"Vector highest likelihood point, input mismatch true highest point","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/profile_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood profile plots — profile_plot","text":"","code":"# \\donttest{ # First create a design design_DDMaE <- design(data = forstmann,model=DDM,                       formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                       constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then create a p_vector: p_vector=c(v_Sleft=-2,v_Sright=2,a=log(.95),a_Eneutral=log(1.5),a_Eaccuracy=log(2),           t0=log(.25),Z=qnorm(.5),sv=log(.5),SZ=qnorm(.5)) # Make a profile plot for some parameters. Specifying a custom range for t0. profile_plot(p_vector = p_vector, p_min = c(t0 = -1.35),              p_max = c(t0 = -1.45), use_par = c(\"a\", \"t0\", \"SZ\"),              data = forstmann, design = design_DDMaE, n_point = 10)  #>      true    max  miss #> a  -0.051 -0.190 0.139 #> t0 -1.386 -1.386 0.000 #> SZ  0.000 -0.139 0.139 # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery plots — recovery.emc","title":"Recovery plots — recovery.emc","text":"Plots recovery data generating parameters/samples. Full range samples manipulations described get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery plots — recovery.emc","text":"","code":"# S3 method for class 'emc' recovery(   emc,   true_pars,   selection = \"mu\",   layout = NA,   do_CI = TRUE,   correlation = \"pearson\",   stat = \"rmse\",   digits = 3,   CI = 0.95,   ci_plot_args = list(),   ... )  recovery(emc, ...)"},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery plots — recovery.emc","text":"emc emc object true_pars vector data-generating parameters emc object data-generating samples selection Character vector. Indicates parameter types plot (e.g., alpha, mu, sigma2, correlation). layout vector indicating layout use par(mfrow = layout). NA, automatically generate appropriate layout. do_CI Boolean. TRUE also include bars representing credible intervals correlation Character. correlation include plot. Options either pearson spearman stat Character. statistic include plot. Options either rmse coverage digits Integer. many digits round statistic correlation plot CI Numeric. size credible intervals. Default .95 (95%). ci_plot_args list. Optional additional arguments passed plot.default plotting credible intervals (see par()) ... Optional arguments can passed get_pars plot.default (see par())","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery plots — recovery.emc","text":"Invisible list RMSE, coverage, Pearson Spearman correlations.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/recovery.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recovery plots — recovery.emc","text":"","code":"# Make up some values that resemble posterior samples # Normally this would be true values that were used to simulate the data # Make up some values that resemble posterior samples # Normally this would be true values that were used to simulate the data pmat <- matrix(rnorm(12, mean = c(-1, -.6, -.4, -1.5), sd = .01), ncol = 4, byrow = TRUE) # Conventionally this would be created before one makes data with true values recovery(samples_LNR, pmat, correlation = \"pearson\", stat = \"rmse\", selection = \"alpha\")  # Similarly we can plot recovery of other parameters with a set of true samples true_samples <- samples_LNR # Normally this would be data-generating samples recovery(samples_LNR, true_samples, correlation = \"pearson\", stat = \"rmse\",          selection = \"correlation\", cex = 1.5,          ci_plot_args = list(lty = 3, length = .2, lwd = 2, col = \"brown\"))"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_IS2.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs IS2 from Tran et al. 2021 on a list of emc — run_IS2","title":"Runs IS2 from Tran et al. 2021 on a list of emc — run_IS2","text":"Runs IS2 list emc, works types standard, factor diagonal yet.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_IS2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs IS2 from Tran et al. 2021 on a list of emc — run_IS2","text":"","code":"run_IS2(   emc,   stage = \"sample\",   filter = 0,   IS_samples = 1000,   stepsize_particles = 500,   max_particles = 5000,   n_cores = 1,   df = 5 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_IS2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs IS2 from Tran et al. 2021 on a list of emc — run_IS2","text":"emc list emc stage string. Indicates stage take samples filter integer vector. integer specifies many samples remove within stage. vector used index samples keep. IS_samples integer. Specifies many IS2 samples collect stepsize_particles integer. increase particles till optimal variance stepsize. max_particles integer. Specifies maximum number particles collect stopping one iteration. n_cores integer. Specifies many cores run IS_2 . df integer. degrees freedom used t-distribution used distribution group-level proposals.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_IS2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs IS2 from Tran et al. 2021 on a list of emc — run_IS2","text":"emc, IS2 attribute","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_adapt.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs adapt stage for emc. — run_adapt","title":"Runs adapt stage for emc. — run_adapt","text":"Special instance run_emc, default arguments specified completing adaptation.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_adapt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs adapt stage for emc. — run_adapt","text":"","code":"run_adapt(   emc,   stop_criteria = NULL,   p_accept = 0.8,   step_size = 100,   verbose = FALSE,   verboseProgress = FALSE,   fileName = NULL,   particles = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   n_blocks = 1 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_adapt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs adapt stage for emc. — run_adapt","text":"emc emc object stop_criteria list. Defines stopping criteria types parameters hold. See ?fit. p_accept double. target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. Defaults .8 step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. verboseProgress Logical. Whether print progress bar within step . print one progress bar chain cores_for_chains = 1. fileName string. specified autosave emc location every iteration. particles integer. many particles use, default NULL particle_factor used instead. specified override particle_factor. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. n_blocks integer. Number blocks. block parameter chains updated blocks. can helpful extremely tough models large number parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_adapt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs adapt stage for emc. — run_adapt","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","title":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","text":"Uses bridge sampling matches proposal distribution first three moments posterior distribution get accurate estimate marginal likelihood. marginal likelihood can used computing Bayes factors posterior model probabilities.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","text":"","code":"run_bridge_sampling(   emc,   stage = \"sample\",   filter = NULL,   repetitions = 1,   cores_for_props = 4,   cores_per_prop = 1,   both_splits = TRUE,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","text":"emc emc object set converged samples stage character indicating stage use, defaults sample filter integer vector. integer, exclude integer. vector include everything range. repetitions integer. many times repeat bridge sampling scheme. Can help get estimate stability estimate. cores_for_props Integer. Warp-III evaluates posterior 4 different proposal densities. CPU, 4 cores parallel, 2 also already helpful. cores_per_prop Integer. Per density can also parallelize across subjects. Eventual cores cores_for_props * cores_per_prop. efficiency users prioritize cores_for_props 4. both_splits Boolean. Bridge sampling uses proposal density target density. can estimate stability samples therefore MLL estimate, running 2 bridge sampling iterations first one uses first half samples proposal second half target, second run uses opposite. set FALSE, run bridge sampling instead odd-even iterations split get reasonable estimate just one run. ... Additional, optional -depth hyperparameters","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","text":"vector length repetitions contains marginal log likelihood estimates per repetition","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","text":"enough posterior samples collected using fit(), bridge sampling can unstable. recommended run run_bridge_sampling() several times repetitions argument examine stable results . can difficult converge bridge sampling exceptionally large models, large number subjects (> 100) /cognitive model parameters. practical introduction: Gronau, Q. F., Heathcote, ., & Matzke, D. (2020). Computing Bayes factors evidence-accumulation models using Warp-III bridge sampling. Behavior research methods, 52(2), 918-937. doi.org/10.3758/s13428-019-01290-6 mathematical background: Meng, X.-L., & Wong, W. H. (1996). Simulating ratios normalizing constants via simple identity: theoretical exploration. Statistica Sinica, 6, 831-860. http://www3.stat.sinica.edu.tw/statistica/j6n4/j6n43/j6n43.htm Meng, X.-L., & Schilling, S. (2002). Warp bridge sampling. Journal Computational Graphical Statistics, 11(3), 552-586. doi.org/10.1198/106186002457","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_bridge_sampling.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimating Marginal likelihoods using WARP-III bridge sampling — run_bridge_sampling","text":"","code":"if (FALSE) { # \\dontrun{ # After `fit` has converged on a specific model # We can take those samples and calculate the marginal log-likelihood for them MLL <- run_bridge_sampling(list(samples_LNR), cores_per_prop = 2) # This will run on 2*4 cores (since 4 is the default for ``cores_for_props``) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom function for more controlled model estimation — run_emc","title":"Custom function for more controlled model estimation — run_emc","text":"Although typically users rely fit, function can used fine-tuned specification estimation needs. function throw error stage skipped, stages run order (\"preburn\", \"burn\", \"adapt\", \"sample\"). details can found fit help files (?fit).","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom function for more controlled model estimation — run_emc","text":"","code":"run_emc(   emc,   stage,   stop_criteria,   p_accept = 0.8,   step_size = 100,   verbose = FALSE,   verboseProgress = FALSE,   fileName = NULL,   particles = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   n_blocks = 1 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom function for more controlled model estimation — run_emc","text":"emc emc object stage string. Indicates stage run, either preburn, burn, adapt sample stop_criteria list. Defines stopping criteria types parameters hold. See ?fit. p_accept double. target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. Defaults .8 step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. verboseProgress Logical. Whether print progress bar within step . print one progress bar chain cores_for_chains = 1. fileName string. specified autosave emc location every iteration. particles integer. many particles use, default NULL particle_factor used instead. specified override particle_factor. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. n_blocks integer. Number blocks. block parameter chains updated blocks. can helpful extremely tough models large number parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom function for more controlled model estimation — run_emc","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom function for more controlled model estimation — run_emc","text":"","code":"if (FALSE) { # \\dontrun{ # First define a design design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) # Then make the emc, we've omitted a prior here for brevity so default priors will be used. emc <- make_emc(forstmann, design)  # Now for example we can specify that we only want to run the \"preburn\" phase # for MCMC 200 iterations emc <- run_emc(emc, stage = \"preburn\", stop_criteria = list(iter = 200)) } # }"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs sample stage for emc. — run_sample","title":"Runs sample stage for emc. — run_sample","text":"Special instance run_emc, default arguments specified running sample stage.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs sample stage for emc. — run_sample","text":"","code":"run_sample(   emc,   iter = 1000,   stop_criteria = NULL,   p_accept = 0.8,   step_size = 100,   verbose = FALSE,   verboseProgress = FALSE,   fileName = NULL,   particles = NULL,   particle_factor = 50,   cores_per_chain = 1,   cores_for_chains = length(emc),   max_tries = 20,   n_blocks = 1 )"},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs sample stage for emc. — run_sample","text":"emc emc object iter Integer. Number sample stage iterations run stop_criteria list. Defines stopping criteria types parameters hold. See ?fit. p_accept double. target acceptance probability MCMC process. fine-tunes width search space obtain desired acceptance probability. Defaults .8 step_size integer. step, stopping requirements specified stop_criteria checked proposal distributions updated. Defaults 100. verbose Logical. Whether print messages step current status regarding stop_criteria. verboseProgress Logical. Whether print progress bar within step . print one progress bar chain cores_for_chains = 1. fileName string. specified autosave emc location every iteration. particles integer. many particles use, default NULL particle_factor used instead. specified override particle_factor. particle_factor integer. particle_factor multiplied square root number sampled parameters determines number particles used. cores_per_chain integer. many cores use per chain. Parallelizes across participant calculations. available Linux Mac OS. Windows, parallelization across chains (cores_for_chains) available. cores_for_chains integer. many cores use across chains. Defaults number chains. total number cores used equal cores_per_chain * cores_for_chains. max_tries integer. many times try meet finish conditions specified stop_criteria? Defaults 20. max_tries ignored required number iterations reached yet. n_blocks integer. Number blocks. block parameter chains updated blocks. can helpful extremely tough models large number parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/run_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs sample stage for emc. — run_sample","text":"emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_p_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Get model parameters from a design — sampled_p_vector","title":"Get model parameters from a design — sampled_p_vector","text":"Makes vector zeroes, names length corresponding model parameters design.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_p_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get model parameters from a design — sampled_p_vector","text":"","code":"sampled_p_vector(   design,   model = NULL,   doMap = TRUE,   add_da = FALSE,   all_cells_dm = FALSE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_p_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get model parameters from a design — sampled_p_vector","text":"design list design made design(). model model list. Defaults model specified design list. doMap logical. TRUE also include attribute map design matrices perform mapping back design add_da Boolean. Whether include relevant data columns map attribute all_cells_dm Boolean. Whether include levels factor mapping attribute, even one dropped design","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_p_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get model parameters from a design — sampled_p_vector","text":"Named vector.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/sampled_p_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get model parameters from a design — sampled_p_vector","text":"","code":"# First define a design design_DDMaE <- design(data = forstmann,model=DDM,                            formula =list(v~0+S,a~E, t0~1, s~1, Z~1, sv~1, SZ~1),                            constants=c(s=log(1))) #> Parameter(s) DP, st0 not specified in formula and assumed constant. #>  #>  Sampled Parameters:  #> [1] \"v_Sleft\"     \"v_Sright\"    \"a\"           \"a_Eneutral\"  \"a_Eaccuracy\" #> [6] \"t0\"          \"Z\"           \"sv\"          \"SZ\"          #>  #>  Design Matrices:  #> $v #>      S v_Sleft v_Sright #>   left       1        0 #>  right       0        1 #>  #> $a #>         E a a_Eneutral a_Eaccuracy #>     speed 1          0           0 #>   neutral 1          1           0 #>  accuracy 1          0           1 #>  #> $t0 #>  t0 #>   1 #>  #> $s #>  s #>  1 #>  #> $Z #>  Z #>  1 #>  #> $sv #>  sv #>   1 #>  #> $SZ #>  SZ #>   1 #>  #> $DP #>  DP #>   1 #>  #> $st0 #>  st0 #>    1 #>  # Then for this design get which cognitive model parameters are sampled: sampled_p_vector(design_DDMaE) #>     v_Sleft    v_Sright           a  a_Eneutral a_Eaccuracy          t0  #>           0           0           0           0           0           0  #>           Z          sv          SZ  #>           0           0           0  #> attr(,\"map\") #> attr(,\"map\")$v #>    v_Sleft v_Sright #> 1        1        0 #> 58       0        1 #>  #> attr(,\"map\")$a #>    a a_Eneutral a_Eaccuracy #> 1  1          0           0 #> 20 1          1           0 #> 39 1          0           1 #>  #> attr(,\"map\")$t0 #>   t0 #> 1  1 #>  #> attr(,\"map\")$s #>   s #> 1 1 #>  #> attr(,\"map\")$Z #>   Z #> 1 1 #>  #> attr(,\"map\")$sv #>   sv #> 1  1 #>  #> attr(,\"map\")$SZ #>   SZ #> 1  1 #>  #> attr(,\"map\")$DP #>   DP #> 1  1 #>  #> attr(,\"map\")$st0 #>   st0 #> 1   1 #>"},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":null,"dir":"Reference","previous_headings":"","what":"An emc object of an LNR model of the Forstmann dataset using the first three subjects — samples_LNR","title":"An emc object of an LNR model of the Forstmann dataset using the first three subjects — samples_LNR","text":"emc object limited number samples subjects Forstmann dataset. object nested list lenght three, list containing MCMC samples respective chain. MCMC samples stored samples element.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An emc object of an LNR model of the Forstmann dataset using the first three subjects — samples_LNR","text":"","code":"samples_LNR"},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An emc object of an LNR model of the Forstmann dataset using the first three subjects — samples_LNR","text":"emc object. emc object list specific structure elements, outlined . data list dataframes, one subject included par_names character vector containing model parameter names n_pars number parameters model n_subjects number unique subject ID's data subjects vector containing unique subject ID's prior list holds prior theta_mu (model parameters). Contains mean (theta_mu_mean), covariance matrix (theta_mu_var), degrees freedom (v), scale () inverse covariance matrix (theta_mu_invar) ll_func log likelihood function used pmwg model estimation samples list defined structure containing samples, see Samples Element section detail grouped parameters grouped across subjects, case none sampler_nuis sampler list nuisance parameters (case none), similarly structured overall samples list one MCMC chains.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"An emc object of an LNR model of the Forstmann dataset using the first three subjects — samples_LNR","text":"https://www.pnas.org/doi/10.1073/pnas.0805903105","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/samples_LNR.html","id":"samples-element","dir":"Reference","previous_headings":"","what":"Samples Element","title":"An emc object of an LNR model of the Forstmann dataset using the first three subjects — samples_LNR","text":"samples element emc object contains different types samples estimated EMC2. include three main types samples theta_mu, theta_var alpha well number items detailed . theta_mu samples used estimating model parameters (group level), array size (n_pars x n_samples) theta_var samples used estimating parameter covariance matrix, array size (n_pars x n_pars x n_samples) alpha samples used estimating subject random effects, array size (n_pars x n_subjects x n_samples) stage vector containing PMwG stage sample drawn subj_ll winning particles log-likelihood subject sample a_half Mixing weights used Gibbs step creating new sample covariance matrix last_theta_var_inv inverse last samples covariance matrix idx index last sample drawn epsilon scaling parameter proposal distributions subject array size (n_subjects x n_samples) origin propoosal distribution accepted samples MCMC chain came, array size (n_subjects x n_samples)","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/standardize_loadings.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardized factor loadings — standardize_loadings","title":"Standardized factor loadings — standardize_loadings","text":"Returns set standardized factor loadings. standardization considers residual error well described Stevenson, Heathcote, Forstmann & Matzke, 2024.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/standardize_loadings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardized factor loadings — standardize_loadings","text":"","code":"standardize_loadings(   emc = NULL,   loadings = NULL,   sig_err_inv = NULL,   stage = \"sample\",   merge_chains = TRUE )"},{"path":"https://ampl-psych.github.io/EMC2/reference/standardize_loadings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardized factor loadings — standardize_loadings","text":"emc emc object samples hierarchical factor analysis model loadings Array pars factors iters. Can also specify loadings instead emc sig_err_inv Array pars iters. Can also specify sig_err_inv instead emc stage Character. stage take samples merge_chains Return loadings chain separately merged together.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/standardize_loadings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standardized factor loadings — standardize_loadings","text":"standardized loadings","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten an emc object — subset.emc","title":"Shorten an emc object — subset.emc","text":"Shorten emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten an emc object — subset.emc","text":"","code":"# S3 method for class 'emc' subset(   x,   stage = \"sample\",   filter = NULL,   thin = 1,   keep_stages = FALSE,   length.out = NULL,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorten an emc object — subset.emc","text":"x emc object stage character string. Indicates sampling stage(s) take samples (.e. preburn, burn, adapt, sample) filter Integer numeric vector. integer supplied, iterations integer removed. vector supplied, iterations within range kept. thin integer. much thin chains keep_stages Boolean. TRUE, remove samples unselected stages. length.Integer. Alternatively thinning, can also select desired length MCMC chains, thinned appropriately. ... additional optional arguments","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shorten an emc object — subset.emc","text":"shortened emc object","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/subset.emc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shorten an emc object — subset.emc","text":"","code":"subset(samples_LNR, length.out = 10) #> Iterations:  #>      preburn burn adapt sample #> [1,]       0    0     0     10 #> [2,]       0    0     0     10 #> [3,]       0    0     0     10 #>  #> Subjects:  #> [1] \"as1t\" \"bd6t\" \"bl1t\" #>  #> Parameters:  #> [1] \"m\"     \"m_lMd\" \"s\"     \"t0\""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics for emc objects — summary.emc","title":"Summary statistics for emc objects — summary.emc","text":"Computes quantiles, Rhat ESS selected model parameters.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics for emc objects — summary.emc","text":"","code":"# S3 method for class 'emc' summary(   object,   selection = c(\"mu\", \"sigma2\", \"alpha\"),   probs = c(0.025, 0.5, 0.975),   digits = 3,   ... )"},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics for emc objects — summary.emc","text":"object object class emc selection character string indicating parameter type Defaults mu, sigma2, alpha. See information. probs quantiles computed. Defaults 2.5%, 50% 97.5% quantiles. digits integer specifying rounding output. ... Optional arguments can passed get_pars","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary statistics for emc objects — summary.emc","text":"list summary output.","code":""},{"path":"https://ampl-psych.github.io/EMC2/reference/summary.emc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary statistics for emc objects — summary.emc","text":"Note selection = alpha by_subject = TRUE (default) used, summary statistics computed individual level. console summary statistics subjects returned function.","code":""}]
