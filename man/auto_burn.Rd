% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitting.R
\name{auto_burn}
\alias{auto_burn}
\title{Runs burn-in till the parameters have converged}
\usage{
auto_burn(
  samplers,
  ndiscard = 100,
  nstart = 300,
  particles = NA,
  particle_factor = 50,
  start_mu = NULL,
  start_var = NULL,
  mix = NULL,
  verbose = TRUE,
  verbose_run_stage = FALSE,
  epsilon = NULL,
  epsilon_upper_bound = 15,
  p_accept = 0.7,
  cores_per_chain = 1,
  cores_for_chains = NULL,
  max_gd_trys = 100,
  max_gd = 1.2,
  thorough = TRUE,
  mapped = FALSE,
  step_size = NA,
  min_es = NULL,
  min_iter = NULL,
  max_iter = NULL
)
}
\arguments{
\item{samplers}{List. Contains a sampler object for each chain, must be created using make_samplers()}

\item{ndiscard}{Integer. The number of samples to discard before calculating gelman diagnostics}

\item{nstart}{Integer. The number of samples to collect, added to ndiscard, before starting gelman diagnostics}

\item{particles}{Integer. The amount of particles to use in the sampling. More leads to broader search, but slower sampling. If not specified uses particle_factor}

\item{particle_factor}{Integer. Multiplied by the square root of the number of estimated parameters, this will determine the amount of particles to use in sampling if particles is not specified.}

\item{start_mu}{Numeric vector. Optional, startpoints for mean of the group level distribution in the sampling process. If not specified will sample from the prior. Must have length equal to number of sampled parameters.}

\item{start_var}{Matrix. Optional, startpoints for variance-covariance of the group level distribution in the sampling process. If not specified will sample from the prior. Nrow and ncol must be equal to number of sampled parameters.}

\item{mix}{Numeric vector. Optional, in the sampling process different proposal distributions are used. Mix determines the proportions of particles from each distribution. First element is group level, second element is individual level, third element is efficient distribution, must be 0 in burn-in and adapt.}

\item{verbose}{Logical. Whether to print messages related to EMC processes.}

\item{verbose_run_stage}{Logical. Whether to print messages related to the sampling procedure.}

\item{epsilon}{Integer. Dictates how wide PMwG will search the sampling space. If p_accept is set, serves merely as a start point.}

\item{epsilon_upper_bound}{Integer. Will make sure that p_accept does not tune epsilon to be over this bound.}

\item{p_accept}{Integer. PMwG will adaptively tune the sampling process to make sure that acceptance (the proportion of times a new set of parameters is accepted), matches p_accept.}

\item{cores_per_chain}{Integer. How many cores to parallellize across per chain. Most efficient when matched with or evenly divisible by the number of subjects. Default is 1.}

\item{cores_for_chains}{Integer. How many cores to parallellize across chains. Should either be evenly divisible or match the number of chains. Default is the number of chains.}

\item{max_gd_trys}{Integer. After this many times step_size iterations, EMC will stop.}

\item{max_gd}{Numeric. The max gelman diagnostic to consider unconverged.}

\item{thorough}{Logical. Whether to include the parameters from all participants in calculating the Gelman diagnostics or do it only based on the multivariate potential scale reduction factor. See ref. Default is 1.2}

\item{mapped}{Logical. Whether to calculate Gelman diagnostics over the parameters mapped back onto the scale they are interpreted at, or on their transformed scales. Default is FALSE.}

\item{step_size}{Integer. After nstart and ndiscard are sampled, EMC2 will calculate gelman diagnostics every time after this many iterations. Defaults to 1/3 of nstart + ndiscard.}

\item{min_es}{Integer. Optional, samples will only be considered converged if the effective sample size for each parameter is minimally min_es.}

\item{min_iter}{Integer. Optional, the minimal number of iterations before EMC2 will calculate convergence.}

\item{max_iter}{Integer. Optional, the maximum number of iterations before EMC2 will stop trying to run auto_burn.}
}
\description{
This function returns the samplers, one for each chain, with converged samples
}
