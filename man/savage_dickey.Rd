% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statistics.R
\name{savage_dickey}
\alias{savage_dickey}
\title{Savage dickey ratio computation}
\usage{
savage_dickey(
  samplers,
  parameter = NULL,
  H0 = 0,
  fun = NULL,
  selection = "mu",
  do_plot = TRUE,
  use_prior_lim = TRUE,
  prior_plot_args = list(),
  ...
)
}
\arguments{
\item{samplers}{A list, typically a \code{samplers}object, the output from \code{run_emc()}}

\item{parameter}{A string. A parameter which you want to compare to H0. Will not be used if a FUN is specified.}

\item{H0}{An integer. The H0 value which you want to compare to}

\item{fun}{A function. Specifies an operation to be performed on the sampled or mapped parameters.}

\item{selection}{A string. The default is \code{mu}. Whether to do the operation on
the \code{alpha}, \code{mu}, \code{covariance}, \code{variance}, or \code{correlation} parameters.}

\item{do_plot}{Boolean. Whether to include a plot of the prior and posterior density. With prior and posterior circles at H0.}

\item{use_prior_lim}{Boolean. If \code{TRUE} will use xlimits based on prior density, otherwise based on posterior density.}

\item{prior_plot_args}{A list. Optional additional arguments to be passed to plot.default for the plotting of the prior (see \code{par()})}

\item{...}{A list of optional arguments that can be passed to \code{as_mcmc_new}, \code{density}, or \code{plot.default} (see \code{par()})}

\item{filter}{A string. Specifies which stage the samples are to be taken from
\code{"preburn"}, \code{"burn"}, \code{"adapt"}, or \code{"sample"}}
}
\value{
The Bayes factor for the hypothesis against H0.
}
\description{
Can be used to approximate the Bayes factor for group-level parameter effects.
}
\details{
Note this is different to the computation of the marginal deviance in \code{compare}
since it only considers the group level effect and not the whole model.
For details see: Wagenmakers, Lodewyckx, Kuriyal, & Grasman (2010).
}
\examples{
\dontrun{
# Here the samplers object has an effect parameter (e.g. B_Eneutral),
# that maps onto a certain hypothesis.
# The hypothesis here is that B_Eneutral is different from zero.
# We can test whether there's a group-level effect of Eneutral on B:
savage_dickey(samplers, parameter = "B_Eneutral")
# Alternatively we can also test whether two parameters from each other
Bdiff <- function(p)diff(p[c("B_Eneutral","B_Eaccuracy")])
savage_dickey(samplers,fun=Bdiff)
}
}
