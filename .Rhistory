ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
design_RDM <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,S=ADmat,E=Emat),
Flist=list(v~lM,s~1,B~E,A~1,t0~1),
constants=c(s=log(1)),
model=rdmB)
# Test single subject
dat_single <- dat[which(dat$subjects %in% (unique(dat$subjects)[1:5])),]
dat_single <- droplevels(dat_single)
# first speed test:
samplers <- make_samplers(dat_single, design_RDM)
# first let's run init separately
samplers <- auto_burn(samplers, cores_per_chain =5, cores_for_chains = 3, useC = T, verbose = T)
library(EMC2)
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# Average rate = intercept, and rate d = difference (match-mismatch) contrast
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
design_RDM <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,S=ADmat,E=Emat),
Flist=list(v~lM,s~1,B~E,A~1,t0~1),
constants=c(s=log(1)),
model=rdmB)
# Test single subject
dat_single <- dat[which(dat$subjects %in% (unique(dat$subjects)[1:10])),]
dat_single <- droplevels(dat_single)
# first speed test:
samplers <- make_samplers(dat_single, design_RDM)
# first let's run init separately
samplers <- run_emc(samplers, cores_per_chain =5, cores_for_chains = 3, useC = T, verbose = T)
samplers <- run_IS2(samplers, filter = "burn", IS_samples = 1000, max_particles = 1000, n_cores = 15)
samplers <- run_IS2(samplers, IS_samples = 1000, max_particles = 1000, n_cores = 15)
hist(attr(samplers, "IS_samples"))
mean(attr(samplers, "IS_samples"))
hist(attr(samplers, "IS_samples"), breaks = 50)
library(rtdists)
data <- rdiffusion(100, 1, 1, .1)
debug(ddiffusion)
ddiffusion(data$rt, data$response, a = rep(c(1, 1.5), each = nrow(data)/2), v = rep(1, nrow(data)), t0 = rep(.1, nrow(data)))
debug(prepare_diffusion_parameter)
response
params
library(rtdists)
data <- rdiffusion(100, 1, 1, .1)
debug(ddiffusion)
ddiffusion(data$rt, data$response, a = rep(c(1, 1.5), each = nrow(data)/2), v = rep(1, nrow(data)), t0 = rep(.1, nrow(data)))
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
debug(rtdists::ddiffusion)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
densities
densities
apply(proposals[1:5,],1, ll_func,dadm = dadm)
undebug(rtdists::ddiffusion)
apply(proposals[5:10,],1, ll_func,dadm = dadm)
apply(proposals[7:8,],1, ll_func,dadm = dadm)
calc_ll(proposals[7:8,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
debug(rtdists::ddiffusion)
apply(proposals[7:8,],1, ll_func,dadm = dadm)
densities
log(abs(densities))
abs(densities)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
t1 <- calc_ll(proposals, dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
lls <- apply(proposals,1, ll_func,dadm = dadm)
undebug(rtdists::ddiffusion)
lls
lls[1:10]
t1[1:10]
calc_ll(proposals[c(5,8),], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
debug(rtdists::ddiffusion)
apply(proposals[c(5,8),],1, ll_func,dadm = dadm)
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
pars$params[ok_rows[1],
1:8]
length(pars$parameter_indices)
densities
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:20,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
undebug(rtdists::ddiffusion)
lls <- apply(proposals[1:20,],1, ll_func,dadm = dadm)
lls
debug(rtdists::ddiffusion)
calc_ll(proposals[2:3,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
lls[2:3]
apply(proposals[2:3,],1, ll_func,dadm = dadm)
densities
ok_rows <- pars$parameter_indices[[1]]
ok_rows
d_fastdm(rt[ok_rows], pars$params[ok_rows[1],
1:8], precision, pars$params[ok_rows[1], 9], stop_on_error)
rt[ok_rows]
which(d_fastdm(rt[ok_rows], pars$params[ok_rows[1], 1:8], precision, pars$params[ok_rows[1], 9], stop_on_error)) < -4
which(d_fastdm(rt[ok_rows], pars$params[ok_rows[1], 1:8], precision, pars$params[ok_rows[1], 9], stop_on_error) < -4)
rt[ok_rows][14]
pars$params[ok_rows[1], 9]
d_fastdm(rt[ok_rows], pars$params[ok_rows[1],1:8], precision, 2, stop_on_error)
d_fastdm(rt[ok_rows], pars$params[ok_rows[1],1:8], precision, 1, stop_on_error)
pars$params[ok_rows[1]
]
pars$params[ok_rows[1],
1:8]
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
lls <- apply(proposals[1:5,],1, ll_func,dadm = dadm)
lls
calc_ll(proposals[1:5,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
lls
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
lls <- apply(proposals[1:2,],1, ll_func,dadm = dadm)
densities
rt[ok_rows]
rt[ok_rows - 1]
ok_rows - 1
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
undebug(rtdists::ddiffusion)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
debug(rtdists::ddiffusion)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
rt[ok_rows]
pars$params[ok_rows[1],
1:8]
densities
densities
ok_rows
densities
ok_rows
rt[ok_rows]
i
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
pars$params[ok_rows[1],
1:8]
densities[ok_rows] <- d_fastdm(rt[ok_rows], pars$params[ok_rows[1],
1:8], precision, pars$params[ok_rows[1], 9], stop_on_error)
densities[ok_rows]
length(ok_rows)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
undebug(rtdists::ddiffusion)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
debug(rtdists::ddiffusion)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
pars$params[ok_rows[1], 9]
pars$params[ok_rows[1], 9]
rt[ok_rows]
d_fastdm(rt[ok_rows], pars$params[ok_rows[1],
1:8], precision, pars$params[ok_rows[1], 9], stop_on_error)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
calc_ll(proposals[1:2,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
undebug(rtdists::ddiffusion)
apply(proposals[1:2,],1, ll_func,dadm = dadm)
calc_ll(proposals[1:5,], dadm, constants = constants, n_trials = n_trials, designs = designs, type = c_name, p_types = p_types,
min_ll = log(1e-10), winner = dadm$winner, expand = attr(dadm, "expand"), group_idx = parameter_indices)
apply(proposals[1:5,],1, ll_func,dadm = dadm)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
debug(EMC2:::calc_ll_manager)
samplers <- make_samplers(dat, design_a)
run_emc(samplers, verbose = T, cores_for_chains = 1, useC = T, particles = 2)
lls
t1 <- apply(proposals,1, ll_func,dadm = dadm)
all.equal(t1, lls)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
samplers <- make_samplers(dat, design_a)
library(devtools)
load_all()
print(load("test_files/PNAS.RData"))
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
Vmat <- matrix(c(-1,1),ncol=1,dimnames=list(NULL,""))
Vmat
design_a <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),
Clist=list(S=Vmat,E=Emat),
Flist=list(v~S,a~E,sv~1, t0~1, st0~1, s~1, Z~1, SZ~1, DP~1),
constants=c(s=log(1),st0=log(0),DP=qnorm(0.5),SZ=qnorm(0),sv=log(0)),
model=ddmTZD)
samplers <- make_samplers(dat, design_a)
microbenchmark::microbenchmark(
run_samplers(samplers, stage = "preburn", iter = 10, useC = T),
run_samplers(samplers, stage = "preburn", iter = 10), n_times = 10
)
samplers <- run_samplers(samplers, stage = "preburn", iter = 10, useC = T)
samplers <- run_samplers(samplers, stage = "preburn", iter = 10, useC = F)
microbenchmark::microbenchmark(
run_samplers(samplers, stage = "preburn", iter = 10, useC = T),
run_samplers(samplers, stage = "preburn", iter = 10), n_times = 10
)
run_samplers(samplers, stage = "preburn", iter = 10, useC = T),
run_samplers(samplers, stage = "preburn", iter = 10, useC = T)
t1 <- run_samplers(samplers, stage = "preburn", iter = 10, useC = T),
t1 <- run_samplers(samplers, stage = "preburn", iter = 10, useC = T)
t1 <- run_samplers(samplers, stage = "preburn", iter = 10, useC = F)
