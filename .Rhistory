Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T)
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T)
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T)
gp(prior, type = selection, design = design,N=dim(data)[1])[[selection]]
selection
prior
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T)
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T)
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T)
plot_prior(prior = priorB, design = design_B, mapped = T)
debug(gp)
prior$theta_mu_mean
N
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "variance")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "variance")
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
matrix(pp_var[i,], n_pars, n_pars)
pp_var[i,]
length(pp_var)
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
vars[lower.tri(vars, diag = T)] <- pp_var[i,]
sum(lower.tri(vars, diag = T))
length(pp_var[i,])
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
vars
diag(vars)
length(pp_var)
length(pp_var[i,])
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
samples[i,] <- rmvnorm(1, pp_mu[i,], matrix(pp_var[i,], n_pars, n_pars))
vars
vars[upper.tri(vars)] <- t(pp_cov[i,])
vars
vars[upper.tri(vars)] <- t(vars[lower.tri(vars)])
vars
vars[upper.tri(vars)] <- (vars[lower.tri(vars)])
vars
pp_cov
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
matrix(pp_var[i,], n_pars, n_pars)
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
matrix(pp_var[i,], n_pars, n_pars)
pp_var
length(pp_var[i,])
dim(pp_var)
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
matrix(pp_var[i,], n_pars, n_pars)
samples
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
debug(plot_prior)
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = T, selection = "alpha")
rm(list=ls())
devtools::load_all()
# Load and format the PNAS data.
load("test_files/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
#### LBA Models ----
# Average rate = intercept, and rate d = difference (match-mismatch) contrast,
# Note d is analogous to r in the DDM, but use of -1/2 as unlike DDM don't want
# half the difference. In this case the intercept is of interest, it is
# and index of decision urgency and stimulus magnitude effects.
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d")); ADmat
# Emphasis as before, intercept is overall caution like in DDM
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s")); Emat
# Standard assumption, only B affected by E. To fix scale sv=1
design_B <- make_design(ddata = dat, matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,E=Emat),
Flist=list(v~lM,sv~1,B~E,A~1,t0~1),
constants=c(sv=log(1)),
model=LBA)
priorB <- list(theta_mu_mean = c(v=2.2,v_lMd=2.5,B=log(2),'B_Ea-n'=0,'B_Ea-s'=0,A=log(1),t0=log(.2)),
theta_mu_var = diag(c(1,1,0.1,0.075,0.075,0.1,0.2)))
plot_prior(prior = priorB, design = design_B, mapped = F, selection = "alpha")
