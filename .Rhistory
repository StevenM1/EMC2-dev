#
# setwd("~/Documents/UVA/2023")
# source("rsp_parallel_new.R")
#
# res <- rsp_mc(lambda_mcmc, n_cores = 10, rotate = F)
#
#
# make_hists <- function(prior, reordered, title = "loadings density"){
#   prior_df <- data.frame(values = prior, iteration = 1:length(prior), name = "prior")
#   reordered_df <- data.frame(values = reordered, iteration = 1:length(reordered), name = "reordered")
#   colnames(prior_df) <- c("values", "iteration", "name")
#   colnames(reordered_df) <- c("values", "iteration", "name")
#   df <- rbind(prior_df, reordered_df)
#   p <- ggplot(df, aes(values)) +
#     geom_density(data = df, aes(fill=name), alpha = .25)+
#     ggtitle(title)+
#     xlim(-5,5) +
#     theme_bw()
#   plot(p)
# }
#
# lambda_reordered <- array(0, dim = c(n_pars, max_factors, nrow(res$lambda_reordered_mcmc)))
# for(i in 1:nrow(res$lambda_reordered_mcmc)){
#   lambda_reordered[,,i] <- matrix(res$lambda_reordered_mcmc[i,], nrow = n_pars, byrow = T)
# }
#
#
# R <- 1
# C <- 2
# make_hists(lambdas[R,C,], lambda_reordered[R,C,])
#
# #
# # install.packages("infinitefactor")
# # library(infinitefactor)
# #
# # calc_loadings_prior <- function(loadings_matrix){
# #   psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
# #   delta <- numeric(n_factors)
# #   delta[1] <- 1/rgamma(1, a1, b1)
# #   if(n_factors > 1){
# #     delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
# #   }
# #   tau <- cumprod(delta)
# #   sigma <- 1/rgamma(n_pars, as, bs)
# #   lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
# #   for(j in 1:n_factors){
# #     lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
# #   }
# # }
# #
# #
as <- 10
bs <- 1
df <- 5
a1 <- 10
b1 <- 1
a2 <- 5
b2 <- 4
n_factors <- 10
n_pars <- 4
N <- 1e4
covs <- array(0, dim = c(n_pars, n_pars, N))
corrs <- array(0, dim = c(n_pars, n_pars, N))
lambdas <- array(0, dim = c(n_pars, n_factors, N))
for(i in 1:N){
psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
delta <- numeric(n_factors)
delta[1] <- 1/rgamma(1, a1, b1)
if(n_factors > 1){
delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
}
tau <- cumprod(delta)
sigma <- 1/rgamma(n_pars, as, bs)
lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
for(j in 1:n_factors){
lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
}
cov <- lambda %*% t(lambda) + diag(sigma)
lambdas[,,i] <- lambda
covs[,,i] <- cov
corrs[,,i] <- cov2cor(cov)
}
par(mfrow = c(2,2))
test_var <- covs[1,1,]
plot(density(test_var[test_var < 5]), main = "var")
#
# median(covs[1,1,])
#
test_cov <- covs[1,2,]
plot(density(test_cov[abs(test_cov) < 1]), main = "cov")
test_cor <- corrs[1,2,]
plot(density(test_cor[abs(test_cor) < 4]), main = "cor")
#
test_lambda <- lambdas[1,1,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda")
# test_lambda <- lambdas[1,1,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda1")
#
# test_lambda <- lambdas[1,3,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda3")
#
# test_lambda <- lambdas[1,5,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda5")
#
# test_lambda <- lambdas[1,7,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda7")
# plot(density(1/rgamma(1e6, as, bs)), main = "sig_resid")
#
# library(factor.switching)
# max_factors <- 2
# loadings_recov <- aperm(lambdas, c(2,1,3))
# lambda_mcmc <- t(matrix(loadings_recov, prod(dim(loadings_recov)[1:2]), dim(loadings_recov)[3]))
# expanded <- expand.grid(1:max_factors, 1:n_pars)
# colnames(lambda_mcmc) <- paste0("LambdaV", expanded[,2], "_", expanded[,1])
#
# setwd("~/Documents/UVA/2023")
# source("rsp_parallel_new.R")
#
# res <- rsp_mc(lambda_mcmc, n_cores = 10, rotate = F)
#
#
# make_hists <- function(prior, reordered, title = "loadings density"){
#   prior_df <- data.frame(values = prior, iteration = 1:length(prior), name = "prior")
#   reordered_df <- data.frame(values = reordered, iteration = 1:length(reordered), name = "reordered")
#   colnames(prior_df) <- c("values", "iteration", "name")
#   colnames(reordered_df) <- c("values", "iteration", "name")
#   df <- rbind(prior_df, reordered_df)
#   p <- ggplot(df, aes(values)) +
#     geom_density(data = df, aes(fill=name), alpha = .25)+
#     ggtitle(title)+
#     xlim(-5,5) +
#     theme_bw()
#   plot(p)
# }
#
# lambda_reordered <- array(0, dim = c(n_pars, max_factors, nrow(res$lambda_reordered_mcmc)))
# for(i in 1:nrow(res$lambda_reordered_mcmc)){
#   lambda_reordered[,,i] <- matrix(res$lambda_reordered_mcmc[i,], nrow = n_pars, byrow = T)
# }
#
#
# R <- 1
# C <- 2
# make_hists(lambdas[R,C,], lambda_reordered[R,C,])
#
# #
# # install.packages("infinitefactor")
# # library(infinitefactor)
# #
# # calc_loadings_prior <- function(loadings_matrix){
# #   psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
# #   delta <- numeric(n_factors)
# #   delta[1] <- 1/rgamma(1, a1, b1)
# #   if(n_factors > 1){
# #     delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
# #   }
# #   tau <- cumprod(delta)
# #   sigma <- 1/rgamma(n_pars, as, bs)
# #   lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
# #   for(j in 1:n_factors){
# #     lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
# #   }
# # }
# #
# #
as <- 10
bs <- 1
df <- 5
a1 <- 2
b1 <- 1
a2 <- 5
b2 <- 4
n_factors <- 10
n_pars <- 4
N <- 1e4
covs <- array(0, dim = c(n_pars, n_pars, N))
corrs <- array(0, dim = c(n_pars, n_pars, N))
lambdas <- array(0, dim = c(n_pars, n_factors, N))
for(i in 1:N){
psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
delta <- numeric(n_factors)
delta[1] <- 1/rgamma(1, a1, b1)
if(n_factors > 1){
delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
}
tau <- cumprod(delta)
sigma <- 1/rgamma(n_pars, as, bs)
lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
for(j in 1:n_factors){
lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
}
cov <- lambda %*% t(lambda) + diag(sigma)
lambdas[,,i] <- lambda
covs[,,i] <- cov
corrs[,,i] <- cov2cor(cov)
}
par(mfrow = c(2,2))
test_var <- covs[1,1,]
plot(density(test_var[test_var < 5]), main = "var")
#
# median(covs[1,1,])
#
test_cov <- covs[1,2,]
plot(density(test_cov[abs(test_cov) < 1]), main = "cov")
test_cor <- corrs[1,2,]
plot(density(test_cor[abs(test_cor) < 4]), main = "cor")
#
test_lambda <- lambdas[1,1,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda")
# test_lambda <- lambdas[1,1,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda1")
#
# test_lambda <- lambdas[1,3,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda3")
#
# test_lambda <- lambdas[1,5,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda5")
#
# test_lambda <- lambdas[1,7,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda7")
# plot(density(1/rgamma(1e6, as, bs)), main = "sig_resid")
#
# library(factor.switching)
# max_factors <- 2
# loadings_recov <- aperm(lambdas, c(2,1,3))
# lambda_mcmc <- t(matrix(loadings_recov, prod(dim(loadings_recov)[1:2]), dim(loadings_recov)[3]))
# expanded <- expand.grid(1:max_factors, 1:n_pars)
# colnames(lambda_mcmc) <- paste0("LambdaV", expanded[,2], "_", expanded[,1])
#
# setwd("~/Documents/UVA/2023")
# source("rsp_parallel_new.R")
#
# res <- rsp_mc(lambda_mcmc, n_cores = 10, rotate = F)
#
#
# make_hists <- function(prior, reordered, title = "loadings density"){
#   prior_df <- data.frame(values = prior, iteration = 1:length(prior), name = "prior")
#   reordered_df <- data.frame(values = reordered, iteration = 1:length(reordered), name = "reordered")
#   colnames(prior_df) <- c("values", "iteration", "name")
#   colnames(reordered_df) <- c("values", "iteration", "name")
#   df <- rbind(prior_df, reordered_df)
#   p <- ggplot(df, aes(values)) +
#     geom_density(data = df, aes(fill=name), alpha = .25)+
#     ggtitle(title)+
#     xlim(-5,5) +
#     theme_bw()
#   plot(p)
# }
#
# lambda_reordered <- array(0, dim = c(n_pars, max_factors, nrow(res$lambda_reordered_mcmc)))
# for(i in 1:nrow(res$lambda_reordered_mcmc)){
#   lambda_reordered[,,i] <- matrix(res$lambda_reordered_mcmc[i,], nrow = n_pars, byrow = T)
# }
#
#
# R <- 1
# C <- 2
# make_hists(lambdas[R,C,], lambda_reordered[R,C,])
#
# #
# # install.packages("infinitefactor")
# # library(infinitefactor)
# #
# # calc_loadings_prior <- function(loadings_matrix){
# #   psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
# #   delta <- numeric(n_factors)
# #   delta[1] <- 1/rgamma(1, a1, b1)
# #   if(n_factors > 1){
# #     delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
# #   }
# #   tau <- cumprod(delta)
# #   sigma <- 1/rgamma(n_pars, as, bs)
# #   lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
# #   for(j in 1:n_factors){
# #     lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
# #   }
# # }
# #
# #
as <- 10
bs <- 1
df <- 5
a1 <- 5
b1 <- 1
a2 <- 5
b2 <- 4
n_factors <- 10
n_pars <- 4
N <- 1e4
covs <- array(0, dim = c(n_pars, n_pars, N))
corrs <- array(0, dim = c(n_pars, n_pars, N))
lambdas <- array(0, dim = c(n_pars, n_factors, N))
for(i in 1:N){
psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
delta <- numeric(n_factors)
delta[1] <- 1/rgamma(1, a1, b1)
if(n_factors > 1){
delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
}
tau <- cumprod(delta)
sigma <- 1/rgamma(n_pars, as, bs)
lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
for(j in 1:n_factors){
lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
}
cov <- lambda %*% t(lambda) + diag(sigma)
lambdas[,,i] <- lambda
covs[,,i] <- cov
corrs[,,i] <- cov2cor(cov)
}
par(mfrow = c(2,2))
test_var <- covs[1,1,]
plot(density(test_var[test_var < 5]), main = "var")
#
# median(covs[1,1,])
#
test_cov <- covs[1,2,]
plot(density(test_cov[abs(test_cov) < 1]), main = "cov")
test_cor <- corrs[1,2,]
plot(density(test_cor[abs(test_cor) < 4]), main = "cor")
#
test_lambda <- lambdas[1,1,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda")
# test_lambda <- lambdas[1,1,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda1")
#
# test_lambda <- lambdas[1,3,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda3")
#
# test_lambda <- lambdas[1,5,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda5")
#
# test_lambda <- lambdas[1,7,]
# plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda7")
# plot(density(1/rgamma(1e6, as, bs)), main = "sig_resid")
#
# library(factor.switching)
# max_factors <- 2
# loadings_recov <- aperm(lambdas, c(2,1,3))
# lambda_mcmc <- t(matrix(loadings_recov, prod(dim(loadings_recov)[1:2]), dim(loadings_recov)[3]))
# expanded <- expand.grid(1:max_factors, 1:n_pars)
# colnames(lambda_mcmc) <- paste0("LambdaV", expanded[,2], "_", expanded[,1])
#
# setwd("~/Documents/UVA/2023")
# source("rsp_parallel_new.R")
#
# res <- rsp_mc(lambda_mcmc, n_cores = 10, rotate = F)
#
#
# make_hists <- function(prior, reordered, title = "loadings density"){
#   prior_df <- data.frame(values = prior, iteration = 1:length(prior), name = "prior")
#   reordered_df <- data.frame(values = reordered, iteration = 1:length(reordered), name = "reordered")
#   colnames(prior_df) <- c("values", "iteration", "name")
#   colnames(reordered_df) <- c("values", "iteration", "name")
#   df <- rbind(prior_df, reordered_df)
#   p <- ggplot(df, aes(values)) +
#     geom_density(data = df, aes(fill=name), alpha = .25)+
#     ggtitle(title)+
#     xlim(-5,5) +
#     theme_bw()
#   plot(p)
# }
#
# lambda_reordered <- array(0, dim = c(n_pars, max_factors, nrow(res$lambda_reordered_mcmc)))
# for(i in 1:nrow(res$lambda_reordered_mcmc)){
#   lambda_reordered[,,i] <- matrix(res$lambda_reordered_mcmc[i,], nrow = n_pars, byrow = T)
# }
#
#
# R <- 1
# C <- 2
# make_hists(lambdas[R,C,], lambda_reordered[R,C,])
#
# #
# # install.packages("infinitefactor")
# # library(infinitefactor)
# #
# # calc_loadings_prior <- function(loadings_matrix){
# #   psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
# #   delta <- numeric(n_factors)
# #   delta[1] <- 1/rgamma(1, a1, b1)
# #   if(n_factors > 1){
# #     delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
# #   }
# #   tau <- cumprod(delta)
# #   sigma <- 1/rgamma(n_pars, as, bs)
# #   lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
# #   for(j in 1:n_factors){
# #     lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
# #   }
# # }
# #
# #
test_lambda <- lambdas[1,1,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda1")
test_lambda <- lambdas[1,3,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda3")
test_lambda <- lambdas[1,5,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda5")
test_lambda <- lambdas[1,7,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda7")
as <- 10
bs <- 1
df <- 5
a1 <- 5
b1 <- 1
a2 <- 10
b2 <- 9
n_factors <- 10
n_pars <- 4
N <- 1e4
covs <- array(0, dim = c(n_pars, n_pars, N))
corrs <- array(0, dim = c(n_pars, n_pars, N))
lambdas <- array(0, dim = c(n_pars, n_factors, N))
for(i in 1:N){
psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
delta <- numeric(n_factors)
delta[1] <- 1/rgamma(1, a1, b1)
if(n_factors > 1){
delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
}
tau <- cumprod(delta)
sigma <- 1/rgamma(n_pars, as, bs)
lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
for(j in 1:n_factors){
lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
}
cov <- lambda %*% t(lambda) + diag(sigma)
lambdas[,,i] <- lambda
covs[,,i] <- cov
corrs[,,i] <- cov2cor(cov)
}
par(mfrow = c(2,2))
test_var <- covs[1,1,]
plot(density(test_var[test_var < 5]), main = "var")
#
# median(covs[1,1,])
#
test_cov <- covs[1,2,]
plot(density(test_cov[abs(test_cov) < 1]), main = "cov")
test_cor <- corrs[1,2,]
plot(density(test_cor[abs(test_cor) < 4]), main = "cor")
#
test_lambda <- lambdas[1,1,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda")
test_lambda <- lambdas[1,1,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda1")
test_lambda <- lambdas[1,3,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda3")
test_lambda <- lambdas[1,5,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda5")
test_lambda <- lambdas[1,7,]
plot(density(test_lambda[abs(test_lambda) < 2]), main = "lambda7")
# plot(density(1/rgamma(1e6, as, bs)), main = "sig_resid")
#
# library(factor.switching)
# max_factors <- 2
# loadings_recov <- aperm(lambdas, c(2,1,3))
# lambda_mcmc <- t(matrix(loadings_recov, prod(dim(loadings_recov)[1:2]), dim(loadings_recov)[3]))
# expanded <- expand.grid(1:max_factors, 1:n_pars)
# colnames(lambda_mcmc) <- paste0("LambdaV", expanded[,2], "_", expanded[,1])
#
# setwd("~/Documents/UVA/2023")
# source("rsp_parallel_new.R")
#
# res <- rsp_mc(lambda_mcmc, n_cores = 10, rotate = F)
#
#
# make_hists <- function(prior, reordered, title = "loadings density"){
#   prior_df <- data.frame(values = prior, iteration = 1:length(prior), name = "prior")
#   reordered_df <- data.frame(values = reordered, iteration = 1:length(reordered), name = "reordered")
#   colnames(prior_df) <- c("values", "iteration", "name")
#   colnames(reordered_df) <- c("values", "iteration", "name")
#   df <- rbind(prior_df, reordered_df)
#   p <- ggplot(df, aes(values)) +
#     geom_density(data = df, aes(fill=name), alpha = .25)+
#     ggtitle(title)+
#     xlim(-5,5) +
#     theme_bw()
#   plot(p)
# }
#
# lambda_reordered <- array(0, dim = c(n_pars, max_factors, nrow(res$lambda_reordered_mcmc)))
# for(i in 1:nrow(res$lambda_reordered_mcmc)){
#   lambda_reordered[,,i] <- matrix(res$lambda_reordered_mcmc[i,], nrow = n_pars, byrow = T)
# }
#
#
# R <- 1
# C <- 2
# make_hists(lambdas[R,C,], lambda_reordered[R,C,])
#
# #
# # install.packages("infinitefactor")
# # library(infinitefactor)
# #
# # calc_loadings_prior <- function(loadings_matrix){
# #   psi <- matrix(1/rgamma(n_factors*n_pars, df/2, df/2), nrow = n_pars, ncol = n_factors)
# #   delta <- numeric(n_factors)
# #   delta[1] <- 1/rgamma(1, a1, b1)
# #   if(n_factors > 1){
# #     delta[2:n_factors] <- 1/rgamma(n_factors -1, a2, b2)
# #   }
# #   tau <- cumprod(delta)
# #   sigma <- 1/rgamma(n_pars, as, bs)
# #   lambda <- matrix(0, nrow = n_pars, ncol = n_factors)
# #   for(j in 1:n_factors){
# #     lambda[,j] <- rnorm(n_pars, mean = 0, sd = psi[,j]*tau[j])
# #   }
# # }
# #
# #
