library(usethis)
usethis::create_package()
usethis::use_description()
load_all()
library(devtools)
load_all()
ls("EMC2")
ls("package:EMC2")
lsf.str("package:dplyr")
library(EMC2)
library(EMC2)
check()
check()
install.packages("rtdists")
install.packages("rtdists")
install.packages('rtdists')
rm(list=ls())
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
load_all()
library(devtools)
rm(list=ls())
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
load_all()
rm(list=ls())
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
# Test single subject
dat_single <- dat[which(dat$subjects %in% (unique(dat$subjects)[1])),]
dat_single <- droplevels(dat_single)
samplers <- make_samplers(dat_single, design_mu, type = "single")
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
samplers <- make_samplers(dat_single, design_mu, type = "single", n_chains = 1)
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
samplers <- run_samplers(samplers, stage = "burn", iter = 1000, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
warnings()
debug(update_progress_bar)
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
debug(accept_progress_bar)
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
?gettextf
width
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
nchar(lapply(component, gettextf, 100), "w")
load_all()
debug(accept_progress_bar)
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
width
undebug(accept_progress_bar)
samplers <- run_samplers(samplers, stage = "preburn", iter = 200, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
samplers <- run_samplers(samplers, stage = "burn", iter = 1000, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
rm(list=ls())
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
# Test single subject
dat_single <- dat[which(dat$subjects %in% (unique(dat$subjects)[1])),]
dat_single <- droplevels(dat_single)
samplers <- make_samplers(dat_single, design_mu, type = "single", n_chains = 1)
samplers <- run_samplers(samplers, stage = "preburn", iter = 150, verbose = T, cores_per_chain = 10, cores_for_chains = 1)
rm(list=ls())
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
rm(list=ls())
library(devtools)
load_all()
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
# Test single subject
dat_single <- dat[which(dat$subjects %in% (unique(dat$subjects)[1])),]
dat_single <- droplevels(dat_single)
samplers <- make_samplers(dat_single, design_mu, type = "single", n_chains = 1)
debug(new_particle)
samplers <- run_samplers(samplers, stage = "preburn", iter = 150, verbose = T, cores_per_chain = 1, cores_for_chains = 1)
debug(likelihood_func)
debug(log_likelihood_race)
debug(get_pars)
debug(map_p)
map_p(
attr(dadm,"model")()$transform(add_constants(p_vector,attr(dadm,"constants"))),
dadm)
p
dadm
length(attr(dadm,"model")()$p_types)
attr(dadm,"designs")[[i]][attr(attr(dadm,"designs")[[i]],"expand"),,drop=FALSE]
p[dimnames(attr(dadm,"designs")[[i]])[[2]]]
(attr(dadm,"designs")[[i]][attr(attr(dadm,"designs")[[i]],"expand"),,drop=FALSE] %*%
p[dimnames(attr(dadm,"designs")[[i]])[[2]]])
<<<<<<< HEAD
=======
library(devtools)
load_all()
load_all()
library(devtools)
load_all()
ls("package:EMC2")
ls("package:EMC2")
gd_pmwg
?as_mcmc
library(coda)
rm(list=ls())
library(devtools)
load_all()
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# head(dat)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
#### Models -----
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
lnrMS
rm(list=ls())
library(devtools)
load_all()
load("~/Documents/UVA/2022/EMC_test/PNAS.RData")
dat <- data[,c("s","E","S","R","RT")]
names(dat)[c(1,5)] <- c("subjects","rt")
levels(dat$R) <- levels(dat$S)
# Average and difference matrix
ADmat <- matrix(c(-1/2,1/2),ncol=1,dimnames=list(NULL,"d"))
ADmat
Emat <- matrix(c(0,-1,0,0,0,-1),nrow=3)
dimnames(Emat) <- list(NULL,c("a-n","a-s"))
Emat
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
debug(make_design)
# Mu varies by stimulus, emphasis, and latent match
design_mu <- make_design(
Ffactors=list(subjects=levels(dat$subjects),S=levels(dat$S),E=levels(dat$E)),
Rlevels=levels(dat$R),matchfun=function(d)d$S==d$lR,
Clist=list(lM=ADmat,lR=ADmat,E=Emat,S=ADmat),
Flist=list(m~S*E*lM,s~1,t0~1),
model=lnrMS)
>>>>>>> origin/main
# base test
check_fileName <- function(x){
if(substr(x, nchar(x)-3, nchar(x)))
}
check_fileName <- function(x){
if(substr(x, nchar(x)-4, nchar(x)) == "RData") return(T)
}
check_fileName("test.RData")
x <- "test.RData"
substr(x, nchar(x)-5, nchar(x))
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x)) == "RData"
if(ext == ".RData" | ext == ".Rdata"){
return(paste0(x, ".RData"))
}
}
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x)) == "RData"
if(ext == ".RData" | ext == ".Rdata"){
return(paste0(x, ".RData"))
} else{
return(x)
}
}
check_fileName("test.Rdata")
check_fileName("test")
debug(check_fileName)
check_fileName("test")
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x))
if(ext == ".RData" | ext == ".Rdata"){
return(paste0(x, ".RData"))
} else{
return(x)
}
}
check_fileName("test")
debug(check_fileName)
check_fileName("test")
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x))
if(ext != ".RData" | ext != ".Rdata"){
return(paste0(x, ".RData"))
} else{
return(x)
}
}
check_fileName("test")
check_fileName("test.Rdata")
debug(check_fileName)
check_fileName("test.Rdata")
ext == ".Rdata"
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x))
if(ext != ".RData" || ext != ".Rdata"){
return(paste0(x, ".RData"))
} else{
return(x)
}
}
check_fileName("test.Rdata")
debug(check_fileName)
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x))
if(ext != ".RData" || ext != ".Rdata"){
return(paste0(x, ".RData"))
} else{
return(x)
}
}
debug(check_fileName)
check_fileName("test.Rdata")
ext != ".Rdata"
check_fileName <- function(x){
ext <- substr(x, nchar(x)-5, nchar(x))
if(ext != ".RData" & ext != ".Rdata"){
return(paste0(x, ".RData"))
} else{
return(x)
}
}
check_fileName("test.Rdata")
check_fileName("test.RData")
check_fileName("test")
library(devtools)
document()
document()
load_all()
library(devtools)
load_all()
document()
